2025-03-29 18:11:11,710 p=16078 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:11:12,457 p=16078 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:11:13,720 p=16078 u=vagrant n=ansible | [WARNING]: Platform linux on host controller is using the discovered Python interpreter at /usr/bin/python3.10, but
future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 18:11:13,721 p=16078 u=vagrant n=ansible | controller | CHANGED | rc=0 >>
bridge name	bridge id		STP enabled	interfaces
br-mgmt		8000.0ee8ef53c060	no		enp0s8
br-storage		8000.7685d15ed5f9	no		enp0s10
br-vxlan		8000.9e298bd413d4	no		enp0s9
lxcbr0		8000.00163e000000	no		

2025-03-29 18:20:01,313 p=16318 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:20:02,087 p=16318 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:20:03,812 p=16318 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-galera-container-f800b10b: unexpected
output from Python interpreter discovery

2025-03-29 18:20:03,882 p=16318 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-galera-container-f800b10b is using the discovered Python interpreter
at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 18:20:03,884 p=16318 u=vagrant n=ansible | controller-galera-container-f800b10b | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "lxc-attach: controller-galera-container-f800b10b: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\nlxc-attach: controller-galera-container-f800b10b: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:20:03,986 p=16318 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-memcached-container-71b4149f:
unexpected output from Python interpreter discovery

2025-03-29 18:20:04,046 p=16318 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-memcached-container-71b4149f is using the discovered Python
interpreter at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of
that path. See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more
information.

2025-03-29 18:20:04,048 p=16318 u=vagrant n=ansible | controller-memcached-container-71b4149f | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "lxc-attach: controller-memcached-container-71b4149f: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\nlxc-attach: controller-memcached-container-71b4149f: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:20:04,164 p=16318 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-utility-container-7e5b64c5: unexpected
output from Python interpreter discovery

2025-03-29 18:20:04,250 p=16318 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-utility-container-7e5b64c5 is using the discovered Python interpreter
at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 18:20:04,252 p=16318 u=vagrant n=ansible | controller-utility-container-7e5b64c5 | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "lxc-attach: controller-utility-container-7e5b64c5: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\nlxc-attach: controller-utility-container-7e5b64c5: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:20:04,370 p=16318 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-rabbit-mq-container-6f8ad97c:
unexpected output from Python interpreter discovery

2025-03-29 18:20:04,429 p=16318 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-rabbit-mq-container-6f8ad97c is using the discovered Python
interpreter at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of
that path. See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more
information.

2025-03-29 18:20:04,431 p=16318 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "lxc-attach: controller-rabbit-mq-container-6f8ad97c: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\nlxc-attach: controller-rabbit-mq-container-6f8ad97c: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:20:10,133 p=16318 u=vagrant n=ansible | [WARNING]: Platform linux on host localhost is using the discovered Python interpreter at /opt/ansible-
runtime/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 18:20:10,134 p=16318 u=vagrant n=ansible | localhost | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/opt/ansible-runtime/bin/python3.10"
    },
    "cache_update_time": 1743272405,
    "cache_updated": true,
    "changed": false
}
2025-03-29 18:20:15,324 p=16318 u=vagrant n=ansible | controller | SUCCESS => {
    "cache_update_time": 1743272407,
    "cache_updated": true,
    "changed": false
}
2025-03-29 18:28:33,367 p=16910 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:28:34,075 p=16910 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:28:46,848 p=16910 u=vagrant n=ansible | controller | FAILED | rc=2 >>
[Errno 2] No such file or directory: b'brctl'

2025-03-29 18:28:53,690 p=16973 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:28:54,385 p=16973 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:28:55,283 p=16973 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-galera-container-f800b10b: unexpected
output from Python interpreter discovery

2025-03-29 18:28:55,344 p=16973 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-galera-container-f800b10b is using the discovered Python interpreter
at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 18:28:55,347 p=16973 u=vagrant n=ansible | controller-galera-container-f800b10b | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "sudo: lxc-attach: command not found\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:28:55,469 p=16973 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-memcached-container-71b4149f:
unexpected output from Python interpreter discovery

2025-03-29 18:28:55,531 p=16973 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-memcached-container-71b4149f is using the discovered Python
interpreter at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of
that path. See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more
information.

2025-03-29 18:28:55,534 p=16973 u=vagrant n=ansible | controller-memcached-container-71b4149f | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "sudo: lxc-attach: command not found\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:28:55,659 p=16973 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-utility-container-7e5b64c5: unexpected
output from Python interpreter discovery

2025-03-29 18:28:55,711 p=16973 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-utility-container-7e5b64c5 is using the discovered Python interpreter
at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 18:28:55,713 p=16973 u=vagrant n=ansible | controller-utility-container-7e5b64c5 | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "sudo: lxc-attach: command not found\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:28:55,814 p=16973 u=vagrant n=ansible | [WARNING]: Unhandled error in Python interpreter discovery for host controller-rabbit-mq-container-6f8ad97c:
unexpected output from Python interpreter discovery

2025-03-29 18:28:55,871 p=16973 u=vagrant n=ansible | [WARNING]: Platform unknown on host controller-rabbit-mq-container-6f8ad97c is using the discovered Python
interpreter at /usr/bin/python3, but future installation of another Python interpreter could change the meaning of
that path. See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more
information.

2025-03-29 18:28:55,873 p=16973 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c | FAILED! => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3"
    },
    "changed": false,
    "module_stderr": "sudo: lxc-attach: command not found\n",
    "module_stdout": "",
    "msg": "MODULE FAILURE\nSee stdout/stderr for the exact error",
    "rc": 1
}
2025-03-29 18:29:05,779 p=16973 u=vagrant n=ansible | localhost | SUCCESS => {
    "cache_update_time": 1743272937,
    "cache_updated": true,
    "changed": false
}
2025-03-29 18:29:25,957 p=16973 u=vagrant n=ansible | controller | CHANGED => {
    "cache_update_time": 1743272949,
    "cache_updated": true,
    "changed": true,
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nSuggested packages:\n  ifupdown\nThe following NEW packages will be installed:\n  bridge-utils\n0 upgraded, 1 newly installed, 0 to remove and 60 not upgraded.\nNeed to get 34.4 kB of archives.\nAfter this operation, 121 kB of additional disk space will be used.\nGet:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 bridge-utils amd64 1.7-1ubuntu3 [34.4 kB]\nFetched 34.4 kB in 0s (89.1 kB/s)\nSelecting previously unselected package bridge-utils.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 64144 files and directories currently installed.)\r\nPreparing to unpack .../bridge-utils_1.7-1ubuntu3_amd64.deb ...\r\nUnpacking bridge-utils (1.7-1ubuntu3) ...\r\nSetting up bridge-utils (1.7-1ubuntu3) ...\r\nProcessing triggers for man-db (2.10.2-1) ...\r\nNEEDRESTART-VER: 3.5\nNEEDRESTART-KCUR: 5.15.0-131-generic\nNEEDRESTART-KEXP: 5.15.0-131-generic\nNEEDRESTART-KSTA: 1\n",
    "stdout_lines": [
        "Reading package lists...",
        "Building dependency tree...",
        "Reading state information...",
        "Suggested packages:",
        "  ifupdown",
        "The following NEW packages will be installed:",
        "  bridge-utils",
        "0 upgraded, 1 newly installed, 0 to remove and 60 not upgraded.",
        "Need to get 34.4 kB of archives.",
        "After this operation, 121 kB of additional disk space will be used.",
        "Get:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 bridge-utils amd64 1.7-1ubuntu3 [34.4 kB]",
        "Fetched 34.4 kB in 0s (89.1 kB/s)",
        "Selecting previously unselected package bridge-utils.",
        "(Reading database ... ",
        "(Reading database ... 5%",
        "(Reading database ... 10%",
        "(Reading database ... 15%",
        "(Reading database ... 20%",
        "(Reading database ... 25%",
        "(Reading database ... 30%",
        "(Reading database ... 35%",
        "(Reading database ... 40%",
        "(Reading database ... 45%",
        "(Reading database ... 50%",
        "(Reading database ... 55%",
        "(Reading database ... 60%",
        "(Reading database ... 65%",
        "(Reading database ... 70%",
        "(Reading database ... 75%",
        "(Reading database ... 80%",
        "(Reading database ... 85%",
        "(Reading database ... 90%",
        "(Reading database ... 95%",
        "(Reading database ... 100%",
        "(Reading database ... 64144 files and directories currently installed.)",
        "Preparing to unpack .../bridge-utils_1.7-1ubuntu3_amd64.deb ...",
        "Unpacking bridge-utils (1.7-1ubuntu3) ...",
        "Setting up bridge-utils (1.7-1ubuntu3) ...",
        "Processing triggers for man-db (2.10.2-1) ...",
        "NEEDRESTART-VER: 3.5",
        "NEEDRESTART-KCUR: 5.15.0-131-generic",
        "NEEDRESTART-KEXP: 5.15.0-131-generic",
        "NEEDRESTART-KSTA: 1"
    ]
}
2025-03-29 18:29:39,506 p=17488 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:29:40,235 p=17488 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:29:41,301 p=17488 u=vagrant n=ansible | controller | CHANGED | rc=0 >>


2025-03-29 18:29:58,351 p=17528 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:29:59,079 p=17528 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:29:59,743 p=17528 u=vagrant n=ansible | controller | CHANGED | rc=0 >>
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 02:0f:f8:78:06:d9 brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 metric 100 brd 10.0.2.255 scope global dynamic enp0s3
       valid_lft 86215sec preferred_lft 86215sec
    inet6 fe80::f:f8ff:fe78:6d9/64 scope link 
       valid_lft forever preferred_lft forever
3: enp0s8: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:0b:af:3e brd ff:ff:ff:ff:ff:ff
    inet 192.168.56.10/24 brd 192.168.56.255 scope global enp0s8
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fe0b:af3e/64 scope link 
       valid_lft forever preferred_lft forever
4: enp0s9: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:8a:5a:71 brd ff:ff:ff:ff:ff:ff
    inet 10.0.0.10/24 brd 10.0.0.255 scope global enp0s9
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fe8a:5a71/64 scope link 
       valid_lft forever preferred_lft forever
5: enp0s10: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:12:bc:10 brd ff:ff:ff:ff:ff:ff
    inet 172.16.0.10/24 brd 172.16.0.255 scope global enp0s10
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fe12:bc10/64 scope link 
       valid_lft forever preferred_lft forever

2025-03-29 18:47:46,256 p=17927 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:47:47,019 p=17927 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:47:47,520 p=17927 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 18:47:47,575 p=17927 u=vagrant n=ansible | PLAY [Create CA certificates] ****************************************************************************************
2025-03-29 18:47:47,582 p=17927 u=vagrant n=ansible | TASK [Gathering Facts] ***********************************************************************************************
2025-03-29 18:47:48,848 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:47:48,867 p=17927 u=vagrant n=ansible | TASK [Create CA certificates] ****************************************************************************************
2025-03-29 18:47:48,918 p=17927 u=vagrant n=ansible | included: pki for localhost
2025-03-29 18:47:48,927 p=17927 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 18:47:48,961 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:47:48,968 p=17927 u=vagrant n=ansible | TASK [pki : Create PKI directories] **********************************************************************************
2025-03-29 18:47:49,611 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 18:47:49,960 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-29 18:47:50,357 p=17927 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 18:47:50,720 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-29 18:47:51,065 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-29 18:47:51,440 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-29 18:47:51,792 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-29 18:47:51,803 p=17927 u=vagrant n=ansible | TASK [pki : Create certificate authorities] **************************************************************************
2025-03-29 18:47:51,943 p=17927 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-29 18:47:51,971 p=17927 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-29 18:47:51,982 p=17927 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ********************************************
2025-03-29 18:47:52,413 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-29 18:47:52,894 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-29 18:47:53,240 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-29 18:47:53,600 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-29 18:47:53,610 p=17927 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 18:47:54,005 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:47:54,017 p=17927 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ********************************************************
2025-03-29 18:47:55,198 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:47:55,209 p=17927 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] *************************************************************
2025-03-29 18:47:58,439 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:47:58,449 p=17927 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] **************************************************************
2025-03-29 18:47:59,228 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:47:59,237 p=17927 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *******************************************************************
2025-03-29 18:48:01,311 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:01,320 p=17927 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] *****************************************************
2025-03-29 18:48:02,083 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:02,091 p=17927 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] *****************************************************
2025-03-29 18:48:04,338 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:04,347 p=17927 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ********************************************************
2025-03-29 18:48:04,378 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:04,385 p=17927 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 18:48:04,786 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:04,796 p=17927 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] ****************************************************************
2025-03-29 18:48:05,667 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:48:05,679 p=17927 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] ***************************************************************
2025-03-29 18:48:06,457 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:06,467 p=17927 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 18:48:06,505 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:06,515 p=17927 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 18:48:06,557 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:06,569 p=17927 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ************************************
2025-03-29 18:48:07,019 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-29 18:48:07,386 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-29 18:48:07,743 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-29 18:48:08,089 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-29 18:48:08,100 p=17927 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 18:48:08,496 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:48:08,506 p=17927 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] ************************************************
2025-03-29 18:48:09,220 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:09,232 p=17927 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] *****************************************************
2025-03-29 18:48:13,305 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:13,315 p=17927 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ******************************************************
2025-03-29 18:48:13,681 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:48:13,690 p=17927 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] ***********************************************************
2025-03-29 18:48:15,432 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:15,443 p=17927 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *********************************************
2025-03-29 18:48:16,201 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:16,209 p=17927 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *********************************************
2025-03-29 18:48:16,239 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:16,252 p=17927 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] ************************************************
2025-03-29 18:48:18,287 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:18,296 p=17927 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 18:48:18,700 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:18,711 p=17927 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ********************************************************
2025-03-29 18:48:19,283 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:48:19,293 p=17927 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *******************************************************
2025-03-29 18:48:20,036 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:20,044 p=17927 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 18:48:20,434 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:48:20,442 p=17927 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 18:48:21,054 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:21,070 p=17927 u=vagrant n=ansible | RUNNING HANDLER [pki : ca cert changed] ******************************************************************************
2025-03-29 18:48:21,071 p=17927 u=vagrant n=ansible | [WARNING]: noop task does not support when conditional

2025-03-29 18:48:21,094 p=17927 u=vagrant n=ansible | PLAY [Create SSHD CA] ************************************************************************************************
2025-03-29 18:48:21,117 p=17927 u=vagrant n=ansible | TASK [Create SSHD certificate authority] *****************************************************************************
2025-03-29 18:48:21,171 p=17927 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-29 18:48:21,180 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] *****************************************
2025-03-29 18:48:21,213 p=17927 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:48:21,221 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *******************************************************
2025-03-29 18:48:21,628 p=17927 u=vagrant n=ansible | changed: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-29 18:48:21,638 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ******************************************************************
2025-03-29 18:48:21,720 p=17927 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-29 18:48:21,751 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] **************************
2025-03-29 18:48:23,984 p=17927 u=vagrant n=ansible | changed: [localhost]
2025-03-29 18:48:23,994 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] *******
2025-03-29 18:48:24,038 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,047 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***********
2025-03-29 18:48:24,094 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,102 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***************************************
2025-03-29 18:48:24,132 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,139 p=17927 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] *****************************************************************
2025-03-29 18:48:24,164 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,202 p=17927 u=vagrant n=ansible | PLAY [Generate any extra user certificates] **************************************************************************
2025-03-29 18:48:24,220 p=17927 u=vagrant n=ansible | TASK [Create user certificates] **************************************************************************************
2025-03-29 18:48:24,277 p=17927 u=vagrant n=ansible | included: pki for localhost
2025-03-29 18:48:24,283 p=17927 u=vagrant n=ansible | TASK [pki : Create Server certificates] ******************************************************************************
2025-03-29 18:48:24,320 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,335 p=17927 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ********************************************
2025-03-29 18:48:24,373 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,381 p=17927 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] **************************************************************
2025-03-29 18:48:24,411 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,420 p=17927 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ******************************************************************
2025-03-29 18:48:24,441 p=17927 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:48:24,482 p=17927 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *********************************************************************************
2025-03-29 18:48:24,499 p=17927 u=vagrant n=ansible | TASK [Ensure python is installed] ************************************************************************************
2025-03-29 18:48:51,419 p=17927 u=vagrant n=ansible | fatal: [controller]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.10' (ED25519) to the list of known hosts.\r\nroot@192.168.56.10: Permission denied (publickey).", "unreachable": true}
2025-03-29 18:48:51,421 p=17927 u=vagrant n=ansible | PLAY RECAP ***********************************************************************************************************
2025-03-29 18:48:51,421 p=17927 u=vagrant n=ansible | controller                 : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-29 18:48:51,421 p=17927 u=vagrant n=ansible | localhost                  : ok=36   changed=20   unreachable=0    failed=0    skipped=12   rescued=0    ignored=0   
2025-03-29 18:53:40,557 p=18776 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 18:53:41,313 p=18776 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 18:53:41,825 p=18776 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 18:53:41,901 p=18776 u=vagrant n=ansible | PLAY [Create CA certificates] ****************************************************************************************
2025-03-29 18:53:41,923 p=18776 u=vagrant n=ansible | TASK [Create CA certificates] ****************************************************************************************
2025-03-29 18:53:41,975 p=18776 u=vagrant n=ansible | included: pki for localhost
2025-03-29 18:53:41,989 p=18776 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 18:53:42,023 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:42,033 p=18776 u=vagrant n=ansible | TASK [pki : Create PKI directories] **********************************************************************************
2025-03-29 18:53:42,820 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 18:53:43,172 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-29 18:53:43,537 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 18:53:43,908 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-29 18:53:44,263 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-29 18:53:44,622 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-29 18:53:44,982 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-29 18:53:44,999 p=18776 u=vagrant n=ansible | TASK [pki : Create certificate authorities] **************************************************************************
2025-03-29 18:53:45,151 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-29 18:53:45,181 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-29 18:53:45,191 p=18776 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ********************************************
2025-03-29 18:53:45,628 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-29 18:53:45,984 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-29 18:53:46,392 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-29 18:53:46,797 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-29 18:53:46,810 p=18776 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 18:53:47,247 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:47,259 p=18776 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ********************************************************
2025-03-29 18:53:47,975 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:47,987 p=18776 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] *************************************************************
2025-03-29 18:53:53,192 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:53,204 p=18776 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] **************************************************************
2025-03-29 18:53:53,782 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:53,791 p=18776 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *******************************************************************
2025-03-29 18:53:53,843 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:53,855 p=18776 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] *****************************************************
2025-03-29 18:53:53,900 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:53,910 p=18776 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] *****************************************************
2025-03-29 18:53:53,955 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:53,968 p=18776 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ********************************************************
2025-03-29 18:53:54,002 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:54,012 p=18776 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 18:53:54,055 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:54,065 p=18776 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] ****************************************************************
2025-03-29 18:53:54,108 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:54,120 p=18776 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] ***************************************************************
2025-03-29 18:53:54,162 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:54,170 p=18776 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 18:53:54,203 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:54,212 p=18776 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 18:53:54,256 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:53:54,267 p=18776 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ************************************
2025-03-29 18:53:54,844 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-29 18:53:55,254 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-29 18:53:55,629 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-29 18:53:55,987 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-29 18:53:55,998 p=18776 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 18:53:56,449 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:56,461 p=18776 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] ************************************************
2025-03-29 18:53:56,922 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:53:56,933 p=18776 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] *****************************************************
2025-03-29 18:54:01,996 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:54:02,006 p=18776 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ******************************************************
2025-03-29 18:54:02,383 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:54:02,393 p=18776 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] ***********************************************************
2025-03-29 18:54:02,444 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,456 p=18776 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *********************************************
2025-03-29 18:54:02,494 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,505 p=18776 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *********************************************
2025-03-29 18:54:02,539 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,556 p=18776 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] ************************************************
2025-03-29 18:54:02,608 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,621 p=18776 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 18:54:02,669 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,682 p=18776 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ********************************************************
2025-03-29 18:54:02,722 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,736 p=18776 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *******************************************************
2025-03-29 18:54:02,783 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:02,794 p=18776 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 18:54:03,267 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:54:03,278 p=18776 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 18:54:03,365 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:03,454 p=18776 u=vagrant n=ansible | PLAY [Create SSHD CA] ************************************************************************************************
2025-03-29 18:54:03,478 p=18776 u=vagrant n=ansible | TASK [Create SSHD certificate authority] *****************************************************************************
2025-03-29 18:54:03,539 p=18776 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-29 18:54:03,554 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] *****************************************
2025-03-29 18:54:03,665 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:54:03,684 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *******************************************************
2025-03-29 18:54:04,134 p=18776 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-29 18:54:04,146 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ******************************************************************
2025-03-29 18:54:04,203 p=18776 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-29 18:54:04,219 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] **************************
2025-03-29 18:54:09,407 p=18776 u=vagrant n=ansible | ok: [localhost]
2025-03-29 18:54:09,420 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] *******
2025-03-29 18:54:09,471 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,486 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***********
2025-03-29 18:54:09,532 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,540 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***************************************
2025-03-29 18:54:09,565 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,573 p=18776 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] *****************************************************************
2025-03-29 18:54:09,601 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,647 p=18776 u=vagrant n=ansible | PLAY [Generate any extra user certificates] **************************************************************************
2025-03-29 18:54:09,672 p=18776 u=vagrant n=ansible | TASK [Create user certificates] **************************************************************************************
2025-03-29 18:54:09,737 p=18776 u=vagrant n=ansible | included: pki for localhost
2025-03-29 18:54:09,747 p=18776 u=vagrant n=ansible | TASK [pki : Create Server certificates] ******************************************************************************
2025-03-29 18:54:09,787 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,803 p=18776 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ********************************************
2025-03-29 18:54:09,840 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,851 p=18776 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] **************************************************************
2025-03-29 18:54:09,877 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,888 p=18776 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ******************************************************************
2025-03-29 18:54:09,910 p=18776 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 18:54:09,953 p=18776 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *********************************************************************************
2025-03-29 18:54:09,966 p=18776 u=vagrant n=ansible | TASK [Ensure python is installed] ************************************************************************************
2025-03-29 18:54:11,146 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:11,183 p=18776 u=vagrant n=ansible | PLAY [Gather host facts] *********************************************************************************************
2025-03-29 18:54:11,191 p=18776 u=vagrant n=ansible | TASK [Gathering Facts] ***********************************************************************************************
2025-03-29 18:54:12,957 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:13,000 p=18776 u=vagrant n=ansible | PLAY [Basic host setup] **********************************************************************************************
2025-03-29 18:54:13,022 p=18776 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 18:54:13,062 p=18776 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 18:54:13,072 p=18776 u=vagrant n=ansible | TASK [Check for a supported Operating System] ************************************************************************
2025-03-29 18:54:13,137 p=18776 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 18:54:13,155 p=18776 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 18:54:14,268 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:14,275 p=18776 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 18:54:14,305 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:14,318 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] **************************************************
2025-03-29 18:54:14,396 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:14,402 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] **************************************************************
2025-03-29 18:54:14,804 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:14,815 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] *****************************************************************
2025-03-29 18:54:15,695 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:15,703 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ********************************************************
2025-03-29 18:54:15,730 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:15,738 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ****************************************
2025-03-29 18:54:16,303 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:16,311 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] **************************************************
2025-03-29 18:54:16,342 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:16,351 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] *************************************************************
2025-03-29 18:54:16,752 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:16,859 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] ***********************************************************
2025-03-29 18:54:17,376 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:17,383 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *******************************************************************
2025-03-29 18:54:17,448 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller
2025-03-29 18:54:17,464 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] *****************************************************************
2025-03-29 18:54:17,580 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:17,588 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] ***************************************************************************
2025-03-29 18:54:18,002 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:18,008 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] ************************************************************
2025-03-29 18:54:18,399 p=18776 u=vagrant n=ansible | changed: [controller -> localhost]
2025-03-29 18:54:18,407 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] *************************************************************
2025-03-29 18:54:19,885 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:19,894 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] **************************************
2025-03-29 18:54:19,955 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller
2025-03-29 18:54:19,972 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *******************************************************
2025-03-29 18:54:20,367 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:20,374 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *******************************************************
2025-03-29 18:54:20,487 p=18776 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 18:54:20,494 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] **************************************
2025-03-29 18:54:20,905 p=18776 u=vagrant n=ansible | ok: [controller] => (item=uca.list)
2025-03-29 18:54:21,255 p=18776 u=vagrant n=ansible | ok: [controller] => (item=osbpo.list)
2025-03-29 18:54:21,264 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] *******************************
2025-03-29 18:54:24,823 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:24,832 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *********************************************************************
2025-03-29 18:54:25,749 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 18:54:25,760 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] **************************************************************************
2025-03-29 18:54:26,651 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:26,660 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] ****************************************************************************
2025-03-29 18:54:39,397 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:54:39,405 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *******************************************************
2025-03-29 18:54:39,497 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/configure_metal_hosts.yml for controller
2025-03-29 18:54:39,517 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Check Kernel Version] ************************************************************************
2025-03-29 18:54:39,559 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:39,568 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages for bare metal nodes] ************************************************
2025-03-29 18:54:56,766 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:54:56,773 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages for bare metal nodes] *****************************
2025-03-29 18:54:56,802 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:56,810 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Check how kernel modules are implemented (statically builtin, dynamic, not set)] *************
2025-03-29 18:54:56,839 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:56,849 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Fail fast if we can't load a module] *********************************************************
2025-03-29 18:54:56,872 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:54:56,881 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Load kernel module(s)] ***********************************************************************
2025-03-29 18:54:57,556 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': '8021q'})
2025-03-29 18:54:57,958 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'br_netfilter'})
2025-03-29 18:54:58,353 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_multipath'})
2025-03-29 18:54:58,771 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'dm_snapshot'})
2025-03-29 18:54:59,157 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'ebtables'})
2025-03-29 18:54:59,546 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'ip6table_filter'})
2025-03-29 18:54:59,926 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6_tables'})
2025-03-29 18:55:00,295 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_tables'})
2025-03-29 18:55:00,710 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'xt_MASQUERADE'})
2025-03-29 18:55:01,096 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'ipt_REJECT'})
2025-03-29 18:55:01,478 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'iptable_filter'})
2025-03-29 18:55:01,871 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'iptable_mangle'})
2025-03-29 18:55:02,286 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'iptable_nat'})
2025-03-29 18:55:02,739 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'ip_vs'})
2025-03-29 18:55:03,174 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'iscsi_tcp'})
2025-03-29 18:55:03,618 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'nbd'})
2025-03-29 18:55:04,003 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_conntrack'})
2025-03-29 18:55:04,386 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_defrag_ipv4'})
2025-03-29 18:55:04,760 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_nat'})
2025-03-29 18:55:05,147 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'name': 'vhost_net'})
2025-03-29 18:55:05,507 p=18776 u=vagrant n=ansible | ok: [controller] => (item={'name': 'x_tables'})
2025-03-29 18:55:05,520 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Write list of modules to load at boot] *******************************************************
2025-03-29 18:55:06,442 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:06,450 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Adding new system tuning] ********************************************************************
2025-03-29 18:55:07,152 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'fs.inotify.max_user_watches', 'value': 1048576})
2025-03-29 18:55:07,511 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2025-03-29 18:55:07,898 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2025-03-29 18:55:08,259 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.ip_forward', 'value': 1})
2025-03-29 18:55:08,612 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.netfilter.nf_conntrack_max', 'value': 262144})
2025-03-29 18:55:08,990 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'vm.dirty_background_ratio', 'value': 5})
2025-03-29 18:55:09,354 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'vm.dirty_ratio', 'value': 10})
2025-03-29 18:55:09,727 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'vm.swappiness', 'value': 5})
2025-03-29 18:55:10,108 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2025-03-29 18:55:10,474 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2025-03-29 18:55:10,867 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.bridge.bridge-nf-call-arptables', 'value': 1})
2025-03-29 18:55:11,218 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.igmp_max_memberships', 'value': 1024})
2025-03-29 18:55:11,582 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh1', 'value': '512'})
2025-03-29 18:55:11,966 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh2', 'value': '1024'})
2025-03-29 18:55:12,346 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh3', 'value': '2048'})
2025-03-29 18:55:12,734 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.route.gc_thresh', 'value': '2048'})
2025-03-29 18:55:13,110 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_interval', 'value': 60})
2025-03-29 18:55:13,482 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 18:55:13,867 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh1', 'value': '512'})
2025-03-29 18:55:14,232 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh2', 'value': '1024'})
2025-03-29 18:55:14,595 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh3', 'value': '2048'})
2025-03-29 18:55:14,986 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.route.gc_thresh', 'value': '2048'})
2025-03-29 18:55:15,363 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_interval', 'value': 60})
2025-03-29 18:55:15,727 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 18:55:16,085 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.conf.lo.disable_ipv6', 'value': 0})
2025-03-29 18:55:17,463 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'fs.aio-max-nr', 'value': 131072})
2025-03-29 18:55:17,485 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Configure sysstat] ***************************************************************************
2025-03-29 18:55:17,527 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_sysstat.yml for controller
2025-03-29 18:55:17,540 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat config] ***********************************************************************
2025-03-29 18:55:18,466 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:18,473 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat cron] *************************************************************************
2025-03-29 18:55:19,399 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:19,409 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Start and enable the sysstat service] ********************************************************
2025-03-29 18:55:19,452 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:19,487 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Create a directory to hold systemd journals on disk] *****************************************
2025-03-29 18:55:19,908 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:19,916 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Create tmpfiles structure in journald directory] *********************************************
2025-03-29 18:55:19,955 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:19,964 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] **************************************************************
2025-03-29 18:55:20,387 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:20,396 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *********************************************************************
2025-03-29 18:55:29,166 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:29,174 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] **************************************************
2025-03-29 18:55:29,206 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:29,214 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] ************************************************************************
2025-03-29 18:55:29,607 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:29,616 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] *****************************************************************************
2025-03-29 18:55:29,654 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:29,663 p=18776 u=vagrant n=ansible | TASK [Including PKI role] ********************************************************************************************
2025-03-29 18:55:29,738 p=18776 u=vagrant n=ansible | included: pki for controller
2025-03-29 18:55:29,777 p=18776 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 18:55:29,832 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:29,840 p=18776 u=vagrant n=ansible | TASK [pki : Install certificate authorities] *************************************************************************
2025-03-29 18:55:29,917 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller
2025-03-29 18:55:29,927 p=18776 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] ************************************************
2025-03-29 18:55:30,329 p=18776 u=vagrant n=ansible | ok: [controller -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 18:55:30,340 p=18776 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *********************************************************************
2025-03-29 18:55:31,240 p=18776 u=vagrant n=ansible | changed: [controller] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 18:55:31,251 p=18776 u=vagrant n=ansible | TASK [pki : Update CA store] *****************************************************************************************
2025-03-29 18:55:33,650 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:33,663 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *********************************************************
2025-03-29 18:55:33,708 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller
2025-03-29 18:55:33,738 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] *****************************************************************************
2025-03-29 18:55:34,139 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:34,147 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ******************************************************
2025-03-29 18:55:34,800 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:34,808 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] **************************************************************
2025-03-29 18:55:34,849 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:34,857 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] **************************************************
2025-03-29 18:55:34,885 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:34,893 p=18776 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] *****************************************************
2025-03-29 18:55:34,917 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:34,945 p=18776 u=vagrant n=ansible | RUNNING HANDLER [openstack_hosts : Restart sysstat] ******************************************************************
2025-03-29 18:55:37,314 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:37,325 p=18776 u=vagrant n=ansible | RUNNING HANDLER [openstack_hosts : Systemd daemon reload] ************************************************************
2025-03-29 18:55:38,314 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:38,321 p=18776 u=vagrant n=ansible | TASK [Ensure deploy host SSH connection is reset] ********************************************************************
2025-03-29 18:55:38,394 p=18776 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] ****************************************************************************************
2025-03-29 18:55:38,441 p=18776 u=vagrant n=ansible | PLAY [Basic lxc host setup] ******************************************************************************************
2025-03-29 18:55:38,454 p=18776 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 18:55:38,491 p=18776 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 18:55:38,503 p=18776 u=vagrant n=ansible | TASK [Check the state of the default LXC service log directory] ******************************************************
2025-03-29 18:55:39,766 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:39,774 p=18776 u=vagrant n=ansible | TASK [Create the log aggregation parent directory] *******************************************************************
2025-03-29 18:55:40,156 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:40,162 p=18776 u=vagrant n=ansible | TASK [Move the existing folder to the log aggregation parent] ********************************************************
2025-03-29 18:55:40,206 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:40,217 p=18776 u=vagrant n=ansible | TASK [Create the new LXC service log directory] **********************************************************************
2025-03-29 18:55:40,593 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:40,601 p=18776 u=vagrant n=ansible | TASK [Create the LXC service log aggregation link] *******************************************************************
2025-03-29 18:55:40,983 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:55:40,997 p=18776 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 18:55:41,037 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:41,046 p=18776 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 18:55:41,073 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:55:41,087 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Gather variables for each operating system] ********************************************************
2025-03-29 18:55:41,151 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:41,158 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Gather container variables] ************************************************************************
2025-03-29 18:55:41,227 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:41,235 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_pre_install tasks] *******************************************************************
2025-03-29 18:55:41,269 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_pre_install.yml for controller
2025-03-29 18:55:41,282 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Create base directories] ***************************************************************************
2025-03-29 18:55:41,689 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/lxc)
2025-03-29 18:55:42,040 p=18776 u=vagrant n=ansible | ok: [controller] => (item=/usr/local/bin)
2025-03-29 18:55:42,395 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/network/interfaces.d)
2025-03-29 18:55:42,759 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/apparmor.d/lxc)
2025-03-29 18:55:43,118 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/usr/share/lxc/templates)
2025-03-29 18:55:43,491 p=18776 u=vagrant n=ansible | ok: [controller] => (item=/openstack)
2025-03-29 18:55:43,851 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/openstack/backup)
2025-03-29 18:55:44,207 p=18776 u=vagrant n=ansible | ok: [controller] => (item=/openstack/log)
2025-03-29 18:55:44,568 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/var/lib/lxc)
2025-03-29 18:55:44,927 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/var/cache/lxc/download)
2025-03-29 18:55:44,943 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_install tasks"] **********************************************************************
2025-03-29 18:55:44,986 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_install_apt.yml for controller
2025-03-29 18:55:44,995 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Remove conflicting packages] ***********************************************************************
2025-03-29 18:55:46,283 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:55:46,292 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Install apt packages] ******************************************************************************
2025-03-29 18:56:10,454 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:10,461 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Drop irqbalance config] ****************************************************************************
2025-03-29 18:56:11,402 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:11,410 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc-openstack apparmor profile] ***************************************************************
2025-03-29 18:56:12,281 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:12,289 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Flush handler to reload apparmor profiles] *********************************************************
2025-03-29 18:56:12,299 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_hosts : Start apparmor] *************************************************************************
2025-03-29 18:56:13,029 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:13,038 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_hosts : Reload apparmor] ************************************************************************
2025-03-29 18:56:14,353 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:14,362 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_hosts : Restart irqbalance] *********************************************************************
2025-03-29 18:56:15,446 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:15,455 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_post_install tasks] ******************************************************************
2025-03-29 18:56:15,498 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_post_install.yml for controller
2025-03-29 18:56:15,509 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Ensure the lxc dnsmasq user exists] ****************************************************************
2025-03-29 18:56:16,266 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:16,274 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Drop base config file(s)] **************************************************************************
2025-03-29 18:56:17,151 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'src': 'lxc-openstack.conf.j2', 'dest': '/etc/lxc/lxc-openstack.conf'})
2025-03-29 18:56:18,104 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'src': 'lxc-net.default.j2', 'dest': '/etc/default/lxc-net', 'mode': '0644'})
2025-03-29 18:56:18,953 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'src': 'lxc.default.j2', 'dest': '/etc/default/lxc', 'mode': '0644'})
2025-03-29 18:56:19,791 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'src': 'lxc-system-manage.j2', 'dest': '/usr/local/bin/lxc-system-manage', 'mode': '0755'})
2025-03-29 18:56:19,805 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc veth check script] ************************************************************************
2025-03-29 18:56:20,653 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:20,661 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set systemd DefaultTasksMax value] *****************************************************************
2025-03-29 18:56:21,280 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:21,287 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set sshd MaxSessions] ******************************************************************************
2025-03-29 18:56:21,650 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:21,657 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Tuning kernel for lxc] *****************************************************************************
2025-03-29 18:56:22,074 p=18776 u=vagrant n=ansible | changed: [controller] => (item={'key': 'fs.inotify.max_user_instances', 'value': 1024})
2025-03-29 18:56:22,083 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_net tasks] ***************************************************************************
2025-03-29 18:56:22,141 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_net.yml for controller
2025-03-29 18:56:22,156 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Check if NetworkManager is running] ****************************************************************
2025-03-29 18:56:22,521 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:22,529 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Ensure network services wait on networking (if using NetworkManager)] ******************************
2025-03-29 18:56:22,552 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:22,563 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Disable and stop lxc-net] **************************************************************************
2025-03-29 18:56:23,592 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:23,600 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Setup LXC OVS Bridge] ******************************************************************************
2025-03-29 18:56:23,624 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:23,636 p=18776 u=vagrant n=ansible | TASK [Run the systemd-networkd role] *********************************************************************************
2025-03-29 18:56:23,746 p=18776 u=vagrant n=ansible | included: systemd_networkd for controller
2025-03-29 18:56:23,810 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] *************************************************
2025-03-29 18:56:23,876 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:23,885 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] *************************
2025-03-29 18:56:23,928 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:23,937 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] **********************************
2025-03-29 18:56:23,975 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:23,985 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] ***************************************************************************
2025-03-29 18:56:24,024 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:24,033 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] ****************************************************************
2025-03-29 18:56:24,073 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:24,086 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] ***********************************************************
2025-03-29 18:56:24,130 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:24,138 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] **********************************************************
2025-03-29 18:56:24,525 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:24,534 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] *************************************************************
2025-03-29 18:56:24,564 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:24,573 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] *****************************************************
2025-03-29 18:56:24,598 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:24,609 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] **************************************************************
2025-03-29 18:56:24,638 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:24,647 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] **************************************************
2025-03-29 18:56:25,595 p=18776 u=vagrant n=ansible | changed: [controller] => (item=[0, {'NetDev': {'Name': 'lxcbr0', 'Kind': 'bridge'}, 'Bridge': {'ForwardDelaySec': 0, 'HelloTimeSec': 2, 'MaxAgeSec': 12, 'STP': False}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 18:56:25,604 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] ****************************************************
2025-03-29 18:56:26,158 p=18776 u=vagrant n=ansible | changed: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 18:56:26,170 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] *************************************************
2025-03-29 18:56:26,846 p=18776 u=vagrant n=ansible | changed: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 18:56:26,856 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] ************************************************
2025-03-29 18:56:26,924 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:26,934 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ******************************************************
2025-03-29 18:56:26,995 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:27,005 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] **********************************************************
2025-03-29 18:56:27,805 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:27,814 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 18:56:27,828 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_hosts : Reload systemd units] *******************************************************************
2025-03-29 18:56:28,783 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:28,792 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_hosts : Restart sshd] ***************************************************************************
2025-03-29 18:56:29,531 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:29,539 p=18776 u=vagrant n=ansible | RUNNING HANDLER [systemd_networkd : Restart networkd] ****************************************************************
2025-03-29 18:56:30,179 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:30,191 p=18776 u=vagrant n=ansible | RUNNING HANDLER [systemd_networkd : (RE)Gather facts post setup] *****************************************************
2025-03-29 18:56:31,995 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:32,009 p=18776 u=vagrant n=ansible | RUNNING HANDLER [systemd_networkd : Update initramfs] ****************************************************************
2025-03-29 18:56:43,152 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:43,165 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] ***************************************************************
2025-03-29 18:56:43,243 p=18776 u=vagrant n=ansible | skipping: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}]) 
2025-03-29 18:56:43,245 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:43,263 p=18776 u=vagrant n=ansible | TASK [Run the systemd-service role] **********************************************************************************
2025-03-29 18:56:43,377 p=18776 u=vagrant n=ansible | included: systemd_service for controller
2025-03-29 18:56:43,411 p=18776 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] *************************************************************************
2025-03-29 18:56:43,846 p=18776 u=vagrant n=ansible | changed: [controller] => (item={"path": "/run/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 18:56:43,859 p=18776 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] ****************************************************************
2025-03-29 18:56:44,279 p=18776 u=vagrant n=ansible | changed: [controller] => (item={"path": "/run/lock/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 18:56:44,297 p=18776 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] **************************************************************
2025-03-29 18:56:44,343 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:44,355 p=18776 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *********************************************************************
2025-03-29 18:56:45,275 p=18776 u=vagrant n=ansible | changed: [controller] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-lxc-dnsmasq.conf"})
2025-03-29 18:56:45,291 p=18776 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *******************************************************************
2025-03-29 18:56:45,914 p=18776 u=vagrant n=ansible | changed: [controller] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/lxc-dnsmasq.service", "config_overrides": {"Unit": {"Before": "lxc.service"}, "Service": {"PIDFile": "/run/lxc/dnsmasq.pid"}}, "config_type": "ini"})
2025-03-29 18:56:45,929 p=18776 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ******************************************************************
2025-03-29 18:56:45,979 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:45,993 p=18776 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *********************************************************************
2025-03-29 18:56:46,040 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:46,051 p=18776 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ********************************************************************
2025-03-29 18:56:46,085 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:46,099 p=18776 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ***************************************************************
2025-03-29 18:56:47,121 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:47,133 p=18776 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] ****************************************************************
2025-03-29 18:56:47,208 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 18:56:47,235 p=18776 u=vagrant n=ansible | TASK [systemd_service : Load service lxc-dnsmasq] ********************************************************************
2025-03-29 18:56:48,552 p=18776 u=vagrant n=ansible | changed: [controller] => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 18:56:48,579 p=18776 u=vagrant n=ansible | TASK [systemd_service : Load timer lxc-dnsmasq] **********************************************************************
2025-03-29 18:56:48,641 p=18776 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq"}) 
2025-03-29 18:56:48,644 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:48,657 p=18776 u=vagrant n=ansible | TASK [systemd_service : Load socket] *********************************************************************************
2025-03-29 18:56:48,711 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:48,740 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Check Container Bridge exists] *********************************************************************
2025-03-29 18:56:49,136 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:49,149 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] ************************************************************************************
2025-03-29 18:56:49,172 p=18776 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed services] *********************************************************
2025-03-29 18:56:49,244 p=18776 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq.service"}) 
2025-03-29 18:56:49,246 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:49,259 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache tasks] *************************************************************************
2025-03-29 18:56:49,306 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache.yml for controller
2025-03-29 18:56:49,330 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set LXC cache fact(s)] *****************************************************************************
2025-03-29 18:56:49,384 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:49,396 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Retrieve the expiry object] ************************************************************************
2025-03-29 18:56:49,781 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:49,794 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set cache refresh fact] ****************************************************************************
2025-03-29 18:56:49,839 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:49,855 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_rootfs tasks] ******************************************************************
2025-03-29 18:56:49,939 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache_rootfs.yml for controller
2025-03-29 18:56:49,952 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Create sparse machines file] ***********************************************************************
2025-03-29 18:56:50,343 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:50,356 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Format the machines file] **************************************************************************
2025-03-29 18:56:51,056 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:51,070 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Gather variables for each operating system] ****************************************************
2025-03-29 18:56:51,160 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:51,173 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Including systemd_install tasks] ***************************************************************
2025-03-29 18:56:51,229 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_mount/tasks/systemd_install.yml for controller
2025-03-29 18:56:51,244 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Download EPEL gpg keys] ************************************************************************
2025-03-29 18:56:51,281 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:51,297 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Install EPEL gpg keys] *************************************************************************
2025-03-29 18:56:51,335 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:51,348 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Install the EPEL repository] *******************************************************************
2025-03-29 18:56:51,385 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:51,397 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Install required distro packages for mounts] ***************************************************
2025-03-29 18:56:52,587 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:52,600 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Make boolean flag for setting up glusterfs] ****************************************************
2025-03-29 18:56:52,650 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:52,663 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Configure systemd-tmpfiles to create /dev/fuse at boot] ****************************************
2025-03-29 18:56:52,693 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:52,708 p=18776 u=vagrant n=ansible | TASK [Apply systemctl overrides] *************************************************************************************
2025-03-29 18:56:52,741 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:52,756 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Restart systemd-tmpfiles-setup-dev] ************************************************************
2025-03-29 18:56:52,783 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:52,796 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Including systemd_mounts tasks] ****************************************************************
2025-03-29 18:56:52,868 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_mount/tasks/systemd_mounts.yml for controller => (item={'what': '/var/lib/machines.raw', 'where': '/var/lib/machines', 'type': 'ext4', 'options': 'loop', 'unit': {'ConditionPathExists': ['/var/lib/machines.raw']}, 'state': 'started', 'enabled': True})
2025-03-29 18:56:52,898 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Set mount facts] *******************************************************************************
2025-03-29 18:56:52,943 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:52,956 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Escape mount service file name] ****************************************************************
2025-03-29 18:56:53,438 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:53,457 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Create mount target(s)] ************************************************************************
2025-03-29 18:56:53,880 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:53,893 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Place mount credentials when required] *********************************************************
2025-03-29 18:56:53,920 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:53,932 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Create systemd mount services(s)] **************************************************************
2025-03-29 18:56:54,480 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:54,495 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Load or Unload mount(s)] ***********************************************************************
2025-03-29 18:56:56,045 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:56,060 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Set the state of the mount] ********************************************************************
2025-03-29 18:56:56,479 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:56,492 p=18776 u=vagrant n=ansible | TASK [systemd_mount : Unload mount(s)] *******************************************************************************
2025-03-29 18:56:56,525 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:56:56,548 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Remove the old image cache] ************************************************************************
2025-03-29 18:56:56,944 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:56:56,957 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Create new image cache directory] ******************************************************************
2025-03-29 18:56:57,361 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:56:57,375 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Build the base image using a CLI tool] *************************************************************
2025-03-29 18:58:04,077 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:58:04,096 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_preparation tasks] *************************************************************
2025-03-29 18:58:04,156 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache_preparation.yml for controller
2025-03-29 18:58:04,189 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Rsyncing files from the LXC host to the container cache] *******************************************
2025-03-29 18:58:04,633 p=18776 u=vagrant n=ansible | ok: [controller] => (item=/etc/apt/trusted.gpg)
2025-03-29 18:58:05,086 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/apt/apt.conf.d/)
2025-03-29 18:58:05,640 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/environment)
2025-03-29 18:58:06,313 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/protocols)
2025-03-29 18:58:06,923 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/apt/preferences.d/)
2025-03-29 18:58:07,447 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/apt/sources.list)
2025-03-29 18:58:07,981 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/apt/sources.list.d/)
2025-03-29 18:58:08,391 p=18776 u=vagrant n=ansible | ok: [controller] => (item=/etc/apt/mirrors)
2025-03-29 18:58:08,889 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/localtime)
2025-03-29 18:58:09,341 p=18776 u=vagrant n=ansible | changed: [controller] => (item=/etc/apt/trusted.gpg.d/)
2025-03-29 18:58:09,363 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Ensure directories exist for lxc_container_cache_files] ********************************************
2025-03-29 18:58:09,390 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:58:09,403 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Copy files from deployment host to the container cache] ********************************************
2025-03-29 18:58:09,432 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:58:09,445 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Ensure opt directory exists in container] **********************************************************
2025-03-29 18:58:09,869 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:58:09,883 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Cached image preparation script] *******************************************************************
2025-03-29 18:58:10,873 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:58:10,890 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Prepare cached image setup commands] ***************************************************************
2025-03-29 18:58:11,540 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:58:11,553 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Ensure that the LXC cache has been prepared] *******************************************************
2025-03-29 18:59:25,335 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:59:25,349 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Remove requiretty for sudo on centos] **************************************************************
2025-03-29 18:59:25,384 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 18:59:25,397 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_create tasks] ******************************************************************
2025-03-29 18:59:25,464 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache_create.yml for controller
2025-03-29 18:59:25,504 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Create LXC cache dir] ******************************************************************************
2025-03-29 18:59:25,911 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:59:25,925 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Remove existing cache archive] *********************************************************************
2025-03-29 18:59:26,330 p=18776 u=vagrant n=ansible | ok: [controller]
2025-03-29 18:59:26,351 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Create lxc image] **********************************************************************************
2025-03-29 18:59:50,198 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:59:50,216 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Drop container meta-data] **************************************************************************
2025-03-29 18:59:51,436 p=18776 u=vagrant n=ansible | changed: [controller] => (item=config)
2025-03-29 18:59:52,418 p=18776 u=vagrant n=ansible | changed: [controller] => (item=config.5)
2025-03-29 18:59:53,395 p=18776 u=vagrant n=ansible | changed: [controller] => (item=create-message)
2025-03-29 18:59:54,356 p=18776 u=vagrant n=ansible | changed: [controller] => (item=expiry)
2025-03-29 18:59:55,245 p=18776 u=vagrant n=ansible | changed: [controller] => (item=templates)
2025-03-29 18:59:55,265 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set expiry] ****************************************************************************************
2025-03-29 18:59:56,383 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:59:56,399 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set build ID] **************************************************************************************
2025-03-29 18:59:57,313 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 18:59:57,331 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Create base container to use for containers with dir] **********************************************
2025-03-29 19:00:25,337 p=18776 u=vagrant n=ansible | changed: [controller]
2025-03-29 19:00:25,352 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Set the qgroup size|compression limits on machines] ************************************************
2025-03-29 19:00:25,389 p=18776 u=vagrant n=ansible | skipping: [controller] => (item=-e none) 
2025-03-29 19:00:25,394 p=18776 u=vagrant n=ansible | skipping: [controller] => (item=-c none) 
2025-03-29 19:00:25,396 p=18776 u=vagrant n=ansible | skipping: [controller]
2025-03-29 19:00:25,409 p=18776 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] ************************************************************************************
2025-03-29 19:00:25,480 p=18776 u=vagrant n=ansible | PLAY [Set lxc containers group] **************************************************************************************
2025-03-29 19:00:25,542 p=18776 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 19:00:25,647 p=18776 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 19:00:25,671 p=18776 u=vagrant n=ansible | TASK [Add hosts to dynamic inventory group] **************************************************************************
2025-03-29 19:00:25,721 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 19:00:25,772 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 19:00:25,776 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 19:00:25,799 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:00:25,880 p=18776 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] ****************************************************************************************
2025-03-29 19:00:25,960 p=18776 u=vagrant n=ansible | PLAY [Create container(s)] *******************************************************************************************
2025-03-29 19:00:25,975 p=18776 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 19:00:26,074 p=18776 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 19:00:26,128 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *********************************************************
2025-03-29 19:00:26,608 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:00:26,637 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:00:27,044 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:00:27,094 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:00:27,103 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Check the physical_host variable is set] ************************************************
2025-03-29 19:00:27,152 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:00:27,178 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:00:27,193 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:00:27,224 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:00:27,233 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Read custom facts from previous runs] ***************************************************
2025-03-29 19:00:29,089 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:00:29,138 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:00:30,941 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:00:30,989 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:00:30,997 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Check for lxc volume group] *************************************************************
2025-03-29 19:00:31,066 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:00:31,092 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:00:31,108 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:00:31,150 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:00:31,158 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : LXC VG check] ***************************************************************************
2025-03-29 19:00:31,203 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:00:31,228 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:00:31,229 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:00:31,246 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:00:31,253 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_destroy tasks] **************************************************
2025-03-29 19:00:31,301 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:00:31,335 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:00:31,339 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:00:31,366 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:00:31,376 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks] ***************************************************
2025-03-29 19:00:31,516 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 19:00:31,580 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Container service directories] **********************************************************
2025-03-29 19:00:32,031 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/controller-galera-container-f800b10b)
2025-03-29 19:00:32,093 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/controller-memcached-container-71b4149f)
2025-03-29 19:00:32,455 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/backup/controller-galera-container-f800b10b)
2025-03-29 19:00:32,506 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-memcached-container-71b4149f)
2025-03-29 19:00:32,880 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/log/controller-galera-container-f800b10b)
2025-03-29 19:00:32,935 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/log/controller-memcached-container-71b4149f)
2025-03-29 19:00:33,336 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-galera-container-f800b10b)
2025-03-29 19:00:33,366 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-memcached-container-71b4149f)
2025-03-29 19:00:33,802 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/controller-utility-container-7e5b64c5)
2025-03-29 19:00:33,882 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 19:00:34,222 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/backup/controller-utility-container-7e5b64c5)
2025-03-29 19:00:34,442 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/backup/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 19:00:34,630 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/log/controller-utility-container-7e5b64c5)
2025-03-29 19:00:34,944 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/log/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 19:00:35,031 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-utility-container-7e5b64c5)
2025-03-29 19:00:35,324 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 19:00:35,341 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : LXC autodev setup] **********************************************************************
2025-03-29 19:00:36,301 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:00:36,390 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:00:37,586 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:00:37,766 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:00:37,778 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks for dir] *******************************************
2025-03-29 19:00:37,896 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create_dir.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 19:00:37,918 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Create container (dir)] *****************************************************************
2025-03-29 19:01:10,960 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:01:11,522 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:01:43,595 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:01:45,118 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:01:45,130 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Check container state] ******************************************************************
2025-03-29 19:01:45,666 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:01:45,717 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:01:46,134 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:01:46,191 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:01:46,199 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Start the container if it is not already running] ***************************************
2025-03-29 19:01:46,259 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:01:46,299 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:01:46,307 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:01:46,342 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:01:46,350 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_config tasks] ***************************************************
2025-03-29 19:01:46,596 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_config.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 19:01:46,620 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Write default container config] *********************************************************
2025-03-29 19:01:47,091 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 19:01:47,143 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 19:01:47,540 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-memcached-container-71b4149f/autodev)
2025-03-29 19:01:47,576 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-galera-container-f800b10b/autodev)
2025-03-29 19:01:47,972 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 19:01:47,978 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 19:01:48,421 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 19:01:48,512 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 19:01:48,942 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 19:01:49,016 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 19:01:49,412 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 19:01:49,492 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 19:01:49,909 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-utility-container-7e5b64c5/autodev)
2025-03-29 19:01:49,948 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 19:01:50,302 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 19:01:50,365 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 19:01:50,710 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 19:01:50,819 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/autodev)
2025-03-29 19:01:51,101 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 19:01:51,251 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 19:01:51,591 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 19:01:51,665 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 19:01:52,003 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 19:01:52,068 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 19:01:52,084 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Ensure containers have required auto mounts] ********************************************
2025-03-29 19:01:52,558 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:01:52,588 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:01:53,010 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:01:53,066 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:01:53,074 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Ensure bind mount host directories exists] **********************************************
2025-03-29 19:01:53,512 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 19:01:53,540 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 19:01:54,112 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 19:01:54,121 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 19:01:54,136 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] **********************************************
2025-03-29 19:01:54,593 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 19:01:54,650 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 19:01:55,069 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 19:01:55,090 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 19:01:55,103 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Create and start the container] *********************************************************
2025-03-29 19:01:55,583 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:01:55,646 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:01:56,228 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:01:56,382 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:01:56,390 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Gather container facts] *****************************************************************
2025-03-29 19:01:58,536 p=18776 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-memcached-container-71b4149f is using the discovered Python interpreter
at /usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 19:01:58,537 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 19:01:58,572 p=18776 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-galera-container-f800b10b is using the discovered Python interpreter at
/usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 19:01:58,574 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 19:01:59,582 p=18776 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-utility-container-7e5b64c5 is using the discovered Python interpreter at
/usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 19:01:59,582 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 19:01:59,616 p=18776 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-rabbit-mq-container-6f8ad97c is using the discovered Python interpreter
at /usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 19:01:59,616 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:01:59,627 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Drop container setup script] ************************************************************
2025-03-29 19:02:01,187 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 19:02:01,252 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 19:02:02,568 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:02,610 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:02,618 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Drop container first run script] ********************************************************
2025-03-29 19:02:03,889 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:02:03,949 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:02:04,914 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:02:05,003 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:02:05,012 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Execute first script] *******************************************************************
2025-03-29 19:02:05,498 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:02:05,553 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:02:05,972 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:02:06,036 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:02:06,046 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Create container mac script] ************************************************************
2025-03-29 19:02:07,113 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:07,170 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:08,086 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:08,185 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:09,180 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:09,310 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:10,162 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:10,291 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:10,302 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Cleanup old mac scripts] ****************************************************************
2025-03-29 19:02:10,784 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:10,857 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:11,218 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:11,283 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:11,696 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:11,772 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:12,134 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:12,266 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:12,279 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Set define static mac address from an existing interface] *******************************
2025-03-29 19:02:12,825 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:12,842 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:13,259 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:13,295 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:13,758 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:13,798 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:14,183 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:14,217 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:14,229 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Gather hardware addresses to be used as facts] ******************************************
2025-03-29 19:02:14,669 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:14,708 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:15,063 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:15,101 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:15,502 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:15,551 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:15,884 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:15,935 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:15,947 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Set fixed hardware address fact] ********************************************************
2025-03-29 19:02:15,997 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6M2I6Y2M6ZjEK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,019 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6ZDA6YjM6Y2UK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,057 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ZjA6Njk6ZTQK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,062 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ODM6OWQ6YWYK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,111 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6YWM6ZDQ6ZWQK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,118 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6ZTE6Mjg6MWMK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,139 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6N2E6ZjU6NzgK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,144 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6N2Y6ZDI6ZjYK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 19:02:16,154 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : LXC host config for container networks] *************************************************
2025-03-29 19:02:17,236 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 19:02:17,301 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 19:02:18,398 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 19:02:18,409 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 19:02:19,514 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 19:02:19,567 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 19:02:20,534 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 19:02:20,585 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 19:02:20,599 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Container network includes] *************************************************************
2025-03-29 19:02:21,111 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:21,160 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:21,514 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:21,584 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:22,044 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:22,121 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 19:02:22,572 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:22,665 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 19:02:22,760 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Create wiring script] *******************************************************************
2025-03-29 19:02:23,867 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:02:23,902 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:02:25,030 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:02:25,044 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:02:25,058 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Drop veth cleanup script] ***************************************************************
2025-03-29 19:02:26,239 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:02:26,331 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:02:27,333 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:02:27,433 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:02:27,443 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Defines a pre, post, and haltsignal configs] ********************************************
2025-03-29 19:02:27,968 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 19:02:28,044 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 19:02:28,503 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 19:02:28,591 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 19:02:28,984 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 19:02:29,105 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 19:02:29,480 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 19:02:29,591 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 19:02:29,928 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 19:02:30,032 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 19:02:30,351 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 19:02:30,446 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 19:02:30,459 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Run veth wiring] ************************************************************************
2025-03-29 19:02:30,507 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:30,545 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:30,564 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:30,587 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:30,594 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Run container veth wiring script] *******************************************************
2025-03-29 19:02:30,651 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 19:02:30,671 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 19:02:30,688 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:30,715 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 19:02:30,717 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 19:02:30,731 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:30,778 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 19:02:30,794 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 19:02:30,796 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:30,808 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 19:02:30,827 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 19:02:30,829 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:30,837 p=18776 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_network tasks] **************************************************
2025-03-29 19:02:31,025 p=18776 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_network.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 19:02:31,156 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] *************************************************
2025-03-29 19:02:31,246 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 19:02:31,275 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 19:02:31,319 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:31,382 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:31,392 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] *************************
2025-03-29 19:02:31,441 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:31,469 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:31,486 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:31,512 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:31,523 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] **********************************
2025-03-29 19:02:31,572 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:31,599 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:31,610 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:31,629 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:31,639 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] ***************************************************************************
2025-03-29 19:02:31,688 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:31,733 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:31,736 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:31,758 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:31,766 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] ****************************************************************
2025-03-29 19:02:31,825 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:31,858 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:31,869 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:31,891 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:31,905 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] ***********************************************************
2025-03-29 19:02:31,955 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:31,980 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:31,988 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:32,020 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:32,032 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] **********************************************************
2025-03-29 19:02:32,502 p=18776 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 19:02:32,533 p=18776 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 19:02:32,986 p=18776 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:33,017 p=18776 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:33,031 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] *************************************************************
2025-03-29 19:02:33,078 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:33,104 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:33,116 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:33,139 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:33,147 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] *****************************************************
2025-03-29 19:02:33,209 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:33,239 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:33,241 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:33,264 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:33,280 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] **************************************************************
2025-03-29 19:02:33,340 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:33,369 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:33,375 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:33,402 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:33,413 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] **************************************************
2025-03-29 19:02:33,483 p=18776 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 19:02:33,517 p=18776 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 19:02:33,547 p=18776 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:33,576 p=18776 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:33,584 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] ****************************************************
2025-03-29 19:02:34,476 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:34,521 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:35,256 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:35,321 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:36,153 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:36,233 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:37,067 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:37,169 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:37,181 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] *************************************************
2025-03-29 19:02:38,204 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:38,251 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:39,020 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:39,115 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:40,079 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:40,135 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:40,960 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:41,030 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 19:02:41,043 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] ************************************************
2025-03-29 19:02:41,603 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=eth1)
2025-03-29 19:02:41,673 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item=eth1)
2025-03-29 19:02:42,063 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=eth0)
2025-03-29 19:02:42,134 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item=eth0)
2025-03-29 19:02:42,624 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=eth1)
2025-03-29 19:02:42,701 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item=eth1)
2025-03-29 19:02:43,137 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=eth0)
2025-03-29 19:02:43,243 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item=eth0)
2025-03-29 19:02:43,257 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ******************************************************
2025-03-29 19:02:44,655 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:44,720 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:46,001 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:46,037 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:47,364 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:47,406 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:48,633 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:48,698 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 19:02:48,713 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] **********************************************************
2025-03-29 19:02:49,797 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 19:02:49,825 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 19:02:50,928 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 19:02:50,965 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 19:02:50,976 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 19:02:50,986 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 19:02:50,997 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 19:02:51,010 p=18776 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 19:02:51,024 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Stop Container] **************************************************************
2025-03-29 19:02:52,314 p=18776 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 19:02:52,373 p=18776 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 19:02:53,460 p=18776 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 19:02:53,547 p=18776 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 19:02:53,557 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Start Container] *************************************************************
2025-03-29 19:03:13,014 p=18776 u=vagrant n=ansible | fatal: [controller-galera-container-f800b10b -> controller(192.168.56.10)]: FAILED! => {"attempts": 3, "changed": false, "cmd": ["lxc-start", "--daemon", "--name", "controller-galera-container-f800b10b", "--logfile", "/var/log/lxc/lxc-controller-galera-container-f800b10b.log", "--logpriority", "INFO"], "delta": "0:00:00.900892", "end": "2025-03-29 19:03:12.889299", "msg": "non-zero return code", "rc": 1, "start": "2025-03-29 19:03:11.988407", "stderr": "lxc-start: controller-galera-container-f800b10b: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"\nlxc-start: controller-galera-container-f800b10b: tools/lxc_start.c: main: 306 The container failed to start\nlxc-start: controller-galera-container-f800b10b: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode\nlxc-start: controller-galera-container-f800b10b: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options", "stderr_lines": ["lxc-start: controller-galera-container-f800b10b: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"", "lxc-start: controller-galera-container-f800b10b: tools/lxc_start.c: main: 306 The container failed to start", "lxc-start: controller-galera-container-f800b10b: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode", "lxc-start: controller-galera-container-f800b10b: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options"], "stdout": "", "stdout_lines": []}
2025-03-29 19:03:13,412 p=18776 u=vagrant n=ansible | fatal: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]: FAILED! => {"attempts": 3, "changed": false, "cmd": ["lxc-start", "--daemon", "--name", "controller-memcached-container-71b4149f", "--logfile", "/var/log/lxc/lxc-controller-memcached-container-71b4149f.log", "--logpriority", "INFO"], "delta": "0:00:00.900005", "end": "2025-03-29 19:03:13.286252", "msg": "non-zero return code", "rc": 1, "start": "2025-03-29 19:03:12.386247", "stderr": "lxc-start: controller-memcached-container-71b4149f: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"\nlxc-start: controller-memcached-container-71b4149f: tools/lxc_start.c: main: 306 The container failed to start\nlxc-start: controller-memcached-container-71b4149f: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode\nlxc-start: controller-memcached-container-71b4149f: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options", "stderr_lines": ["lxc-start: controller-memcached-container-71b4149f: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"", "lxc-start: controller-memcached-container-71b4149f: tools/lxc_start.c: main: 306 The container failed to start", "lxc-start: controller-memcached-container-71b4149f: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode", "lxc-start: controller-memcached-container-71b4149f: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options"], "stdout": "", "stdout_lines": []}
2025-03-29 19:03:32,091 p=18776 u=vagrant n=ansible | fatal: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]: FAILED! => {"attempts": 3, "changed": false, "cmd": ["lxc-start", "--daemon", "--name", "controller-utility-container-7e5b64c5", "--logfile", "/var/log/lxc/lxc-controller-utility-container-7e5b64c5.log", "--logpriority", "INFO"], "delta": "0:00:00.458357", "end": "2025-03-29 19:03:32.005475", "msg": "non-zero return code", "rc": 1, "start": "2025-03-29 19:03:31.547118", "stderr": "lxc-start: controller-utility-container-7e5b64c5: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"\nlxc-start: controller-utility-container-7e5b64c5: tools/lxc_start.c: main: 306 The container failed to start\nlxc-start: controller-utility-container-7e5b64c5: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode\nlxc-start: controller-utility-container-7e5b64c5: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options", "stderr_lines": ["lxc-start: controller-utility-container-7e5b64c5: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"", "lxc-start: controller-utility-container-7e5b64c5: tools/lxc_start.c: main: 306 The container failed to start", "lxc-start: controller-utility-container-7e5b64c5: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode", "lxc-start: controller-utility-container-7e5b64c5: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options"], "stdout": "", "stdout_lines": []}
2025-03-29 19:03:32,461 p=18776 u=vagrant n=ansible | fatal: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]: FAILED! => {"attempts": 3, "changed": false, "cmd": ["lxc-start", "--daemon", "--name", "controller-rabbit-mq-container-6f8ad97c", "--logfile", "/var/log/lxc/lxc-controller-rabbit-mq-container-6f8ad97c.log", "--logpriority", "INFO"], "delta": "0:00:00.496202", "end": "2025-03-29 19:03:32.377403", "msg": "non-zero return code", "rc": 1, "start": "2025-03-29 19:03:31.881201", "stderr": "lxc-start: controller-rabbit-mq-container-6f8ad97c: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"\nlxc-start: controller-rabbit-mq-container-6f8ad97c: tools/lxc_start.c: main: 306 The container failed to start\nlxc-start: controller-rabbit-mq-container-6f8ad97c: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode\nlxc-start: controller-rabbit-mq-container-6f8ad97c: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options", "stderr_lines": ["lxc-start: controller-rabbit-mq-container-6f8ad97c: lxccontainer.c: wait_on_daemonized_start: 877 Received container state \"ABORTING\" instead of \"RUNNING\"", "lxc-start: controller-rabbit-mq-container-6f8ad97c: tools/lxc_start.c: main: 306 The container failed to start", "lxc-start: controller-rabbit-mq-container-6f8ad97c: tools/lxc_start.c: main: 309 To get more details, run the container in foreground mode", "lxc-start: controller-rabbit-mq-container-6f8ad97c: tools/lxc_start.c: main: 311 Additional information can be obtained by setting the --logfile and --logpriority options"], "stdout": "", "stdout_lines": []}
2025-03-29 19:03:32,512 p=18776 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Wait for container tmpfiles-setup finish] ************************************
2025-03-29 19:04:13,882 p=18776 u=vagrant n=ansible | fatal: [controller-galera-container-f800b10b]: FAILED! => {"attempts": 20, "changed": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to controller closed.\r\n", "stderr_lines": ["Shared connection to controller closed."], "stdout": "lxc-attach: controller-galera-container-f800b10b: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\r\nlxc-attach: controller-galera-container-f800b10b: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\r\n", "stdout_lines": ["lxc-attach: controller-galera-container-f800b10b: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid", "lxc-attach: controller-galera-container-f800b10b: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context"]}
2025-03-29 19:04:13,909 p=18776 u=vagrant n=ansible | fatal: [controller-memcached-container-71b4149f]: FAILED! => {"attempts": 20, "changed": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to controller closed.\r\n", "stderr_lines": ["Shared connection to controller closed."], "stdout": "lxc-attach: controller-memcached-container-71b4149f: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\r\nlxc-attach: controller-memcached-container-71b4149f: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\r\n", "stdout_lines": ["lxc-attach: controller-memcached-container-71b4149f: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid", "lxc-attach: controller-memcached-container-71b4149f: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context"]}
2025-03-29 19:04:55,380 p=18776 u=vagrant n=ansible | fatal: [controller-rabbit-mq-container-6f8ad97c]: FAILED! => {"attempts": 20, "changed": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to controller closed.\r\n", "stderr_lines": ["Shared connection to controller closed."], "stdout": "lxc-attach: controller-rabbit-mq-container-6f8ad97c: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\r\nlxc-attach: controller-rabbit-mq-container-6f8ad97c: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\r\n", "stdout_lines": ["lxc-attach: controller-rabbit-mq-container-6f8ad97c: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid", "lxc-attach: controller-rabbit-mq-container-6f8ad97c: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context"]}
2025-03-29 19:04:55,390 p=18776 u=vagrant n=ansible | fatal: [controller-utility-container-7e5b64c5]: FAILED! => {"attempts": 20, "changed": false, "msg": "non-zero return code", "rc": 1, "stderr": "Shared connection to controller closed.\r\n", "stderr_lines": ["Shared connection to controller closed."], "stdout": "lxc-attach: controller-utility-container-7e5b64c5: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid\r\nlxc-attach: controller-utility-container-7e5b64c5: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context\r\n", "stdout_lines": ["lxc-attach: controller-utility-container-7e5b64c5: attach.c: get_attach_context: 405 Connection refused - Failed to get init pid", "lxc-attach: controller-utility-container-7e5b64c5: attach.c: lxc_attach: 1469 Connection refused - Failed to get attach context"]}
2025-03-29 19:04:55,395 p=18776 u=vagrant n=ansible | PLAY RECAP ***********************************************************************************************************
2025-03-29 19:04:55,397 p=18776 u=vagrant n=ansible | controller                 : ok=130  changed=66   unreachable=0    failed=0    skipped=49   rescued=0    ignored=0   
2025-03-29 19:04:55,397 p=18776 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=40   changed=23   unreachable=0    failed=2    skipped=16   rescued=0    ignored=0   
2025-03-29 19:04:55,397 p=18776 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=40   changed=23   unreachable=0    failed=2    skipped=16   rescued=0    ignored=0   
2025-03-29 19:04:55,398 p=18776 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=40   changed=23   unreachable=0    failed=2    skipped=16   rescued=0    ignored=0   
2025-03-29 19:04:55,398 p=18776 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=40   changed=23   unreachable=0    failed=2    skipped=16   rescued=0    ignored=0   
2025-03-29 19:04:55,398 p=18776 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-29 21:19:59,470 p=23334 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 21:20:00,214 p=23334 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 21:20:00,757 p=23334 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 21:20:00,840 p=23334 u=vagrant n=ansible | PLAY [Create CA certificates] ****************************************************************************************
2025-03-29 21:20:00,863 p=23334 u=vagrant n=ansible | TASK [Create CA certificates] ****************************************************************************************
2025-03-29 21:20:00,915 p=23334 u=vagrant n=ansible | included: pki for localhost
2025-03-29 21:20:00,925 p=23334 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 21:20:00,972 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:00,980 p=23334 u=vagrant n=ansible | TASK [pki : Create PKI directories] **********************************************************************************
2025-03-29 21:20:01,685 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 21:20:02,075 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-29 21:20:02,458 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 21:20:02,835 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-29 21:20:03,207 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-29 21:20:03,589 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-29 21:20:03,976 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-29 21:20:03,989 p=23334 u=vagrant n=ansible | TASK [pki : Create certificate authorities] **************************************************************************
2025-03-29 21:20:04,115 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-29 21:20:04,146 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-29 21:20:04,157 p=23334 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ********************************************
2025-03-29 21:20:04,598 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-29 21:20:04,980 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-29 21:20:05,321 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-29 21:20:05,686 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-29 21:20:05,698 p=23334 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 21:20:06,101 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:06,112 p=23334 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ********************************************************
2025-03-29 21:20:06,731 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:06,742 p=23334 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] *************************************************************
2025-03-29 21:20:12,316 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:12,328 p=23334 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] **************************************************************
2025-03-29 21:20:12,924 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:12,934 p=23334 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *******************************************************************
2025-03-29 21:20:12,984 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:12,995 p=23334 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] *****************************************************
2025-03-29 21:20:13,037 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,048 p=23334 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] *****************************************************
2025-03-29 21:20:13,095 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,107 p=23334 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ********************************************************
2025-03-29 21:20:13,139 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,150 p=23334 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 21:20:13,190 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,203 p=23334 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] ****************************************************************
2025-03-29 21:20:13,244 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,261 p=23334 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] ***************************************************************
2025-03-29 21:20:13,305 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,316 p=23334 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 21:20:13,350 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,362 p=23334 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 21:20:13,407 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:13,421 p=23334 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ************************************
2025-03-29 21:20:13,858 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-29 21:20:14,220 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-29 21:20:14,592 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-29 21:20:14,961 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-29 21:20:14,974 p=23334 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 21:20:15,417 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:15,429 p=23334 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] ************************************************
2025-03-29 21:20:15,868 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:15,879 p=23334 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] *****************************************************
2025-03-29 21:20:20,915 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:20,926 p=23334 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ******************************************************
2025-03-29 21:20:21,298 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:21,308 p=23334 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] ***********************************************************
2025-03-29 21:20:21,352 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,364 p=23334 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *********************************************
2025-03-29 21:20:21,410 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,421 p=23334 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *********************************************
2025-03-29 21:20:21,455 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,468 p=23334 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] ************************************************
2025-03-29 21:20:21,517 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,525 p=23334 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 21:20:21,566 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,576 p=23334 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ********************************************************
2025-03-29 21:20:21,613 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,623 p=23334 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *******************************************************
2025-03-29 21:20:21,670 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:21,680 p=23334 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 21:20:22,133 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:22,144 p=23334 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 21:20:22,255 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:22,339 p=23334 u=vagrant n=ansible | PLAY [Create SSHD CA] ************************************************************************************************
2025-03-29 21:20:22,366 p=23334 u=vagrant n=ansible | TASK [Create SSHD certificate authority] *****************************************************************************
2025-03-29 21:20:22,428 p=23334 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-29 21:20:22,438 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] *****************************************
2025-03-29 21:20:22,471 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:22,483 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *******************************************************
2025-03-29 21:20:22,885 p=23334 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-29 21:20:22,895 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ******************************************************************
2025-03-29 21:20:22,947 p=23334 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-29 21:20:22,959 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] **************************
2025-03-29 21:20:28,299 p=23334 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:20:28,309 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] *******
2025-03-29 21:20:28,361 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,375 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***********
2025-03-29 21:20:28,430 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,440 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***************************************
2025-03-29 21:20:28,463 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,472 p=23334 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] *****************************************************************
2025-03-29 21:20:28,497 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,549 p=23334 u=vagrant n=ansible | PLAY [Generate any extra user certificates] **************************************************************************
2025-03-29 21:20:28,574 p=23334 u=vagrant n=ansible | TASK [Create user certificates] **************************************************************************************
2025-03-29 21:20:28,642 p=23334 u=vagrant n=ansible | included: pki for localhost
2025-03-29 21:20:28,652 p=23334 u=vagrant n=ansible | TASK [pki : Create Server certificates] ******************************************************************************
2025-03-29 21:20:28,695 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,712 p=23334 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ********************************************
2025-03-29 21:20:28,755 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,765 p=23334 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] **************************************************************
2025-03-29 21:20:28,796 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,804 p=23334 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ******************************************************************
2025-03-29 21:20:28,826 p=23334 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:20:28,874 p=23334 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *********************************************************************************
2025-03-29 21:20:28,899 p=23334 u=vagrant n=ansible | TASK [Ensure python is installed] ************************************************************************************
2025-03-29 21:20:30,170 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:30,299 p=23334 u=vagrant n=ansible | PLAY [Gather host facts] *********************************************************************************************
2025-03-29 21:20:30,432 p=23334 u=vagrant n=ansible | PLAY [Basic host setup] **********************************************************************************************
2025-03-29 21:20:30,462 p=23334 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:20:30,512 p=23334 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 21:20:30,541 p=23334 u=vagrant n=ansible | TASK [Check for a supported Operating System] ************************************************************************
2025-03-29 21:20:30,608 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:20:30,662 p=23334 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 21:20:31,721 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:31,808 p=23334 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 21:20:31,847 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:31,894 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] **************************************************
2025-03-29 21:20:32,006 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:32,032 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] **************************************************************
2025-03-29 21:20:32,468 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:32,489 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] *****************************************************************
2025-03-29 21:20:33,435 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:33,453 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ********************************************************
2025-03-29 21:20:33,479 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:33,502 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ****************************************
2025-03-29 21:20:34,155 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:34,173 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] **************************************************
2025-03-29 21:20:34,209 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:34,227 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] *************************************************************
2025-03-29 21:20:34,643 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:34,770 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] ***********************************************************
2025-03-29 21:20:35,648 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:35,667 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *******************************************************************
2025-03-29 21:20:35,747 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller
2025-03-29 21:20:35,773 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] *****************************************************************
2025-03-29 21:20:35,927 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:35,945 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] ***************************************************************************
2025-03-29 21:20:36,380 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:20:36,402 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] ************************************************************
2025-03-29 21:20:36,791 p=23334 u=vagrant n=ansible | changed: [controller -> localhost]
2025-03-29 21:20:36,812 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] *************************************************************
2025-03-29 21:20:38,384 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:38,405 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] **************************************
2025-03-29 21:20:38,481 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller
2025-03-29 21:20:38,506 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *******************************************************
2025-03-29 21:20:38,931 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:38,951 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *******************************************************
2025-03-29 21:20:39,069 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:20:39,093 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] **************************************
2025-03-29 21:20:39,520 p=23334 u=vagrant n=ansible | ok: [controller] => (item=uca.list)
2025-03-29 21:20:39,874 p=23334 u=vagrant n=ansible | ok: [controller] => (item=osbpo.list)
2025-03-29 21:20:39,901 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] *******************************
2025-03-29 21:20:51,015 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:51,036 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *********************************************************************
2025-03-29 21:20:52,002 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:20:52,026 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] **************************************************************************
2025-03-29 21:20:52,961 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:52,980 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] ****************************************************************************
2025-03-29 21:20:53,017 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:53,038 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *******************************************************
2025-03-29 21:20:53,189 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/configure_metal_hosts.yml for controller
2025-03-29 21:20:53,218 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Check Kernel Version] ************************************************************************
2025-03-29 21:20:53,260 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:53,281 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages for bare metal nodes] ************************************************
2025-03-29 21:20:55,230 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:20:55,250 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages for bare metal nodes] *****************************
2025-03-29 21:20:55,281 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:55,306 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Check how kernel modules are implemented (statically builtin, dynamic, not set)] *************
2025-03-29 21:20:55,341 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:55,365 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Fail fast if we can't load a module] *********************************************************
2025-03-29 21:20:55,393 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:20:55,417 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Load kernel module(s)] ***********************************************************************
2025-03-29 21:20:56,045 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': '8021q'})
2025-03-29 21:20:56,430 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'br_netfilter'})
2025-03-29 21:20:56,825 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_multipath'})
2025-03-29 21:20:57,225 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_snapshot'})
2025-03-29 21:20:57,662 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ebtables'})
2025-03-29 21:20:58,058 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6table_filter'})
2025-03-29 21:20:58,448 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6_tables'})
2025-03-29 21:20:58,845 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_tables'})
2025-03-29 21:20:59,231 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'xt_MASQUERADE'})
2025-03-29 21:20:59,679 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ipt_REJECT'})
2025-03-29 21:21:00,070 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_filter'})
2025-03-29 21:21:00,472 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_mangle'})
2025-03-29 21:21:00,861 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_nat'})
2025-03-29 21:21:01,249 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_vs'})
2025-03-29 21:21:01,635 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iscsi_tcp'})
2025-03-29 21:21:02,026 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nbd'})
2025-03-29 21:21:02,403 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_conntrack'})
2025-03-29 21:21:02,765 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_defrag_ipv4'})
2025-03-29 21:21:03,171 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_nat'})
2025-03-29 21:21:03,590 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vhost_net'})
2025-03-29 21:21:03,986 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'x_tables'})
2025-03-29 21:21:04,017 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Write list of modules to load at boot] *******************************************************
2025-03-29 21:21:04,967 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:04,990 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Adding new system tuning] ********************************************************************
2025-03-29 21:21:05,749 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_watches', 'value': 1048576})
2025-03-29 21:21:06,135 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2025-03-29 21:21:06,503 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2025-03-29 21:21:06,871 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.ip_forward', 'value': 1})
2025-03-29 21:21:07,285 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.netfilter.nf_conntrack_max', 'value': 262144})
2025-03-29 21:21:07,647 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_background_ratio', 'value': 5})
2025-03-29 21:21:08,026 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_ratio', 'value': 10})
2025-03-29 21:21:08,392 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.swappiness', 'value': 5})
2025-03-29 21:21:08,786 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2025-03-29 21:21:09,200 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2025-03-29 21:21:09,570 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-arptables', 'value': 1})
2025-03-29 21:21:09,936 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.igmp_max_memberships', 'value': 1024})
2025-03-29 21:21:10,342 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-29 21:21:10,743 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-29 21:21:11,131 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-29 21:21:11,521 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv4.route.gc_thresh', 'value': '16384'})
2025-03-29 21:21:11,895 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_interval', 'value': 60})
2025-03-29 21:21:12,289 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 21:21:12,654 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-29 21:21:13,010 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-29 21:21:13,409 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-29 21:21:13,814 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'key': 'net.ipv6.route.gc_thresh', 'value': '16384'})
2025-03-29 21:21:14,233 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_interval', 'value': 60})
2025-03-29 21:21:14,593 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 21:21:14,938 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.conf.lo.disable_ipv6', 'value': 0})
2025-03-29 21:21:15,327 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.aio-max-nr', 'value': 131072})
2025-03-29 21:21:15,352 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Configure sysstat] ***************************************************************************
2025-03-29 21:21:15,406 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_sysstat.yml for controller
2025-03-29 21:21:15,433 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat config] ***********************************************************************
2025-03-29 21:21:16,327 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:16,345 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat cron] *************************************************************************
2025-03-29 21:21:17,199 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:17,224 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Start and enable the sysstat service] ********************************************************
2025-03-29 21:21:17,259 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:17,283 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Create a directory to hold systemd journals on disk] *****************************************
2025-03-29 21:21:17,681 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:17,700 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Create tmpfiles structure in journald directory] *********************************************
2025-03-29 21:21:17,738 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:17,759 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] **************************************************************
2025-03-29 21:21:18,209 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:18,230 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *********************************************************************
2025-03-29 21:21:20,081 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:20,100 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] **************************************************
2025-03-29 21:21:20,137 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:20,160 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] ************************************************************************
2025-03-29 21:21:20,627 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:20,651 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] *****************************************************************************
2025-03-29 21:21:20,690 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:20,710 p=23334 u=vagrant n=ansible | TASK [Including PKI role] ********************************************************************************************
2025-03-29 21:21:20,799 p=23334 u=vagrant n=ansible | included: pki for controller
2025-03-29 21:21:20,840 p=23334 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 21:21:20,904 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:20,924 p=23334 u=vagrant n=ansible | TASK [pki : Install certificate authorities] *************************************************************************
2025-03-29 21:21:21,092 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller
2025-03-29 21:21:21,126 p=23334 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] ************************************************
2025-03-29 21:21:21,585 p=23334 u=vagrant n=ansible | ok: [controller -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 21:21:21,605 p=23334 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *********************************************************************
2025-03-29 21:21:22,601 p=23334 u=vagrant n=ansible | ok: [controller] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:21:22,627 p=23334 u=vagrant n=ansible | TASK [pki : Update CA store] *****************************************************************************************
2025-03-29 21:21:22,665 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:22,705 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *********************************************************
2025-03-29 21:21:22,836 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller
2025-03-29 21:21:22,881 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] *****************************************************************************
2025-03-29 21:21:23,579 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:23,597 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ******************************************************
2025-03-29 21:21:24,307 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:24,328 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] **************************************************************
2025-03-29 21:21:24,372 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:24,395 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] **************************************************
2025-03-29 21:21:24,426 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:24,447 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] *****************************************************
2025-03-29 21:21:24,478 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:24,539 p=23334 u=vagrant n=ansible | TASK [Ensure deploy host SSH connection is reset] ********************************************************************
2025-03-29 21:21:24,635 p=23334 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] ****************************************************************************************
2025-03-29 21:21:24,758 p=23334 u=vagrant n=ansible | PLAY [Basic lxc host setup] ******************************************************************************************
2025-03-29 21:21:24,784 p=23334 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:21:24,833 p=23334 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 21:21:24,865 p=23334 u=vagrant n=ansible | TASK [Check the state of the default LXC service log directory] ******************************************************
2025-03-29 21:21:25,557 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:25,573 p=23334 u=vagrant n=ansible | TASK [Create the log aggregation parent directory] *******************************************************************
2025-03-29 21:21:25,938 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:25,957 p=23334 u=vagrant n=ansible | TASK [Move the existing folder to the log aggregation parent] ********************************************************
2025-03-29 21:21:26,000 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:26,023 p=23334 u=vagrant n=ansible | TASK [Create the new LXC service log directory] **********************************************************************
2025-03-29 21:21:26,412 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:26,428 p=23334 u=vagrant n=ansible | TASK [Create the LXC service log aggregation link] *******************************************************************
2025-03-29 21:21:26,812 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:26,913 p=23334 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 21:21:26,957 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:26,973 p=23334 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 21:21:27,008 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:27,044 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Gather variables for each operating system] ********************************************************
2025-03-29 21:21:27,148 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:27,170 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Gather container variables] ************************************************************************
2025-03-29 21:21:27,264 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:27,285 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_pre_install tasks] *******************************************************************
2025-03-29 21:21:27,328 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_pre_install.yml for controller
2025-03-29 21:21:27,345 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Create base directories] ***************************************************************************
2025-03-29 21:21:27,740 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/lxc)
2025-03-29 21:21:28,096 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/usr/local/bin)
2025-03-29 21:21:28,469 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/network/interfaces.d)
2025-03-29 21:21:28,829 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/apparmor.d/lxc)
2025-03-29 21:21:29,213 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/usr/share/lxc/templates)
2025-03-29 21:21:29,565 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/openstack)
2025-03-29 21:21:29,905 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/openstack/backup)
2025-03-29 21:21:30,270 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/openstack/log)
2025-03-29 21:21:30,637 p=23334 u=vagrant n=ansible | changed: [controller] => (item=/var/lib/lxc)
2025-03-29 21:21:30,991 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/var/cache/lxc/download)
2025-03-29 21:21:31,023 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_install tasks"] **********************************************************************
2025-03-29 21:21:31,097 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_install_apt.yml for controller
2025-03-29 21:21:31,125 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Remove conflicting packages] ***********************************************************************
2025-03-29 21:21:32,649 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:32,669 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Install apt packages] ******************************************************************************
2025-03-29 21:21:34,617 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:34,637 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Drop irqbalance config] ****************************************************************************
2025-03-29 21:21:35,567 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:35,588 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc-openstack apparmor profile] ***************************************************************
2025-03-29 21:21:36,494 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:36,518 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Flush handler to reload apparmor profiles] *********************************************************
2025-03-29 21:21:36,546 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_post_install tasks] ******************************************************************
2025-03-29 21:21:36,604 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_post_install.yml for controller
2025-03-29 21:21:36,626 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Ensure the lxc dnsmasq user exists] ****************************************************************
2025-03-29 21:21:37,430 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:37,448 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Drop base config file(s)] **************************************************************************
2025-03-29 21:21:38,309 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-openstack.conf.j2', 'dest': '/etc/lxc/lxc-openstack.conf'})
2025-03-29 21:21:39,143 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-net.default.j2', 'dest': '/etc/default/lxc-net', 'mode': '0644'})
2025-03-29 21:21:39,959 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc.default.j2', 'dest': '/etc/default/lxc', 'mode': '0644'})
2025-03-29 21:21:40,795 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-system-manage.j2', 'dest': '/usr/local/bin/lxc-system-manage', 'mode': '0755'})
2025-03-29 21:21:40,817 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc veth check script] ************************************************************************
2025-03-29 21:21:41,675 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:41,693 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Set systemd DefaultTasksMax value] *****************************************************************
2025-03-29 21:21:42,355 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:42,378 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Set sshd MaxSessions] ******************************************************************************
2025-03-29 21:21:42,744 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:42,763 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Tuning kernel for lxc] *****************************************************************************
2025-03-29 21:21:43,225 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_instances', 'value': 1024})
2025-03-29 21:21:43,244 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_net tasks] ***************************************************************************
2025-03-29 21:21:43,320 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_net.yml for controller
2025-03-29 21:21:43,344 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Check if NetworkManager is running] ****************************************************************
2025-03-29 21:21:43,714 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:43,734 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Ensure network services wait on networking (if using NetworkManager)] ******************************
2025-03-29 21:21:43,760 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:43,782 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Disable and stop lxc-net] **************************************************************************
2025-03-29 21:21:45,058 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:45,083 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Setup LXC OVS Bridge] ******************************************************************************
2025-03-29 21:21:45,122 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:45,145 p=23334 u=vagrant n=ansible | TASK [Run the systemd-networkd role] *********************************************************************************
2025-03-29 21:21:45,344 p=23334 u=vagrant n=ansible | included: systemd_networkd for controller
2025-03-29 21:21:45,365 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] *************************************************
2025-03-29 21:21:45,445 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:45,464 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] *************************
2025-03-29 21:21:45,505 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:45,530 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] **********************************
2025-03-29 21:21:45,565 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:45,588 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] ***************************************************************************
2025-03-29 21:21:45,626 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:45,647 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] ****************************************************************
2025-03-29 21:21:45,682 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:45,702 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] ***********************************************************
2025-03-29 21:21:45,738 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:45,760 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] **********************************************************
2025-03-29 21:21:46,168 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:46,191 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] *************************************************************
2025-03-29 21:21:46,223 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:46,243 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] *****************************************************
2025-03-29 21:21:46,268 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:46,290 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] **************************************************************
2025-03-29 21:21:46,320 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:46,337 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] **************************************************
2025-03-29 21:21:47,234 p=23334 u=vagrant n=ansible | ok: [controller] => (item=[0, {'NetDev': {'Name': 'lxcbr0', 'Kind': 'bridge'}, 'Bridge': {'ForwardDelaySec': 0, 'HelloTimeSec': 2, 'MaxAgeSec': 12, 'STP': False}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 21:21:47,254 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] ****************************************************
2025-03-29 21:21:48,043 p=23334 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 21:21:48,073 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] *************************************************
2025-03-29 21:21:48,822 p=23334 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 21:21:48,843 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] ************************************************
2025-03-29 21:21:48,905 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:48,922 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ******************************************************
2025-03-29 21:21:48,980 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:49,005 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] **********************************************************
2025-03-29 21:21:49,938 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:21:49,957 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:21:49,985 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] ***************************************************************
2025-03-29 21:21:50,074 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}]) 
2025-03-29 21:21:50,083 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:50,127 p=23334 u=vagrant n=ansible | TASK [Run the systemd-service role] **********************************************************************************
2025-03-29 21:21:50,254 p=23334 u=vagrant n=ansible | included: systemd_service for controller
2025-03-29 21:21:50,287 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] *************************************************************************
2025-03-29 21:21:50,720 p=23334 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 21:21:50,750 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] ****************************************************************
2025-03-29 21:21:51,224 p=23334 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lock/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 21:21:51,243 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] **************************************************************
2025-03-29 21:21:51,286 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:51,309 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *********************************************************************
2025-03-29 21:21:52,266 p=23334 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-lxc-dnsmasq.conf"})
2025-03-29 21:21:52,288 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *******************************************************************
2025-03-29 21:21:53,000 p=23334 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/lxc-dnsmasq.service", "config_overrides": {"Unit": {"Before": "lxc.service"}, "Service": {"PIDFile": "/run/lxc/dnsmasq.pid"}}, "config_type": "ini"})
2025-03-29 21:21:53,040 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ******************************************************************
2025-03-29 21:21:53,138 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:53,320 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *********************************************************************
2025-03-29 21:21:53,404 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:53,431 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ********************************************************************
2025-03-29 21:21:53,476 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:53,501 p=23334 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ***************************************************************
2025-03-29 21:21:53,561 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:53,584 p=23334 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] ****************************************************************
2025-03-29 21:21:53,677 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 21:21:53,713 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load service lxc-dnsmasq] ********************************************************************
2025-03-29 21:21:54,490 p=23334 u=vagrant n=ansible | ok: [controller] => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 21:21:54,528 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load timer lxc-dnsmasq] **********************************************************************
2025-03-29 21:21:54,588 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq"}) 
2025-03-29 21:21:54,595 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:54,615 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load socket] *********************************************************************************
2025-03-29 21:21:54,666 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:54,703 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Check Container Bridge exists] *********************************************************************
2025-03-29 21:21:55,148 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:55,166 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] ************************************************************************************
2025-03-29 21:21:55,206 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache tasks] *************************************************************************
2025-03-29 21:21:55,263 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache.yml for controller
2025-03-29 21:21:55,297 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Set LXC cache fact(s)] *****************************************************************************
2025-03-29 21:21:55,353 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:55,371 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Retrieve the expiry object] ************************************************************************
2025-03-29 21:21:55,749 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:21:55,769 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Set cache refresh fact] ****************************************************************************
2025-03-29 21:21:55,805 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:55,830 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_rootfs tasks] ******************************************************************
2025-03-29 21:21:55,856 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:55,878 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_preparation tasks] *************************************************************
2025-03-29 21:21:55,910 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:55,931 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_create tasks] ******************************************************************
2025-03-29 21:21:55,959 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:21:55,981 p=23334 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] ************************************************************************************
2025-03-29 21:21:56,100 p=23334 u=vagrant n=ansible | PLAY [Set lxc containers group] **************************************************************************************
2025-03-29 21:21:56,186 p=23334 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:21:56,299 p=23334 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:21:56,330 p=23334 u=vagrant n=ansible | TASK [Add hosts to dynamic inventory group] **************************************************************************
2025-03-29 21:21:56,388 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:21:56,413 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:21:56,423 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:21:56,450 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:21:56,607 p=23334 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] ****************************************************************************************
2025-03-29 21:21:56,722 p=23334 u=vagrant n=ansible | PLAY [Create container(s)] *******************************************************************************************
2025-03-29 21:21:56,735 p=23334 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:21:56,836 p=23334 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:21:56,899 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *********************************************************
2025-03-29 21:21:57,358 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:21:57,400 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:21:57,777 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:21:57,815 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:21:57,824 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Check the physical_host variable is set] ************************************************
2025-03-29 21:21:57,874 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:21:57,904 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:21:57,920 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:21:57,960 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:21:57,972 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Read custom facts from previous runs] ***************************************************
2025-03-29 21:22:00,376 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:00,431 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:02,283 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:02,332 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:02,342 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Check for lxc volume group] *************************************************************
2025-03-29 21:22:02,411 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:02,435 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:02,457 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:02,479 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:02,491 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : LXC VG check] ***************************************************************************
2025-03-29 21:22:02,517 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:02,538 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:02,559 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:02,580 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:02,593 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_destroy tasks] **************************************************
2025-03-29 21:22:02,622 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:02,644 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:02,665 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:02,685 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:02,695 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks] ***************************************************
2025-03-29 21:22:02,811 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:22:02,824 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Container service directories] **********************************************************
2025-03-29 21:22:03,308 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/controller-galera-container-f800b10b)
2025-03-29 21:22:03,379 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/controller-memcached-container-71b4149f)
2025-03-29 21:22:03,695 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/backup/controller-galera-container-f800b10b)
2025-03-29 21:22:03,781 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-memcached-container-71b4149f)
2025-03-29 21:22:04,127 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/log/controller-galera-container-f800b10b)
2025-03-29 21:22:04,212 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/log/controller-memcached-container-71b4149f)
2025-03-29 21:22:04,542 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-galera-container-f800b10b)
2025-03-29 21:22:04,641 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-memcached-container-71b4149f)
2025-03-29 21:22:04,964 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/controller-utility-container-7e5b64c5)
2025-03-29 21:22:05,096 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:22:05,431 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/backup/controller-utility-container-7e5b64c5)
2025-03-29 21:22:05,567 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/backup/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:22:05,896 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/log/controller-utility-container-7e5b64c5)
2025-03-29 21:22:06,050 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/log/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:22:06,375 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-utility-container-7e5b64c5)
2025-03-29 21:22:06,497 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:22:06,513 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : LXC autodev setup] **********************************************************************
2025-03-29 21:22:07,460 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:07,531 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:08,392 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:08,468 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:08,480 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks for dir] *******************************************
2025-03-29 21:22:08,583 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create_dir.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:22:08,605 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create container (dir)] *****************************************************************
2025-03-29 21:22:09,410 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:10,911 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:11,498 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:12,925 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:12,933 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Check container state] ******************************************************************
2025-03-29 21:22:13,439 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:13,488 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:13,886 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:13,924 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:13,933 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Start the container if it is not already running] ***************************************
2025-03-29 21:22:14,000 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:14,031 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:14,058 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:14,083 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:14,093 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_config tasks] ***************************************************
2025-03-29 21:22:14,346 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_config.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:22:14,373 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Write default container config] *********************************************************
2025-03-29 21:22:14,812 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:22:14,827 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:22:15,231 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-galera-container-f800b10b/autodev)
2025-03-29 21:22:15,266 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-memcached-container-71b4149f/autodev)
2025-03-29 21:22:15,693 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:22:15,755 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:22:16,130 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:22:16,212 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:22:16,536 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:22:16,617 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:22:16,921 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:22:17,042 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:22:17,533 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:22:17,645 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:22:18,069 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:22:18,160 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:22:18,607 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:22:18,713 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/autodev)
2025-03-29 21:22:19,016 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:22:19,250 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:22:19,591 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-utility-container-7e5b64c5/autodev)
2025-03-29 21:22:19,766 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:22:19,981 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:22:20,156 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:22:20,173 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Ensure containers have required auto mounts] ********************************************
2025-03-29 21:22:20,619 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:20,671 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:21,042 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:21,063 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:21,073 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Ensure bind mount host directories exists] **********************************************
2025-03-29 21:22:21,575 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 21:22:21,651 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 21:22:22,271 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 21:22:22,315 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 21:22:22,326 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] **********************************************
2025-03-29 21:22:22,864 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 21:22:22,881 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 21:22:23,329 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 21:22:23,379 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 21:22:23,388 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create and start the container] *********************************************************
2025-03-29 21:22:23,845 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:23,886 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:24,323 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:24,376 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:24,386 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Gather container facts] *****************************************************************
2025-03-29 21:22:26,155 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:22:26,209 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:22:26,983 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:27,054 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:27,065 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Drop container setup script] ************************************************************
2025-03-29 21:22:28,217 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:22:28,275 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:22:29,478 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:29,581 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:29,591 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Drop container first run script] ********************************************************
2025-03-29 21:22:30,567 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:30,597 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:31,707 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:31,790 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:31,799 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Execute first script] *******************************************************************
2025-03-29 21:22:32,300 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:32,349 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:32,772 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:32,820 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:32,828 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create container mac script] ************************************************************
2025-03-29 21:22:33,862 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:33,943 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:34,893 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:34,989 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:36,008 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:36,114 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:37,036 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:37,129 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:37,148 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Cleanup old mac scripts] ****************************************************************
2025-03-29 21:22:37,599 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:37,635 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:38,129 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:38,164 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:38,604 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:38,636 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:39,044 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:39,052 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:39,071 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Set define static mac address from an existing interface] *******************************
2025-03-29 21:22:39,581 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:39,615 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:39,970 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:40,026 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:40,400 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:40,503 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:40,769 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:40,855 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:40,868 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Gather hardware addresses to be used as facts] ******************************************
2025-03-29 21:22:41,449 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:41,470 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:42,058 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:42,075 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:42,557 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:42,589 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:42,970 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:43,007 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:43,022 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Set fixed hardware address fact] ********************************************************
2025-03-29 21:22:43,078 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6M2I6Y2M6ZjEK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,108 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6ZDA6YjM6Y2UK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,145 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ZjA6Njk6ZTQK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,164 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ODM6OWQ6YWYK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,181 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6YWM6ZDQ6ZWQK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,204 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6N2E6ZjU6NzgK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,228 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6ZTE6Mjg6MWMK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,248 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6N2Y6ZDI6ZjYK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:22:43,261 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : LXC host config for container networks] *************************************************
2025-03-29 21:22:44,327 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:22:44,377 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:22:45,266 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:22:45,310 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:22:46,271 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:22:46,326 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:22:47,198 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:22:47,320 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:22:47,342 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Container network includes] *************************************************************
2025-03-29 21:22:47,988 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:48,068 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:48,383 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:48,473 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:48,867 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:48,952 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:22:49,270 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:49,339 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:22:49,351 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create wiring script] *******************************************************************
2025-03-29 21:22:50,232 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:50,285 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:51,086 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:51,135 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:51,146 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Drop veth cleanup script] ***************************************************************
2025-03-29 21:22:52,117 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:22:52,180 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:22:53,106 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:22:53,160 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:22:53,177 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Defines a pre, post, and haltsignal configs] ********************************************
2025-03-29 21:22:53,665 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 21:22:53,683 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 21:22:54,116 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 21:22:54,126 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 21:22:54,603 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:22:54,607 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:22:55,020 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 21:22:55,059 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 21:22:55,420 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 21:22:55,452 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 21:22:55,929 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:22:55,947 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:22:55,960 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Run veth wiring] ************************************************************************
2025-03-29 21:22:56,017 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:56,053 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:56,081 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:56,100 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:56,108 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Run container veth wiring script] *******************************************************
2025-03-29 21:22:56,192 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:22:56,235 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:22:56,239 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:22:56,255 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:56,284 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:22:56,299 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:56,338 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:22:56,366 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:22:56,448 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:22:56,459 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:56,481 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:22:56,484 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:56,496 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_network tasks] **************************************************
2025-03-29 21:22:56,679 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_network.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:22:56,861 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] *************************************************
2025-03-29 21:22:56,956 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:22:56,981 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:22:57,032 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:57,057 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:57,067 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] *************************
2025-03-29 21:22:57,121 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:57,165 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:57,187 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:57,215 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:57,226 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] **********************************
2025-03-29 21:22:57,267 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:57,294 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:57,303 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:57,325 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:57,335 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] ***************************************************************************
2025-03-29 21:22:57,399 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:57,423 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:57,431 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:57,455 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:57,464 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] ****************************************************************
2025-03-29 21:22:57,510 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:57,536 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:57,553 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:57,579 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:57,591 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] ***********************************************************
2025-03-29 21:22:57,635 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:57,659 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:57,672 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:57,688 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:57,697 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] **********************************************************
2025-03-29 21:22:58,173 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:22:58,215 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:22:58,623 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:58,685 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:58,694 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] *************************************************************
2025-03-29 21:22:58,739 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:58,781 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:58,783 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:58,803 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:58,817 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] *****************************************************
2025-03-29 21:22:58,861 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:58,885 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:58,891 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:58,916 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:58,927 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] **************************************************************
2025-03-29 21:22:58,971 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:59,000 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:59,009 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:59,036 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:59,047 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] **************************************************
2025-03-29 21:22:59,115 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:22:59,157 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:22:59,199 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:22:59,218 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:22:59,225 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] ****************************************************
2025-03-29 21:23:00,025 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:00,094 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:00,752 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:00,851 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:01,658 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:01,758 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:02,389 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:02,506 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:02,516 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] *************************************************
2025-03-29 21:23:03,439 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:03,491 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:04,208 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:04,284 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:05,240 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:05,339 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:06,078 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:06,161 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:23:06,175 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] ************************************************
2025-03-29 21:23:06,691 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth1)
2025-03-29 21:23:06,723 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth1)
2025-03-29 21:23:07,096 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth0)
2025-03-29 21:23:07,136 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth0)
2025-03-29 21:23:07,631 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth1)
2025-03-29 21:23:07,664 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth1)
2025-03-29 21:23:08,029 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth0)
2025-03-29 21:23:08,057 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth0)
2025-03-29 21:23:08,065 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ******************************************************
2025-03-29 21:23:09,384 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:09,395 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:10,503 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:10,550 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:11,773 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:11,826 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:12,867 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:12,932 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:23:12,946 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] **********************************************************
2025-03-29 21:23:13,935 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:23:13,979 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:23:14,993 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:15,095 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:15,110 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:23:15,129 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:23:15,148 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:23:15,161 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:23:15,172 p=23334 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] ***************************************************************
2025-03-29 21:23:15,315 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,326 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,330 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,339 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:15,356 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,372 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:15,460 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,476 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,484 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:15,494 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,504 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:23:15,506 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:15,535 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create resolved link] *******************************************************************
2025-03-29 21:23:16,100 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:23:16,143 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:23:16,567 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:16,605 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:16,614 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] *************************************************************************
2025-03-29 21:23:17,164 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:17,183 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:17,641 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:17,670 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:18,224 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:18,256 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:18,673 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:18,701 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:18,714 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] ****************************************************************
2025-03-29 21:23:19,271 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:19,326 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:19,728 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:19,776 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:20,269 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:20,325 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:20,711 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:20,772 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:23:20,787 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] **************************************************************
2025-03-29 21:23:21,295 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:23:21,344 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:23:21,847 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:23:21,893 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:23:21,907 p=23334 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *********************************************************************
2025-03-29 21:23:23,205 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:23:23,239 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:23:24,500 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:23:24,530 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:23:25,751 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:23:25,809 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:23:26,908 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:23:26,944 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:23:26,956 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *******************************************************************
2025-03-29 21:23:27,828 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:23:27,880 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:23:28,750 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:23:28,813 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:23:28,829 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ******************************************************************
2025-03-29 21:23:30,146 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:23:30,220 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:23:31,431 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:23:31,516 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:23:31,527 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *********************************************************************
2025-03-29 21:23:31,624 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:31,680 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:31,727 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:31,765 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:31,775 p=23334 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ********************************************************************
2025-03-29 21:23:31,852 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:31,911 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:31,930 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:31,987 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:31,998 p=23334 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ***************************************************************
2025-03-29 21:23:32,952 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:33,000 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:33,873 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:33,936 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:33,947 p=23334 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] ****************************************************************
2025-03-29 21:23:34,198 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "sysctl-container"})
2025-03-29 21:23:34,208 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:23:34,272 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load service sysctl-container] ***************************************************************
2025-03-29 21:23:35,370 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"})
2025-03-29 21:23:35,412 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"})
2025-03-29 21:23:36,408 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"})
2025-03-29 21:23:36,490 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"})
2025-03-29 21:23:36,511 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load timer sysctl-container] *****************************************************************
2025-03-29 21:23:36,568 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:23:36,585 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:36,607 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:23:36,617 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:36,651 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:23:36,655 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:36,678 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:23:36,680 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:36,698 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load service systemd-hostnamed] **************************************************************
2025-03-29 21:23:37,674 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:23:37,751 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:23:38,635 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:23:38,709 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:23:38,733 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load timer systemd-hostnamed] ****************************************************************
2025-03-29 21:23:38,790 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:23:38,804 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:38,830 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:23:38,843 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:38,875 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:23:38,878 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:38,906 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:23:38,907 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:38,919 p=23334 u=vagrant n=ansible | TASK [systemd_service : Load socket] *********************************************************************************
2025-03-29 21:23:39,012 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:39,076 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:39,111 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:39,158 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:39,187 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Add global_environment_variables to environment file] ***********************************
2025-03-29 21:23:39,642 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:23:39,687 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:23:40,165 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:40,200 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:40,211 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create localhost config] ****************************************************************
2025-03-29 21:23:40,638 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:23:40,691 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:23:41,099 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:41,185 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:41,203 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Set hostnamectl name] *******************************************************************
2025-03-29 21:23:41,669 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:41,720 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:42,127 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:42,175 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:42,185 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Generate machine-id] ********************************************************************
2025-03-29 21:23:42,622 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:42,658 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:43,061 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:43,109 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:43,118 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Ensure the dbus directory exists] *******************************************************
2025-03-29 21:23:43,559 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:43,624 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:43,988 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:44,035 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:44,046 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Create dbus machine-id] *****************************************************************
2025-03-29 21:23:44,712 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:23:44,757 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:23:45,361 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:45,391 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:45,402 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Retrieve the machine-id] ****************************************************************
2025-03-29 21:23:45,828 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:45,869 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:46,256 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:46,343 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:46,353 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Set bind mount for journal linking] *****************************************************
2025-03-29 21:23:46,410 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:46,446 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:46,462 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:46,501 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:46,513 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Ensure journal directory exists] ********************************************************
2025-03-29 21:23:46,962 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:23:46,988 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:23:47,378 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=controller-galera-container-f800b10b)
2025-03-29 21:23:47,422 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=controller-memcached-container-71b4149f)
2025-03-29 21:23:47,862 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:23:47,927 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:23:48,295 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=controller-utility-container-7e5b64c5)
2025-03-29 21:23:48,366 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:23:48,378 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] **********************************************
2025-03-29 21:23:48,851 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:23:49,059 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:23:49,401 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:23:49,491 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:23:49,499 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *********************************************************
2025-03-29 21:23:49,932 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:49,997 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:50,406 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:50,449 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:50,459 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Record the container variant deployed] **************************************************
2025-03-29 21:23:51,184 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:23:51,213 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:23:51,624 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:51,654 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:51,663 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:23:51,675 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:23:51,686 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:23:51,697 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:23:51,710 p=23334 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Enable resolved] *************************************************************
2025-03-29 21:23:52,765 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:52,908 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:53,928 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:53,952 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:53,962 p=23334 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Enable dbus] *****************************************************************
2025-03-29 21:23:55,229 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:55,248 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:56,225 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:56,235 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:56,246 p=23334 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed services] *********************************************************
2025-03-29 21:23:56,315 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container.service"}) 
2025-03-29 21:23:56,327 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:23:56,358 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container.service"}) 
2025-03-29 21:23:56,369 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:23:56,411 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container.service"}) 
2025-03-29 21:23:56,415 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:56,445 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container.service"}) 
2025-03-29 21:23:56,447 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:56,458 p=23334 u=vagrant n=ansible | TASK [lxc_container_create : (RE)Gather facts post setup] ************************************************************
2025-03-29 21:23:57,818 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:23:57,872 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:23:58,949 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:23:59,016 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:23:59,105 p=23334 u=vagrant n=ansible | TASK [Wait for container connectivity] *******************************************************************************
2025-03-29 21:24:03,854 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:03,874 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:07,592 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:07,609 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:07,623 p=23334 u=vagrant n=ansible | TASK [Clear facts for new container(s)] ******************************************************************************
2025-03-29 21:24:07,661 p=23334 u=vagrant n=ansible | PLAY [Gather lxc containers facts] ***********************************************************************************
2025-03-29 21:24:07,670 p=23334 u=vagrant n=ansible | TASK [Gathering Facts] ***********************************************************************************************
2025-03-29 21:24:08,960 p=23334 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-memcached-container-71b4149f is using the discovered Python interpreter
at /usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:24:08,960 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:08,999 p=23334 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-galera-container-f800b10b is using the discovered Python interpreter at
/usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:24:09,000 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:09,841 p=23334 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-utility-container-7e5b64c5 is using the discovered Python interpreter at
/usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:24:09,841 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:09,897 p=23334 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-rabbit-mq-container-6f8ad97c is using the discovered Python interpreter
at /usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:24:09,898 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:10,028 p=23334 u=vagrant n=ansible | PLAY [Configure containers default software] *************************************************************************
2025-03-29 21:24:10,053 p=23334 u=vagrant n=ansible | TASK [Check for a supported Operating System] ************************************************************************
2025-03-29 21:24:10,118 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:10,142 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:10,168 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:10,192 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:10,199 p=23334 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:24:10,299 p=23334 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:24:10,353 p=23334 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 21:24:11,436 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:11,472 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:12,670 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:12,752 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:12,760 p=23334 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 21:24:12,806 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:24:12,830 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:24:12,837 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:12,862 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:12,896 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] **************************************************
2025-03-29 21:24:13,001 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:13,038 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:13,080 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:13,112 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:13,121 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] **************************************************************
2025-03-29 21:24:13,704 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:13,730 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:14,201 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:14,243 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:14,254 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] *****************************************************************
2025-03-29 21:24:15,541 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:24:15,621 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:24:16,880 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:16,987 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:16,997 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ********************************************************
2025-03-29 21:24:17,051 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:24:17,085 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:24:17,087 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:17,105 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:17,115 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ****************************************
2025-03-29 21:24:17,663 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:24:17,713 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:24:18,219 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:18,265 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:18,274 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] **************************************************
2025-03-29 21:24:18,320 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:24:18,346 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:24:18,353 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:18,389 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:18,397 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] *************************************************************
2025-03-29 21:24:18,931 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:24:18,963 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:24:19,376 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:19,431 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:19,441 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] ***********************************************************
2025-03-29 21:24:20,220 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:24:20,274 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:24:20,960 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:21,020 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:21,029 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *******************************************************************
2025-03-29 21:24:21,206 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:24:21,248 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] *****************************************************************
2025-03-29 21:24:21,432 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:21,443 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] ***************************************************************************
2025-03-29 21:24:21,910 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:24:21,955 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:24:22,403 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:22,459 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:22,471 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] ************************************************************
2025-03-29 21:24:22,872 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> localhost]
2025-03-29 21:24:22,882 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] *************************************************************
2025-03-29 21:24:33,283 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:33,318 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:41,937 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:42,298 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:42,307 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] **************************************
2025-03-29 21:24:42,438 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:24:42,482 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *******************************************************
2025-03-29 21:24:42,953 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:24:42,998 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:24:43,558 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:24:43,604 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:24:43,610 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *******************************************************
2025-03-29 21:24:43,726 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:43,760 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:43,843 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:43,872 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:24:43,882 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] **************************************
2025-03-29 21:24:44,412 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=uca.list)
2025-03-29 21:24:44,478 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=uca.list)
2025-03-29 21:24:44,852 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=osbpo.list)
2025-03-29 21:24:44,909 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=osbpo.list)
2025-03-29 21:24:45,333 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=uca.list)
2025-03-29 21:24:45,419 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=uca.list)
2025-03-29 21:24:45,866 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=osbpo.list)
2025-03-29 21:24:45,944 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=osbpo.list)
2025-03-29 21:24:45,955 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] *******************************
2025-03-29 21:24:53,059 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:24:53,111 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:25:00,492 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:00,615 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:00,623 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *********************************************************************
2025-03-29 21:25:01,370 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:25:01,418 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:25:02,532 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:25:02,546 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:25:02,559 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] **************************************************************************
2025-03-29 21:25:03,715 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:25:03,752 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:25:04,846 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:04,875 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:04,886 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] ****************************************************************************
2025-03-29 21:25:04,941 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:04,974 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:04,994 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:05,013 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:05,024 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *******************************************************
2025-03-29 21:25:05,077 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:05,113 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:05,135 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:05,160 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:05,169 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] **************************************************************
2025-03-29 21:25:05,643 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:25:05,681 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:25:06,123 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:06,152 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:06,159 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *********************************************************************
2025-03-29 21:25:11,071 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:25:11,515 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:25:15,992 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:17,035 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:17,043 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] **************************************************
2025-03-29 21:25:17,096 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:17,125 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:17,134 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:17,159 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:17,171 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] ************************************************************************
2025-03-29 21:25:17,772 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:25:17,809 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:25:18,273 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:18,327 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:18,337 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] *****************************************************************************
2025-03-29 21:25:18,402 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:18,439 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:18,458 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:18,490 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:18,501 p=23334 u=vagrant n=ansible | TASK [Including PKI role] ********************************************************************************************
2025-03-29 21:25:18,676 p=23334 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:25:18,738 p=23334 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 21:25:18,802 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:25:18,836 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:25:18,848 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:18,879 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:18,889 p=23334 u=vagrant n=ansible | TASK [pki : Install certificate authorities] *************************************************************************
2025-03-29 21:25:19,147 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:25:19,161 p=23334 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] ************************************************
2025-03-29 21:25:19,555 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 21:25:19,565 p=23334 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *********************************************************************
2025-03-29 21:25:20,801 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:25:20,833 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:25:22,041 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:25:22,074 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:25:22,090 p=23334 u=vagrant n=ansible | TASK [pki : Update CA store] *****************************************************************************************
2025-03-29 21:25:24,513 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:25:24,538 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:25:26,685 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:26,768 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:26,793 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *********************************************************
2025-03-29 21:25:26,905 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:25:26,978 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] *****************************************************************************
2025-03-29 21:25:27,545 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:25:27,581 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:25:27,986 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:28,018 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:28,027 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ******************************************************
2025-03-29 21:25:28,521 p=23334 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:25:28,553 p=23334 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:25:28,962 p=23334 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:29,004 p=23334 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:29,012 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] **************************************************************
2025-03-29 21:25:29,070 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:29,100 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:29,131 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:29,162 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:29,171 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] **************************************************
2025-03-29 21:25:29,220 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:29,255 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:29,256 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:29,286 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:29,298 p=23334 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] *****************************************************
2025-03-29 21:25:29,340 p=23334 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:25:29,364 p=23334 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:25:29,369 p=23334 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:29,391 p=23334 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:29,462 p=23334 u=vagrant n=ansible | RUNNING HANDLER [openstack_hosts : Systemd daemon reload] ************************************************************
2025-03-29 21:25:30,381 p=23334 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:25:30,412 p=23334 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:25:31,242 p=23334 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:25:31,303 p=23334 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:25:31,367 p=23334 u=vagrant n=ansible | PLAY [Gather security hardening facts] *******************************************************************************
2025-03-29 21:25:31,424 p=23334 u=vagrant n=ansible | TASK [Gather additional facts] ***************************************************************************************
2025-03-29 21:25:31,487 p=23334 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller
2025-03-29 21:25:31,506 p=23334 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] ****************************************************
2025-03-29 21:25:33,716 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:33,805 p=23334 u=vagrant n=ansible | PLAY [Apply security hardening configurations] ***********************************************************************
2025-03-29 21:25:33,859 p=23334 u=vagrant n=ansible | TASK [Include security hardening role] *******************************************************************************
2025-03-29 21:25:34,558 p=23334 u=vagrant n=ansible | included: ansible-hardening for controller
2025-03-29 21:25:34,570 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Gather variables for each operating system] ************************************************
2025-03-29 21:25:34,661 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:34,678 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for check/audit mode] ****************************************************************
2025-03-29 21:25:35,054 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:35,077 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if we are booting with EFI or UEFI] *******************************************
2025-03-29 21:25:35,139 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:35,159 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set facts] *********************************************************************************
2025-03-29 21:25:35,230 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:35,250 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if grub is present on the remote node] ***********************************************
2025-03-29 21:25:35,666 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:35,690 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Create temporary directory to hold any temporary files] ************************************
2025-03-29 21:25:36,270 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:25:36,320 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set a fact for the temporary directory] ****************************************************
2025-03-29 21:25:36,388 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:36,411 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Verify all installed RPM packages] *********************************************************
2025-03-29 21:25:36,453 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:25:36,481 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Locate top level directories to check for .shosts] *****************************************
2025-03-29 21:25:36,517 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:25:36,543 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for .shosts or shosts.equiv files] ***************************************************
2025-03-29 21:25:36,576 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:25:36,596 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all users on the system] *************************************************
2025-03-29 21:25:37,273 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:37,303 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all interactive users on the system] *************************************
2025-03-29 21:25:37,718 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:25:37,737 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Install EPEL repository] *******************************************************************
2025-03-29 21:25:37,773 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:25:37,791 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Add packages based on STIG requirements] ***************************************************
2025-03-29 21:27:04,315 p=23334 u=vagrant n=ansible | changed: [controller] => (item=present)
2025-03-29 21:27:04,347 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove packages based on STIG requirements] ************************************************
2025-03-29 21:27:06,049 p=23334 u=vagrant n=ansible | ok: [controller] => (item=absent)
2025-03-29 21:27:06,105 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Including OS-specific tasks] ***************************************************************
2025-03-29 21:27:06,204 p=23334 u=vagrant n=ansible | included: /etc/ansible/roles/ansible-hardening/tasks/rhel7stig/apt.yml for controller
2025-03-29 21:27:06,386 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure debsums is installed] ***************************************************************
2025-03-29 21:27:06,416 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:06,443 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Gather debsums report] *********************************************************************
2025-03-29 21:27:06,471 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:06,493 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Get files with invalid checksums (apt)] ******************************************
2025-03-29 21:27:06,527 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:06,554 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Create comma-separated list] *****************************************************
2025-03-29 21:27:06,583 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:06,609 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - The cryptographic hash of system files and commands must match vendor values (apt)] ***
2025-03-29 21:27:06,641 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:06,753 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Search for AllowUnauthenticated in /etc/apt/apt.conf.d/] ***********************************
2025-03-29 21:27:07,198 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:07,220 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71977 - Package management tool must verify authenticity of packages] ********************
2025-03-29 21:27:07,252 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:07,274 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71979 - Package management tool must verify authenticity of locally-installed packages] ***
2025-03-29 21:27:07,680 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:07,706 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71987 - Clean requirements/dependencies when removing packages (dpkg)] *******************
2025-03-29 21:27:07,736 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:07,758 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Enable automatic package updates (apt)] ****************************************************
2025-03-29 21:27:07,800 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:07,821 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/security/pwquality.conf exists] **********************************************
2025-03-29 21:27:08,249 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:08,274 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set password quality requirements] *********************************************************
2025-03-29 21:27:08,824 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:08,849 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for SHA512 password storage in PAM] **************************************************
2025-03-29 21:27:09,275 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:09,296 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Print warning if PAM is not using SHA512 for password storage] *****************************
2025-03-29 21:27:09,357 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "PAM is not using SHA512 for password storage. This is a security issue.\n"
}
2025-03-29 21:27:09,383 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure libuser is storing passwords using SHA512] ******************************************
2025-03-29 21:27:09,427 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:09,450 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set minimum password lifetime limit to 24 hours for interactive accounts] ******************
2025-03-29 21:27:09,517 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,536 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,553 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,568 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,571 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:09,592 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set maximum password lifetime limit to 60 days for interactive accounts] *******************
2025-03-29 21:27:09,656 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,669 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,687 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,703 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:09,707 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:09,735 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure that users cannot reuse one of their last 5 passwords] ******************************
2025-03-29 21:27:09,784 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:09,804 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure accounts are disabled if the password expires] **************************************
2025-03-29 21:27:09,833 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:09,855 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Apply shadow-utils configurations] *********************************************************
2025-03-29 21:27:10,317 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'ENCRYPT_METHOD', 'value': 'SHA512', 'stig_id': 'V-71921', 'os_family': 'all'})
2025-03-29 21:27:10,321 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MIN_DAYS', 'value': '', 'stig_id': 'V-71925', 'os_family': 'all'}) 
2025-03-29 21:27:10,331 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MAX_DAYS', 'value': '', 'stig_id': 'V-71929', 'os_family': 'all'}) 
2025-03-29 21:27:10,350 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'FAIL_DELAY', 'value': '4', 'stig_id': 'V-71951', 'os_family': 'RedHat'}) 
2025-03-29 21:27:10,360 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'UMASK', 'value': '', 'stig_id': 'V-71995', 'os_family': 'all'}) 
2025-03-29 21:27:10,750 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'parameter': 'CREATE_HOME', 'value': 'yes', 'stig_id': 'V-72013', 'os_family': 'all'})
2025-03-29 21:27:10,777 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for groups in /etc/passwd that are not in /etc/group] ************************
2025-03-29 21:27:10,834 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:10,854 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Get all accounts with UID 0] ***************************************************************
2025-03-29 21:27:11,275 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:11,295 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Print warnings for non-root users with UID 0] **********************************************
2025-03-29 21:27:11,325 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:11,344 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for local interactive users without a home directory assigned] ***************
2025-03-29 21:27:11,426 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:11,450 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check each user to see if its home directory exists on the filesystem] *********************
2025-03-29 21:27:11,922 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'root', 'uid': 0, 'gid': 0, 'gecos': 'root', 'dir': '/root', 'shell': '/bin/bash', 'group': {'name': 'root', 'passwd': 'x', 'gid': 0}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:12,316 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'daemon', 'uid': 1, 'gid': 1, 'gecos': 'daemon', 'dir': '/usr/sbin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:12,728 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'bin', 'uid': 2, 'gid': 2, 'gecos': 'bin', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'bin', 'passwd': 'x', 'gid': 2}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:13,128 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sys', 'uid': 3, 'gid': 3, 'gecos': 'sys', 'dir': '/dev', 'shell': '/usr/sbin/nologin', 'group': {'name': 'sys', 'passwd': 'x', 'gid': 3}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:13,491 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sync', 'uid': 4, 'gid': 65534, 'gecos': 'sync', 'dir': '/bin', 'shell': '/bin/sync', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:13,859 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'games', 'uid': 5, 'gid': 60, 'gecos': 'games', 'dir': '/usr/games', 'shell': '/usr/sbin/nologin', 'group': {'name': 'games', 'passwd': 'x', 'gid': 60}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:14,275 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'man', 'uid': 6, 'gid': 12, 'gecos': 'man', 'dir': '/var/cache/man', 'shell': '/usr/sbin/nologin', 'group': {'name': 'man', 'passwd': 'x', 'gid': 12}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:14,645 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lp', 'uid': 7, 'gid': 7, 'gecos': 'lp', 'dir': '/var/spool/lpd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'lp', 'passwd': 'x', 'gid': 7}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:15,020 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'mail', 'uid': 8, 'gid': 8, 'gecos': 'mail', 'dir': '/var/mail', 'shell': '/usr/sbin/nologin', 'group': {'name': 'mail', 'passwd': 'x', 'gid': 8}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:15,442 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'news', 'uid': 9, 'gid': 9, 'gecos': 'news', 'dir': '/var/spool/news', 'shell': '/usr/sbin/nologin', 'group': {'name': 'news', 'passwd': 'x', 'gid': 9}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:15,817 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uucp', 'uid': 10, 'gid': 10, 'gecos': 'uucp', 'dir': '/var/spool/uucp', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uucp', 'passwd': 'x', 'gid': 10}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:16,197 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'proxy', 'uid': 13, 'gid': 13, 'gecos': 'proxy', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'proxy', 'passwd': 'x', 'gid': 13}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:16,544 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'www-data', 'uid': 33, 'gid': 33, 'gecos': 'www-data', 'dir': '/var/www', 'shell': '/usr/sbin/nologin', 'group': {'name': 'www-data', 'passwd': 'x', 'gid': 33}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:16,950 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'backup', 'uid': 34, 'gid': 34, 'gecos': 'backup', 'dir': '/var/backups', 'shell': '/usr/sbin/nologin', 'group': {'name': 'backup', 'passwd': 'x', 'gid': 34}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:17,450 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'list', 'uid': 38, 'gid': 38, 'gecos': 'Mailing List Manager', 'dir': '/var/list', 'shell': '/usr/sbin/nologin', 'group': {'name': 'list', 'passwd': 'x', 'gid': 38}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:17,850 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'irc', 'uid': 39, 'gid': 39, 'gecos': 'ircd', 'dir': '/run/ircd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'irc', 'passwd': 'x', 'gid': 39}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:18,407 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'gnats', 'uid': 41, 'gid': 41, 'gecos': 'Gnats Bug-Reporting System (admin)', 'dir': '/var/lib/gnats', 'shell': '/usr/sbin/nologin', 'group': {'name': 'gnats', 'passwd': 'x', 'gid': 41}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:18,871 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:19,321 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-network', 'uid': 100, 'gid': 102, 'gecos': 'systemd Network Management,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-network', 'passwd': 'x', 'gid': 102}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:19,728 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-resolve', 'uid': 101, 'gid': 103, 'gecos': 'systemd Resolver,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-resolve', 'passwd': 'x', 'gid': 103}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:20,101 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'messagebus', 'uid': 102, 'gid': 105, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'messagebus', 'passwd': 'x', 'gid': 105}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:20,498 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-timesync', 'uid': 103, 'gid': 106, 'gecos': 'systemd Time Synchronization,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-timesync', 'passwd': 'x', 'gid': 106}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:20,873 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'syslog', 'uid': 104, 'gid': 111, 'gecos': '', 'dir': '/home/syslog', 'shell': '/usr/sbin/nologin', 'group': {'name': 'syslog', 'passwd': 'x', 'gid': 111}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:21,236 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': '_apt', 'uid': 105, 'gid': 65534, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:21,654 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tss', 'uid': 106, 'gid': 112, 'gecos': 'TPM software stack,,,', 'dir': '/var/lib/tpm', 'shell': '/bin/false', 'group': {'name': 'tss', 'passwd': 'x', 'gid': 112}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:22,044 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uuidd', 'uid': 107, 'gid': 113, 'gecos': '', 'dir': '/run/uuidd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uuidd', 'passwd': 'x', 'gid': 113}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:22,394 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tcpdump', 'uid': 108, 'gid': 114, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'tcpdump', 'passwd': 'x', 'gid': 114}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:22,766 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sshd', 'uid': 109, 'gid': 65534, 'gecos': '', 'dir': '/run/sshd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:23,126 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'pollinate', 'uid': 110, 'gid': 1, 'gecos': '', 'dir': '/var/cache/pollinate', 'shell': '/bin/false', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:23,493 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'landscape', 'uid': 111, 'gid': 116, 'gecos': '', 'dir': '/var/lib/landscape', 'shell': '/usr/sbin/nologin', 'group': {'name': 'landscape', 'passwd': 'x', 'gid': 116}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:24,006 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'fwupd-refresh', 'uid': 112, 'gid': 117, 'gecos': 'fwupd-refresh user,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'fwupd-refresh', 'passwd': 'x', 'gid': 117}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:24,475 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:24,840 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:25,197 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:25,569 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dnsmasq', 'uid': 113, 'gid': 65534, 'gecos': 'dnsmasq,,,', 'dir': '/var/lib/misc', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:25,939 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxc-dnsmasq', 'uid': 114, 'gid': 121, 'gecos': 'LXC dnsmasq', 'dir': '/var/lib/lxc', 'shell': '/bin/false', 'group': {'name': 'lxc-dnsmasq', 'passwd': 'x', 'gid': 121}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:27:25,997 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for users with an assigned home directory that does not exist] ***************
2025-03-29 21:27:26,087 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "These users have a home directory assigned, but the directory does not exist:\nlp (/var/spool/lpd does not exist)\nnews (/var/spool/news does not exist)\nuucp (/var/spool/uucp does not exist)\nwww-data (/var/www does not exist)\nlist (/var/list does not exist)\nirc (/run/ircd does not exist)\ngnats (/var/lib/gnats does not exist)\nnobody (/nonexistent does not exist)\nmessagebus (/nonexistent does not exist)\nsyslog (/home/syslog does not exist)\n_apt (/nonexistent does not exist)\ntcpdump (/nonexistent does not exist)\n"
}
2025-03-29 21:27:26,104 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Use pwquality when passwords are changed or created] ***************************************
2025-03-29 21:27:26,142 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:26,180 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Verify that AIDE configuration directory exists] *******************************************
2025-03-29 21:27:26,593 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide/aide.conf.d)
2025-03-29 21:27:26,965 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide.conf)
2025-03-29 21:27:26,987 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Exclude certain directories from AIDE] *****************************************************
2025-03-29 21:27:27,906 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:27,933 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (Ubuntu)] ***********************************
2025-03-29 21:27:28,327 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:28,349 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (SUSE)] *************************************
2025-03-29 21:27:28,386 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:28,420 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if AIDE database is already in place] *****************************************
2025-03-29 21:27:28,807 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:28,827 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Initialize AIDE (this will take a few minutes)] ********************************************
2025-03-29 21:27:28,865 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:28,886 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Move AIDE database into place] *************************************************************
2025-03-29 21:27:28,936 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:28,962 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Create AIDE cron job] **********************************************************************
2025-03-29 21:27:28,998 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:29,019 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Verify that auditd.conf exists] ************************************************************
2025-03-29 21:27:29,407 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:29,427 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Verify that audisp-remote.conf exists] *****************************************************
2025-03-29 21:27:29,820 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:29,918 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72083 - The operating system must off-load audit records onto a different system or media from the system being audited] ***
2025-03-29 21:27:29,964 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:29,983 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72085 - The operating system must encrypt the transfer of audit records off-loaded onto a different system or media from the system being audited] ***
2025-03-29 21:27:30,029 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:30,050 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Get valid system architectures for audit rules] ********************************************
2025-03-29 21:27:30,113 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:30,137 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove system default audit.rules file] ****************************************************
2025-03-29 21:27:30,544 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:30,572 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove old RHEL 6 audit rules file] ********************************************************
2025-03-29 21:27:30,965 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:30,985 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Deploy rules for auditd based on STIG requirements] ****************************************
2025-03-29 21:27:32,029 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:32,051 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Adjust auditd/audispd configurations] ******************************************************
2025-03-29 21:27:32,131 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'disk_full_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-29 21:27:32,140 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'network_failure_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-29 21:27:32,150 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left', 'value': '9907', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 21:27:32,158 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left_action', 'value': 'email', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 21:27:32,168 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'action_mail_acct', 'value': 'root', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 21:27:32,170 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:32,190 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure auditd is running and enabled at boot time] *****************************************
2025-03-29 21:27:32,856 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:32,880 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set pam_faildelay configuration on Ubuntu] *************************************************
2025-03-29 21:27:33,284 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:33,312 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Debian/Ubuntu)] ************
2025-03-29 21:27:33,692 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:33,717 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Red Hat)] ******************
2025-03-29 21:27:33,764 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-auth']) 
2025-03-29 21:27:33,775 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-password']) 
2025-03-29 21:27:33,789 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-auth']) 
2025-03-29 21:27:33,807 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-password']) 
2025-03-29 21:27:33,810 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:33,832 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (SUSE)] *********************
2025-03-29 21:27:33,877 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-auth) 
2025-03-29 21:27:33,886 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-password) 
2025-03-29 21:27:33,888 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:33,913 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Lock accounts after three failed login attempts a 15 minute period] ************************
2025-03-29 21:27:33,947 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:33,976 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for 'nopasswd' in sudoers files] *****************************************************
2025-03-29 21:27:34,377 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:34,397 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71947 - Users must provide a password for privilege escalation.] *************************
2025-03-29 21:27:34,461 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The 'NOPASSWD' directive was found in the sudoers configuration files. Remove the directive to ensure that all users must provide a password to run commands as the root user.\n"
}
2025-03-29 21:27:34,494 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for '!authenticate' in sudoers files] ************************************************
2025-03-29 21:27:34,880 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:34,909 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71949 - Users must re-authenticate for privilege escalation.] ****************************
2025-03-29 21:27:34,953 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:34,971 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if sssd.conf exists] *****************************************************************
2025-03-29 21:27:35,364 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:35,391 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if GRUB2 custom file exists] *********************************************************
2025-03-29 21:27:35,783 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:35,806 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Define password options for grub] **********************************************************
2025-03-29 21:27:35,847 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:35,869 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set CLASS for grub file] *******************************************************************
2025-03-29 21:27:35,906 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:35,930 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72217 - The operating system must limit the number of concurrent sessions to 10 for all accounts and/or account types.] ***
2025-03-29 21:27:35,972 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:35,993 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for pam_lastlog in PAM configuration] ************************************************
2025-03-29 21:27:36,412 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:36,430 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72275 - Display date/time of last logon after logon] *************************************
2025-03-29 21:27:36,461 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,484 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure .shosts find has finished] **********************************************************
2025-03-29 21:27:36,528 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,550 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove .shosts or shosts.equiv files] ******************************************************
2025-03-29 21:27:36,594 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,616 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Get packages with incorrect file permissions or ownership] ***********************
2025-03-29 21:27:36,664 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,689 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Reset file permissions/ownership to vendor values] *******************************
2025-03-29 21:27:36,735 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,757 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid owner] ****************************************
2025-03-29 21:27:36,792 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,826 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72007 - All files and directories must have a valid owner.] ******************************
2025-03-29 21:27:36,875 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,898 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid group owner] **********************************
2025-03-29 21:27:36,927 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:36,945 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72009 - All files and directories must have a valid group owner.] ************************
2025-03-29 21:27:36,997 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:37,016 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set proper owner, group owner, and permissions on home directories] ************************
2025-03-29 21:27:37,083 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:37,094 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:37,105 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:27:37,108 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:37,132 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Find all world-writable directories] *******************************************************
2025-03-29 21:27:37,161 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:37,260 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72047 - All world-writable directories must be group-owned by root, sys, bin, or an application group.] ***
2025-03-29 21:27:37,303 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:37,323 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/cron.allow exists] ***********************************************************
2025-03-29 21:27:37,724 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:37,744 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set owner/group owner on /etc/cron.allow] **************************************************
2025-03-29 21:27:37,795 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:37,828 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if gdm is installed and configured] **************************************************
2025-03-29 21:27:38,213 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:38,233 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71953 - The operating system must not allow an unattended or automatic logon to the system via a graphical user interface] ***
2025-03-29 21:27:38,262 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:38,281 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71955 - The operating system must not allow guest logon to the system.] ******************
2025-03-29 21:27:38,308 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:38,332 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for dconf profiles] ******************************************************************
2025-03-29 21:27:38,709 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:38,730 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Create a user profile in dconf] ************************************************************
2025-03-29 21:27:38,758 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:38,779 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Create dconf directories] ******************************************************************
2025-03-29 21:27:38,817 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/) 
2025-03-29 21:27:38,822 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/locks) 
2025-03-29 21:27:38,832 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/) 
2025-03-29 21:27:38,834 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:38,858 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Configure graphical session locking] *******************************************************
2025-03-29 21:27:38,888 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:38,908 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users from changing graphical session locking configurations] **********************
2025-03-29 21:27:38,935 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:38,955 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM profile for displaying a login banner] ****************************************
2025-03-29 21:27:38,984 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:39,007 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM keyfile for machine-wide settings] ********************************************
2025-03-29 21:27:39,044 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/01-banner-message) 
2025-03-29 21:27:39,047 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/01-banner-message) 
2025-03-29 21:27:39,049 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:39,078 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71983 - USB mass storage must be disabled.] **********************************************
2025-03-29 21:27:39,495 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:39,516 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set sysctl configurations] *****************************************************************
2025-03-29 21:27:39,960 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv4.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 21:27:40,326 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv4.conf.default.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 21:27:40,703 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv4.icmp_echo_ignore_broadcasts', 'value': 1, 'enabled': True})
2025-03-29 21:27:41,084 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv4.conf.all.send_redirects', 'value': 0, 'enabled': True})
2025-03-29 21:27:41,442 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv4.conf.default.send_redirects', 'value': 0, 'enabled': True})
2025-03-29 21:27:41,452 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv4.ip_forward', 'value': 0, 'enabled': False}) 
2025-03-29 21:27:41,842 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv6.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 21:27:42,215 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'net.ipv4.conf.default.accept_redirects', 'value': 0, 'enabled': True})
2025-03-29 21:27:42,579 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'kernel.randomize_va_space', 'value': 2, 'enabled': True})
2025-03-29 21:27:42,589 p=23334 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv6.conf.all.disable_ipv6', 'value': 1, 'enabled': False}) 
2025-03-29 21:27:42,616 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check kdump service] ***********************************************************************
2025-03-29 21:27:42,984 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:43,007 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72057 - Kernel core dumps must be disabled unless needed.] *******************************
2025-03-29 21:27:43,037 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:43,065 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if FIPS is enabled] ******************************************************************
2025-03-29 21:27:43,098 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:43,122 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Print a warning if FIPS isn't enabled] *****************************************************
2025-03-29 21:27:43,155 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:43,173 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled] ******
2025-03-29 21:27:44,043 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:44,071 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check apparmor_status output] **************************************************************
2025-03-29 21:27:44,498 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:44,523 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if apparmor is running] **************************************************************
2025-03-29 21:27:44,953 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:44,972 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is enabled at boot time] ***************************************************
2025-03-29 21:27:45,712 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:45,729 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is running] ****************************************************************
2025-03-29 21:27:46,439 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:46,460 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure SELinux is in enforcing mode on the next reboot] ************************************
2025-03-29 21:27:46,495 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:46,515 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Relabel files on next boot if SELinux mode changed] ****************************************
2025-03-29 21:27:46,556 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:46,579 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for unlabeled device files] **********************************************************
2025-03-29 21:27:46,613 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:46,638 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72039 - All system device files must be correctly labeled to prevent unauthorized modification.] ***
2025-03-29 21:27:46,673 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:46,695 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check autofs service] **********************************************************************
2025-03-29 21:27:47,094 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:47,119 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71985 - File system automounter must be disabled unless required.] ***********************
2025-03-29 21:27:47,156 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:47,183 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***************************
2025-03-29 21:27:47,870 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:47,889 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***************************
2025-03-29 21:27:49,364 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:49,381 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for /home on mounted filesystem] *****************************************************
2025-03-29 21:27:49,451 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /home is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:27:49,475 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var on mounted filesystem] ******************************************************
2025-03-29 21:27:49,640 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:27:49,746 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var/log/audit on mounted filesystem] ********************************************
2025-03-29 21:27:49,813 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var/log/audit is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:27:49,832 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for /tmp on mounted filesystem] ******************************************************
2025-03-29 21:27:49,909 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /tmp is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:27:49,929 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if syslog output is being sent to another server] ************************************
2025-03-29 21:27:50,318 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:50,341 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72209 - The system must send rsyslog output to a log aggregation server.] ****************
2025-03-29 21:27:50,401 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Output from syslog must be sent to another server."
}
2025-03-29 21:27:50,423 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV is installed] **************************************************************
2025-03-29 21:27:50,800 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:50,818 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove 'Example' line from ClamAV configuration files] *************************************
2025-03-29 21:27:50,856 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/freshclam.conf) 
2025-03-29 21:27:50,860 p=23334 u=vagrant n=ansible | skipping: [controller] => (item=/etc/clamd.d/scan.conf) 
2025-03-29 21:27:50,861 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:50,884 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Set ClamAV server type as socket] **********************************************************
2025-03-29 21:27:50,918 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:50,937 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV socket directory exists] *****************************************************
2025-03-29 21:27:50,965 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:50,983 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Allow automatic freshclam updates] *********************************************************
2025-03-29 21:27:51,011 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:51,032 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV update process is already running] *****************************************
2025-03-29 21:27:51,401 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:51,421 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Update ClamAV database] ********************************************************************
2025-03-29 21:27:51,452 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:51,469 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV is running] ******************************************************************
2025-03-29 21:27:51,498 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:51,523 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove old config block for V-72223 from openstack-ansible-security] ***********************
2025-03-29 21:27:51,902 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:51,920 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72223 - Set 10 minute timeout on communication sessions] *********************************
2025-03-29 21:27:52,300 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:52,319 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Start and enable chrony] *******************************************************************
2025-03-29 21:27:53,020 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:53,038 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check if chrony configuration file exists] *************************************************
2025-03-29 21:27:53,466 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:53,486 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72269 - Synchronize system clock (configuration file)] ***********************************
2025-03-29 21:27:54,478 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:54,495 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check firewalld status] ********************************************************************
2025-03-29 21:27:54,909 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:54,931 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure firewalld is running and enabled] ***************************************************
2025-03-29 21:27:54,962 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:54,983 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Limit new TCP connections to 25/minute and allow bursting to 100] **************************
2025-03-29 21:27:55,020 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:55,041 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Count nameserver entries in /etc/resolv.conf] **********************************************
2025-03-29 21:27:55,433 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:55,461 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72281 - For systems using DNS resolution, at least two name servers must be configured.] ***
2025-03-29 21:27:55,525 p=23334 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Two or more nameservers must be configured in /etc/resolv.conf.\nNameservers found: 1\n"
}
2025-03-29 21:27:55,549 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for interfaces in promiscuous mode] **************************************************
2025-03-29 21:27:55,969 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:56,012 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72295 - Network interfaces must not be in promiscuous mode.] *****************************
2025-03-29 21:27:56,064 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:56,146 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for postfix configuration file] ******************************************************
2025-03-29 21:27:56,737 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:56,771 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72297 - Prevent unrestricted mail relaying] **********************************************
2025-03-29 21:27:57,225 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:57,244 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check for TFTP server configuration file] **************************************************
2025-03-29 21:27:57,652 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:57,682 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check TFTP configuration mode] *************************************************************
2025-03-29 21:27:57,713 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:57,734 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72305 - TFTP must be configured to operate in secure mode] *******************************
2025-03-29 21:27:57,763 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:57,786 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if snmpd config contains public/private] **************************************
2025-03-29 21:27:58,198 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:27:58,223 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : V-72313 - Change SNMP community strings from default.] *************************************
2025-03-29 21:27:58,250 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:27:58,274 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Copy login warning banner] *****************************************************************
2025-03-29 21:27:59,155 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:27:59,176 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Drop options from SSH config that we manage] ***********************************************
2025-03-29 21:27:59,623 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitEmptyPasswords', 'value': 'no', 'enabled': True, 'stig_id': 'V-71939 / RHEL-07-010440'})
2025-03-29 21:27:59,996 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitUserEnvironment', 'value': 'no', 'enabled': True, 'stig_id': 'V-71957'})
2025-03-29 21:28:00,347 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'HostbasedAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-71959'})
2025-03-29 21:28:00,756 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Ciphers', 'value': 'aes128-ctr,aes192-ctr,aes256-ctr', 'enabled': True, 'stig_id': 'V-72221'})
2025-03-29 21:28:01,156 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveInterval', 'value': 600, 'enabled': True, 'stig_id': 'V-72237'})
2025-03-29 21:28:01,633 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveCountMax', 'value': 0, 'enabled': True, 'stig_id': 'V-72241'})
2025-03-29 21:28:01,996 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintLastLog', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72245'})
2025-03-29 21:28:02,384 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitRootLogin', 'value': 'without-password', 'enabled': True, 'stig_id': 'V-72247'})
2025-03-29 21:28:02,764 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreUserKnownHosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72249 / V-72239'})
2025-03-29 21:28:03,129 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreRhosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72243'})
2025-03-29 21:28:03,477 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'X11Forwarding', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72303'})
2025-03-29 21:28:03,860 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Protocol', 'value': 2, 'enabled': True, 'stig_id': 'V-72251'})
2025-03-29 21:28:04,228 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'MACs', 'value': 'hmac-sha2-256,hmac-sha2-512', 'enabled': True, 'stig_id': 'V-72253'})
2025-03-29 21:28:04,593 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Compression', 'value': 'delayed', 'enabled': True, 'stig_id': 'V-72267'})
2025-03-29 21:28:04,960 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'KerberosAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-72261'})
2025-03-29 21:28:05,302 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'GSSAPIAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-204598'})
2025-03-29 21:28:05,670 p=23334 u=vagrant n=ansible | ok: [controller] => (item={'name': 'StrictModes', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72263'})
2025-03-29 21:28:06,323 p=23334 u=vagrant n=ansible | changed: [controller] => (item={'name': 'PrintMotd', 'value': 'yes', 'enabled': True, 'stig_id': 'V-71861'})
2025-03-29 21:28:06,444 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Adjust ssh server configuration based on STIG requirements] ********************************
2025-03-29 21:28:06,990 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:28:07,011 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Ensure sshd is enabled at boot time] *******************************************************
2025-03-29 21:28:07,736 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:28:07,759 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing public ssh host keys] ***************************************************
2025-03-29 21:28:08,169 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:28:08,189 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Public host key files must have mode 0644 or less] *****************************************
2025-03-29 21:28:08,609 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key.pub)
2025-03-29 21:28:08,994 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key.pub)
2025-03-29 21:28:09,371 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key.pub)
2025-03-29 21:28:09,393 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing private ssh host keys] **************************************************
2025-03-29 21:28:09,769 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:28:09,792 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Private host key files must have mode 0600 or less] ****************************************
2025-03-29 21:28:10,221 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key)
2025-03-29 21:28:10,584 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key)
2025-03-29 21:28:10,941 p=23334 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key)
2025-03-29 21:28:11,019 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Manage motd in pam.d] **********************************************************************
2025-03-29 21:28:11,605 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:28:11,622 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Remove the temporary directory] ************************************************************
2025-03-29 21:28:12,051 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:28:12,076 p=23334 u=vagrant n=ansible | TASK [ansible-hardening : Including contrib tasks] *******************************************************************
2025-03-29 21:28:12,108 p=23334 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:28:12,179 p=23334 u=vagrant n=ansible | RUNNING HANDLER [ansible-hardening : Restart chrony] *****************************************************************
2025-03-29 21:28:12,945 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:28:12,973 p=23334 u=vagrant n=ansible | RUNNING HANDLER [ansible-hardening : Restart ssh] ********************************************************************
2025-03-29 21:28:13,847 p=23334 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:28:13,885 p=23334 u=vagrant n=ansible | RUNNING HANDLER [ansible-hardening : Generate auditd rules] **********************************************************
2025-03-29 21:28:14,463 p=23334 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:28:14,515 p=23334 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 21:28:14,571 p=23334 u=vagrant n=ansible | PLAY RECAP ***********************************************************************************************************
2025-03-29 21:28:14,571 p=23334 u=vagrant n=ansible | controller                 : ok=176  changed=28   unreachable=0    failed=0    skipped=120  rescued=0    ignored=0   
2025-03-29 21:28:14,572 p=23334 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=102  changed=29   unreachable=0    failed=0    skipped=33   rescued=0    ignored=0   
2025-03-29 21:28:14,572 p=23334 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=99   changed=29   unreachable=0    failed=0    skipped=33   rescued=0    ignored=0   
2025-03-29 21:28:14,572 p=23334 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=99   changed=29   unreachable=0    failed=0    skipped=33   rescued=0    ignored=0   
2025-03-29 21:28:14,573 p=23334 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=99   changed=29   unreachable=0    failed=0    skipped=33   rescued=0    ignored=0   
2025-03-29 21:28:14,573 p=23334 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-29 21:37:04,523 p=27795 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 21:37:05,252 p=27795 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 21:37:05,705 p=27795 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 21:37:05,778 p=27795 u=vagrant n=ansible | PLAY [Create CA certificates] ****************************************************************************************
2025-03-29 21:37:05,804 p=27795 u=vagrant n=ansible | TASK [Create CA certificates] ****************************************************************************************
2025-03-29 21:37:05,858 p=27795 u=vagrant n=ansible | included: pki for localhost
2025-03-29 21:37:05,868 p=27795 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 21:37:05,900 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:05,908 p=27795 u=vagrant n=ansible | TASK [pki : Create PKI directories] **********************************************************************************
2025-03-29 21:37:06,529 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 21:37:06,871 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-29 21:37:07,191 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 21:37:07,524 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-29 21:37:07,858 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-29 21:37:08,216 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-29 21:37:08,593 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-29 21:37:08,608 p=27795 u=vagrant n=ansible | TASK [pki : Create certificate authorities] **************************************************************************
2025-03-29 21:37:08,751 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-29 21:37:08,779 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-29 21:37:08,792 p=27795 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ********************************************
2025-03-29 21:37:09,233 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-29 21:37:09,565 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-29 21:37:10,113 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-29 21:37:10,453 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-29 21:37:10,467 p=27795 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 21:37:10,882 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:10,901 p=27795 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ********************************************************
2025-03-29 21:37:11,515 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:11,526 p=27795 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] *************************************************************
2025-03-29 21:37:16,907 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:16,920 p=27795 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] **************************************************************
2025-03-29 21:37:17,507 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:17,516 p=27795 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *******************************************************************
2025-03-29 21:37:17,568 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,579 p=27795 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] *****************************************************
2025-03-29 21:37:17,620 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,629 p=27795 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] *****************************************************
2025-03-29 21:37:17,673 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,687 p=27795 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ********************************************************
2025-03-29 21:37:17,718 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,728 p=27795 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 21:37:17,771 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,780 p=27795 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] ****************************************************************
2025-03-29 21:37:17,825 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,836 p=27795 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] ***************************************************************
2025-03-29 21:37:17,877 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,886 p=27795 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 21:37:17,916 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,925 p=27795 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 21:37:17,973 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:17,983 p=27795 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ************************************
2025-03-29 21:37:18,395 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-29 21:37:18,740 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-29 21:37:19,114 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-29 21:37:19,465 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-29 21:37:19,476 p=27795 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] *****************************************************************
2025-03-29 21:37:19,891 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:19,903 p=27795 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] ************************************************
2025-03-29 21:37:20,346 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:20,358 p=27795 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] *****************************************************
2025-03-29 21:37:25,426 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:25,437 p=27795 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ******************************************************
2025-03-29 21:37:25,835 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:25,845 p=27795 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] ***********************************************************
2025-03-29 21:37:25,892 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:25,902 p=27795 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *********************************************
2025-03-29 21:37:25,943 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:25,952 p=27795 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *********************************************
2025-03-29 21:37:25,983 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:25,993 p=27795 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] ************************************************
2025-03-29 21:37:26,037 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:26,048 p=27795 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *********************************************
2025-03-29 21:37:26,091 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:26,101 p=27795 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ********************************************************
2025-03-29 21:37:26,142 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:26,152 p=27795 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *******************************************************
2025-03-29 21:37:26,196 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:26,205 p=27795 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] **********************************************************
2025-03-29 21:37:26,657 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:26,669 p=27795 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *******************************************************************
2025-03-29 21:37:26,786 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:26,896 p=27795 u=vagrant n=ansible | PLAY [Create SSHD CA] ************************************************************************************************
2025-03-29 21:37:26,953 p=27795 u=vagrant n=ansible | TASK [Create SSHD certificate authority] *****************************************************************************
2025-03-29 21:37:27,029 p=27795 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-29 21:37:27,041 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] *****************************************
2025-03-29 21:37:27,093 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:27,111 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *******************************************************
2025-03-29 21:37:27,521 p=27795 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-29 21:37:27,529 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ******************************************************************
2025-03-29 21:37:27,579 p=27795 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-29 21:37:27,594 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] **************************
2025-03-29 21:37:32,981 p=27795 u=vagrant n=ansible | ok: [localhost]
2025-03-29 21:37:32,992 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] *******
2025-03-29 21:37:33,056 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,069 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***********
2025-03-29 21:37:33,120 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,130 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***************************************
2025-03-29 21:37:33,157 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,167 p=27795 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] *****************************************************************
2025-03-29 21:37:33,191 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,240 p=27795 u=vagrant n=ansible | PLAY [Generate any extra user certificates] **************************************************************************
2025-03-29 21:37:33,266 p=27795 u=vagrant n=ansible | TASK [Create user certificates] **************************************************************************************
2025-03-29 21:37:33,335 p=27795 u=vagrant n=ansible | included: pki for localhost
2025-03-29 21:37:33,345 p=27795 u=vagrant n=ansible | TASK [pki : Create Server certificates] ******************************************************************************
2025-03-29 21:37:33,388 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,404 p=27795 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ********************************************
2025-03-29 21:37:33,443 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,453 p=27795 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] **************************************************************
2025-03-29 21:37:33,483 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,491 p=27795 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ******************************************************************
2025-03-29 21:37:33,516 p=27795 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 21:37:33,555 p=27795 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *********************************************************************************
2025-03-29 21:37:33,578 p=27795 u=vagrant n=ansible | TASK [Ensure python is installed] ************************************************************************************
2025-03-29 21:37:34,068 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:34,194 p=27795 u=vagrant n=ansible | PLAY [Gather host facts] *********************************************************************************************
2025-03-29 21:37:34,322 p=27795 u=vagrant n=ansible | PLAY [Basic host setup] **********************************************************************************************
2025-03-29 21:37:34,355 p=27795 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:37:34,405 p=27795 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 21:37:34,437 p=27795 u=vagrant n=ansible | TASK [Check for a supported Operating System] ************************************************************************
2025-03-29 21:37:34,506 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:37:34,556 p=27795 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 21:37:35,503 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:35,570 p=27795 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 21:37:35,601 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:35,631 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] **************************************************
2025-03-29 21:37:35,731 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:35,752 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] **************************************************************
2025-03-29 21:37:36,266 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:36,285 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] *****************************************************************
2025-03-29 21:37:37,193 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:37,212 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ********************************************************
2025-03-29 21:37:37,236 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:37,259 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ****************************************
2025-03-29 21:37:37,848 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:37,869 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] **************************************************
2025-03-29 21:37:37,903 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:37,922 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] *************************************************************
2025-03-29 21:37:38,325 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:38,444 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] ***********************************************************
2025-03-29 21:37:39,209 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:39,226 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *******************************************************************
2025-03-29 21:37:39,303 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller
2025-03-29 21:37:39,327 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] *****************************************************************
2025-03-29 21:37:39,473 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:39,491 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] ***************************************************************************
2025-03-29 21:37:39,927 p=27795 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:37:39,950 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] ************************************************************
2025-03-29 21:37:40,378 p=27795 u=vagrant n=ansible | ok: [controller -> localhost]
2025-03-29 21:37:40,399 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] *************************************************************
2025-03-29 21:37:41,911 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:41,930 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] **************************************
2025-03-29 21:37:42,005 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller
2025-03-29 21:37:42,030 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *******************************************************
2025-03-29 21:37:42,451 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:42,469 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *******************************************************
2025-03-29 21:37:42,588 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:37:42,607 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] **************************************
2025-03-29 21:37:43,041 p=27795 u=vagrant n=ansible | ok: [controller] => (item=uca.list)
2025-03-29 21:37:43,423 p=27795 u=vagrant n=ansible | ok: [controller] => (item=osbpo.list)
2025-03-29 21:37:43,442 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] *******************************
2025-03-29 21:37:49,603 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:49,623 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *********************************************************************
2025-03-29 21:37:50,838 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:37:50,862 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] **************************************************************************
2025-03-29 21:37:51,840 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:51,860 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] ****************************************************************************
2025-03-29 21:37:51,903 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:51,928 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *******************************************************
2025-03-29 21:37:52,081 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/configure_metal_hosts.yml for controller
2025-03-29 21:37:52,110 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Check Kernel Version] ************************************************************************
2025-03-29 21:37:52,149 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:52,169 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages for bare metal nodes] ************************************************
2025-03-29 21:37:54,054 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:37:54,071 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages for bare metal nodes] *****************************
2025-03-29 21:37:54,103 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:54,121 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Check how kernel modules are implemented (statically builtin, dynamic, not set)] *************
2025-03-29 21:37:54,150 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:54,172 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Fail fast if we can't load a module] *********************************************************
2025-03-29 21:37:54,197 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:37:54,216 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Load kernel module(s)] ***********************************************************************
2025-03-29 21:37:54,839 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': '8021q'})
2025-03-29 21:37:55,259 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'br_netfilter'})
2025-03-29 21:37:55,622 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_multipath'})
2025-03-29 21:37:55,985 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_snapshot'})
2025-03-29 21:37:56,355 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ebtables'})
2025-03-29 21:37:56,715 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6table_filter'})
2025-03-29 21:37:57,074 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6_tables'})
2025-03-29 21:37:57,467 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_tables'})
2025-03-29 21:37:57,822 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'xt_MASQUERADE'})
2025-03-29 21:37:58,175 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ipt_REJECT'})
2025-03-29 21:37:58,551 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_filter'})
2025-03-29 21:37:58,910 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_mangle'})
2025-03-29 21:37:59,278 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_nat'})
2025-03-29 21:37:59,678 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_vs'})
2025-03-29 21:38:00,084 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iscsi_tcp'})
2025-03-29 21:38:00,508 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nbd'})
2025-03-29 21:38:00,894 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_conntrack'})
2025-03-29 21:38:01,250 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_defrag_ipv4'})
2025-03-29 21:38:01,618 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_nat'})
2025-03-29 21:38:02,008 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vhost_net'})
2025-03-29 21:38:02,375 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'x_tables'})
2025-03-29 21:38:02,406 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Write list of modules to load at boot] *******************************************************
2025-03-29 21:38:03,247 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:03,267 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Adding new system tuning] ********************************************************************
2025-03-29 21:38:04,007 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_watches', 'value': 1048576})
2025-03-29 21:38:04,410 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2025-03-29 21:38:04,786 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2025-03-29 21:38:05,170 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.ip_forward', 'value': 1})
2025-03-29 21:38:05,527 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.netfilter.nf_conntrack_max', 'value': 262144})
2025-03-29 21:38:05,926 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_background_ratio', 'value': 5})
2025-03-29 21:38:06,284 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_ratio', 'value': 10})
2025-03-29 21:38:06,671 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.swappiness', 'value': 5})
2025-03-29 21:38:07,036 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2025-03-29 21:38:07,419 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2025-03-29 21:38:07,787 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-arptables', 'value': 1})
2025-03-29 21:38:08,155 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.igmp_max_memberships', 'value': 1024})
2025-03-29 21:38:08,514 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-29 21:38:08,867 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-29 21:38:09,226 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-29 21:38:09,594 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.route.gc_thresh', 'value': '16384'})
2025-03-29 21:38:09,969 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_interval', 'value': 60})
2025-03-29 21:38:10,355 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 21:38:10,728 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-29 21:38:11,094 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-29 21:38:11,454 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-29 21:38:11,824 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.route.gc_thresh', 'value': '16384'})
2025-03-29 21:38:12,195 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_interval', 'value': 60})
2025-03-29 21:38:12,560 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 21:38:12,956 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.conf.lo.disable_ipv6', 'value': 0})
2025-03-29 21:38:13,323 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.aio-max-nr', 'value': 131072})
2025-03-29 21:38:13,350 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Configure sysstat] ***************************************************************************
2025-03-29 21:38:13,405 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_sysstat.yml for controller
2025-03-29 21:38:13,435 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat config] ***********************************************************************
2025-03-29 21:38:14,336 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:14,355 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat cron] *************************************************************************
2025-03-29 21:38:15,261 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:15,285 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Start and enable the sysstat service] ********************************************************
2025-03-29 21:38:15,319 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:15,344 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Create a directory to hold systemd journals on disk] *****************************************
2025-03-29 21:38:15,753 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:15,774 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Create tmpfiles structure in journald directory] *********************************************
2025-03-29 21:38:15,808 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:15,826 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] **************************************************************
2025-03-29 21:38:16,239 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:16,261 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *********************************************************************
2025-03-29 21:38:18,075 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:18,092 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] **************************************************
2025-03-29 21:38:18,123 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:18,142 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] ************************************************************************
2025-03-29 21:38:18,724 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:18,758 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] *****************************************************************************
2025-03-29 21:38:18,835 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:18,879 p=27795 u=vagrant n=ansible | TASK [Including PKI role] ********************************************************************************************
2025-03-29 21:38:18,967 p=27795 u=vagrant n=ansible | included: pki for controller
2025-03-29 21:38:19,002 p=27795 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 21:38:19,069 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:19,087 p=27795 u=vagrant n=ansible | TASK [pki : Install certificate authorities] *************************************************************************
2025-03-29 21:38:19,172 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller
2025-03-29 21:38:19,191 p=27795 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] ************************************************
2025-03-29 21:38:19,595 p=27795 u=vagrant n=ansible | ok: [controller -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 21:38:19,619 p=27795 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *********************************************************************
2025-03-29 21:38:20,577 p=27795 u=vagrant n=ansible | ok: [controller] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:38:20,604 p=27795 u=vagrant n=ansible | TASK [pki : Update CA store] *****************************************************************************************
2025-03-29 21:38:20,642 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:20,675 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *********************************************************
2025-03-29 21:38:20,796 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller
2025-03-29 21:38:20,836 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] *****************************************************************************
2025-03-29 21:38:21,425 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:21,444 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ******************************************************
2025-03-29 21:38:22,047 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:22,073 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] **************************************************************
2025-03-29 21:38:22,123 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:22,142 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] **************************************************
2025-03-29 21:38:22,167 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:22,186 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] *****************************************************
2025-03-29 21:38:22,211 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:22,275 p=27795 u=vagrant n=ansible | TASK [Ensure deploy host SSH connection is reset] ********************************************************************
2025-03-29 21:38:22,378 p=27795 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] ****************************************************************************************
2025-03-29 21:38:22,503 p=27795 u=vagrant n=ansible | PLAY [Basic lxc host setup] ******************************************************************************************
2025-03-29 21:38:22,527 p=27795 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:38:22,574 p=27795 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 21:38:22,610 p=27795 u=vagrant n=ansible | TASK [Check the state of the default LXC service log directory] ******************************************************
2025-03-29 21:38:23,231 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:23,249 p=27795 u=vagrant n=ansible | TASK [Create the log aggregation parent directory] *******************************************************************
2025-03-29 21:38:23,664 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:23,683 p=27795 u=vagrant n=ansible | TASK [Move the existing folder to the log aggregation parent] ********************************************************
2025-03-29 21:38:23,776 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:23,826 p=27795 u=vagrant n=ansible | TASK [Create the new LXC service log directory] **********************************************************************
2025-03-29 21:38:24,276 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:24,294 p=27795 u=vagrant n=ansible | TASK [Create the LXC service log aggregation link] *******************************************************************
2025-03-29 21:38:24,704 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:24,819 p=27795 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 21:38:24,869 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:24,895 p=27795 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 21:38:24,930 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:24,971 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Gather variables for each operating system] ********************************************************
2025-03-29 21:38:25,055 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:25,079 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Gather container variables] ************************************************************************
2025-03-29 21:38:25,164 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:25,186 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_pre_install tasks] *******************************************************************
2025-03-29 21:38:25,229 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_pre_install.yml for controller
2025-03-29 21:38:25,247 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Create base directories] ***************************************************************************
2025-03-29 21:38:25,651 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/lxc)
2025-03-29 21:38:26,067 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/usr/local/bin)
2025-03-29 21:38:26,460 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/network/interfaces.d)
2025-03-29 21:38:26,843 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/apparmor.d/lxc)
2025-03-29 21:38:27,198 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/usr/share/lxc/templates)
2025-03-29 21:38:27,555 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/openstack)
2025-03-29 21:38:27,917 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/openstack/backup)
2025-03-29 21:38:28,258 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/openstack/log)
2025-03-29 21:38:28,603 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/var/lib/lxc)
2025-03-29 21:38:28,966 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/var/cache/lxc/download)
2025-03-29 21:38:28,997 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_install tasks"] **********************************************************************
2025-03-29 21:38:29,058 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_install_apt.yml for controller
2025-03-29 21:38:29,075 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Remove conflicting packages] ***********************************************************************
2025-03-29 21:38:30,243 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:30,265 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Install apt packages] ******************************************************************************
2025-03-29 21:38:32,025 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:32,044 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Drop irqbalance config] ****************************************************************************
2025-03-29 21:38:32,883 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:32,902 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc-openstack apparmor profile] ***************************************************************
2025-03-29 21:38:33,740 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:33,762 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Flush handler to reload apparmor profiles] *********************************************************
2025-03-29 21:38:33,790 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_post_install tasks] ******************************************************************
2025-03-29 21:38:33,847 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_post_install.yml for controller
2025-03-29 21:38:33,871 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Ensure the lxc dnsmasq user exists] ****************************************************************
2025-03-29 21:38:34,657 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:34,676 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Drop base config file(s)] **************************************************************************
2025-03-29 21:38:35,572 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-openstack.conf.j2', 'dest': '/etc/lxc/lxc-openstack.conf'})
2025-03-29 21:38:36,381 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-net.default.j2', 'dest': '/etc/default/lxc-net', 'mode': '0644'})
2025-03-29 21:38:37,197 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc.default.j2', 'dest': '/etc/default/lxc', 'mode': '0644'})
2025-03-29 21:38:38,065 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-system-manage.j2', 'dest': '/usr/local/bin/lxc-system-manage', 'mode': '0755'})
2025-03-29 21:38:38,091 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc veth check script] ************************************************************************
2025-03-29 21:38:38,904 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:38,928 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Set systemd DefaultTasksMax value] *****************************************************************
2025-03-29 21:38:39,589 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:39,611 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Set sshd MaxSessions] ******************************************************************************
2025-03-29 21:38:40,004 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:40,023 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Tuning kernel for lxc] *****************************************************************************
2025-03-29 21:38:40,436 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_instances', 'value': 1024})
2025-03-29 21:38:40,461 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_net tasks] ***************************************************************************
2025-03-29 21:38:40,534 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_net.yml for controller
2025-03-29 21:38:40,557 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Check if NetworkManager is running] ****************************************************************
2025-03-29 21:38:40,959 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:40,980 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Ensure network services wait on networking (if using NetworkManager)] ******************************
2025-03-29 21:38:41,005 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:41,025 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Disable and stop lxc-net] **************************************************************************
2025-03-29 21:38:42,272 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:42,294 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Setup LXC OVS Bridge] ******************************************************************************
2025-03-29 21:38:42,321 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:42,341 p=27795 u=vagrant n=ansible | TASK [Run the systemd-networkd role] *********************************************************************************
2025-03-29 21:38:42,524 p=27795 u=vagrant n=ansible | included: systemd_networkd for controller
2025-03-29 21:38:42,544 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] *************************************************
2025-03-29 21:38:42,624 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:42,640 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] *************************
2025-03-29 21:38:42,683 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:42,701 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] **********************************
2025-03-29 21:38:42,736 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:42,759 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] ***************************************************************************
2025-03-29 21:38:42,803 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:42,825 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] ****************************************************************
2025-03-29 21:38:42,859 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:42,881 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] ***********************************************************
2025-03-29 21:38:42,917 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:42,941 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] **********************************************************
2025-03-29 21:38:43,328 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:43,349 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] *************************************************************
2025-03-29 21:38:43,380 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:43,402 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] *****************************************************
2025-03-29 21:38:43,429 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:43,452 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] **************************************************************
2025-03-29 21:38:43,482 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:43,501 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] **************************************************
2025-03-29 21:38:44,404 p=27795 u=vagrant n=ansible | ok: [controller] => (item=[0, {'NetDev': {'Name': 'lxcbr0', 'Kind': 'bridge'}, 'Bridge': {'ForwardDelaySec': 0, 'HelloTimeSec': 2, 'MaxAgeSec': 12, 'STP': False}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 21:38:44,427 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] ****************************************************
2025-03-29 21:38:45,041 p=27795 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 21:38:45,069 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] *************************************************
2025-03-29 21:38:45,798 p=27795 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 21:38:45,819 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] ************************************************
2025-03-29 21:38:45,887 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:45,906 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ******************************************************
2025-03-29 21:38:45,970 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:45,993 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] **********************************************************
2025-03-29 21:38:46,901 p=27795 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:38:46,921 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:38:46,951 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] ***************************************************************
2025-03-29 21:38:47,030 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}]) 
2025-03-29 21:38:47,035 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:47,069 p=27795 u=vagrant n=ansible | TASK [Run the systemd-service role] **********************************************************************************
2025-03-29 21:38:47,201 p=27795 u=vagrant n=ansible | included: systemd_service for controller
2025-03-29 21:38:47,239 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] *************************************************************************
2025-03-29 21:38:47,658 p=27795 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 21:38:47,679 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] ****************************************************************
2025-03-29 21:38:48,104 p=27795 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lock/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 21:38:48,124 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] **************************************************************
2025-03-29 21:38:48,169 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:48,193 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *********************************************************************
2025-03-29 21:38:49,093 p=27795 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-lxc-dnsmasq.conf"})
2025-03-29 21:38:49,111 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *******************************************************************
2025-03-29 21:38:49,747 p=27795 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/lxc-dnsmasq.service", "config_overrides": {"Unit": {"Before": "lxc.service"}, "Service": {"PIDFile": "/run/lxc/dnsmasq.pid"}}, "config_type": "ini"})
2025-03-29 21:38:49,765 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ******************************************************************
2025-03-29 21:38:49,825 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:49,928 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *********************************************************************
2025-03-29 21:38:49,980 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:50,003 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ********************************************************************
2025-03-29 21:38:50,040 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:50,062 p=27795 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ***************************************************************
2025-03-29 21:38:50,109 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:50,134 p=27795 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] ****************************************************************
2025-03-29 21:38:50,215 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 21:38:50,251 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load service lxc-dnsmasq] ********************************************************************
2025-03-29 21:38:51,063 p=27795 u=vagrant n=ansible | ok: [controller] => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 21:38:51,097 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load timer lxc-dnsmasq] **********************************************************************
2025-03-29 21:38:51,163 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq"}) 
2025-03-29 21:38:51,168 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:51,188 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load socket] *********************************************************************************
2025-03-29 21:38:51,244 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:51,296 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Check Container Bridge exists] *********************************************************************
2025-03-29 21:38:51,736 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:51,758 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] ************************************************************************************
2025-03-29 21:38:51,795 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache tasks] *************************************************************************
2025-03-29 21:38:51,852 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache.yml for controller
2025-03-29 21:38:51,896 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Set LXC cache fact(s)] *****************************************************************************
2025-03-29 21:38:51,956 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:51,976 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Retrieve the expiry object] ************************************************************************
2025-03-29 21:38:52,371 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:38:52,389 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Set cache refresh fact] ****************************************************************************
2025-03-29 21:38:52,426 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:52,450 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_rootfs tasks] ******************************************************************
2025-03-29 21:38:52,479 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:52,499 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_preparation tasks] *************************************************************
2025-03-29 21:38:52,538 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:52,560 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_create tasks] ******************************************************************
2025-03-29 21:38:52,596 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:38:52,656 p=27795 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] ************************************************************************************
2025-03-29 21:38:52,836 p=27795 u=vagrant n=ansible | PLAY [Set lxc containers group] **************************************************************************************
2025-03-29 21:38:53,010 p=27795 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:38:53,218 p=27795 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:38:53,246 p=27795 u=vagrant n=ansible | TASK [Add hosts to dynamic inventory group] **************************************************************************
2025-03-29 21:38:53,307 p=27795 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:38:53,352 p=27795 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:38:53,358 p=27795 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:38:53,379 p=27795 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:38:53,549 p=27795 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] ****************************************************************************************
2025-03-29 21:38:53,676 p=27795 u=vagrant n=ansible | PLAY [Create container(s)] *******************************************************************************************
2025-03-29 21:38:53,690 p=27795 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:38:53,811 p=27795 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:38:53,905 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *********************************************************
2025-03-29 21:38:54,441 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:38:54,466 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:38:54,915 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:38:54,974 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:38:54,986 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Check the physical_host variable is set] ************************************************
2025-03-29 21:38:55,045 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:38:55,077 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:38:55,093 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:38:55,115 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:38:55,123 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Read custom facts from previous runs] ***************************************************
2025-03-29 21:38:58,194 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:38:58,223 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:00,453 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:00,584 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:00,598 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Check for lxc volume group] *************************************************************
2025-03-29 21:39:00,679 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:00,713 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:00,745 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:00,768 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:00,779 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : LXC VG check] ***************************************************************************
2025-03-29 21:39:00,831 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:00,854 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:00,856 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:00,876 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:00,888 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_destroy tasks] **************************************************
2025-03-29 21:39:00,950 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:00,993 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:00,995 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:01,022 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:01,040 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks] ***************************************************
2025-03-29 21:39:01,184 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:39:01,202 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Container service directories] **********************************************************
2025-03-29 21:39:01,814 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/controller-memcached-container-71b4149f)
2025-03-29 21:39:01,846 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/controller-galera-container-f800b10b)
2025-03-29 21:39:02,266 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-memcached-container-71b4149f)
2025-03-29 21:39:02,289 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/backup/controller-galera-container-f800b10b)
2025-03-29 21:39:02,750 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/log/controller-memcached-container-71b4149f)
2025-03-29 21:39:02,805 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/log/controller-galera-container-f800b10b)
2025-03-29 21:39:03,284 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-galera-container-f800b10b)
2025-03-29 21:39:03,351 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-memcached-container-71b4149f)
2025-03-29 21:39:03,758 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/controller-utility-container-7e5b64c5)
2025-03-29 21:39:03,811 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:39:04,200 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/backup/controller-utility-container-7e5b64c5)
2025-03-29 21:39:04,321 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/backup/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:39:04,662 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/log/controller-utility-container-7e5b64c5)
2025-03-29 21:39:04,836 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/log/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:39:05,159 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-utility-container-7e5b64c5)
2025-03-29 21:39:05,373 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:39:05,387 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : LXC autodev setup] **********************************************************************
2025-03-29 21:39:06,329 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:06,436 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:07,223 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:07,323 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:07,335 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks for dir] *******************************************
2025-03-29 21:39:07,446 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create_dir.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:39:07,469 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create container (dir)] *****************************************************************
2025-03-29 21:39:08,302 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:08,846 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:09,404 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:09,855 p=27795 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:09,864 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Check container state] ******************************************************************
2025-03-29 21:39:10,314 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:10,372 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:10,764 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:10,829 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:10,839 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Start the container if it is not already running] ***************************************
2025-03-29 21:39:10,894 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:10,930 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:10,950 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:10,977 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:10,987 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_config tasks] ***************************************************
2025-03-29 21:39:11,241 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_config.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:39:11,266 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Write default container config] *********************************************************
2025-03-29 21:39:11,923 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:39:11,997 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:39:12,407 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:39:12,480 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:39:12,835 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:39:12,947 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:39:13,280 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:39:13,408 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-memcached-container-71b4149f/autodev)
2025-03-29 21:39:13,696 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:39:13,843 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:39:14,120 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-galera-container-f800b10b/autodev)
2025-03-29 21:39:14,259 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:39:14,653 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:39:14,793 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 21:39:15,095 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:39:15,238 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 21:39:15,528 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:39:15,676 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 21:39:15,923 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:39:16,068 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 21:39:16,317 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:39:16,471 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 21:39:16,688 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-utility-container-7e5b64c5/autodev)
2025-03-29 21:39:16,854 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/autodev)
2025-03-29 21:39:16,871 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Ensure containers have required auto mounts] ********************************************
2025-03-29 21:39:17,300 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:17,329 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:17,682 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:17,731 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:17,740 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Ensure bind mount host directories exists] **********************************************
2025-03-29 21:39:18,159 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 21:39:18,209 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 21:39:18,598 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 21:39:18,656 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 21:39:18,670 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] **********************************************
2025-03-29 21:39:19,094 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 21:39:19,137 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 21:39:19,557 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 21:39:19,599 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 21:39:19,611 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create and start the container] *********************************************************
2025-03-29 21:39:20,037 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:20,089 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:20,512 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:20,589 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:20,598 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Gather container facts] *****************************************************************
2025-03-29 21:39:21,629 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:39:21,703 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:39:22,463 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:22,517 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:22,528 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Drop container setup script] ************************************************************
2025-03-29 21:39:23,832 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:39:23,895 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:39:25,145 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:25,192 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:25,201 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Drop container first run script] ********************************************************
2025-03-29 21:39:26,250 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:26,294 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:27,240 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:27,369 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:27,379 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Execute first script] *******************************************************************
2025-03-29 21:39:27,818 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:27,877 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:28,270 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:28,343 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:28,355 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create container mac script] ************************************************************
2025-03-29 21:39:29,442 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:29,492 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:30,405 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:30,448 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:31,402 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:31,479 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:32,413 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:32,495 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:32,505 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Cleanup old mac scripts] ****************************************************************
2025-03-29 21:39:32,987 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:33,004 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:33,401 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:33,431 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:33,863 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:33,899 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:34,290 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:34,335 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:34,346 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Set define static mac address from an existing interface] *******************************
2025-03-29 21:39:34,769 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:34,812 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:35,282 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:35,412 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:35,886 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:35,963 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:36,262 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:36,336 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:36,346 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Gather hardware addresses to be used as facts] ******************************************
2025-03-29 21:39:36,741 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:36,799 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:37,124 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:37,200 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:37,563 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:37,639 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:37,949 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:38,012 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:38,024 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Set fixed hardware address fact] ********************************************************
2025-03-29 21:39:38,078 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6M2I6Y2M6ZjEK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,099 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6ZDA6YjM6Y2UK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,133 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ZjA6Njk6ZTQK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,159 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ODM6OWQ6YWYK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,212 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6YWM6ZDQ6ZWQK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,235 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6N2E6ZjU6NzgK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,248 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6ZTE6Mjg6MWMK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,270 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6N2Y6ZDI6ZjYK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 21:39:38,281 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : LXC host config for container networks] *************************************************
2025-03-29 21:39:39,256 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:39:39,303 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:39:40,218 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:39:40,282 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:39:41,284 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:39:41,365 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 21:39:42,339 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:39:42,413 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 21:39:42,424 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Container network includes] *************************************************************
2025-03-29 21:39:42,928 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:42,956 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:43,342 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:43,381 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:43,825 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:43,847 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 21:39:44,228 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:44,264 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 21:39:44,274 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create wiring script] *******************************************************************
2025-03-29 21:39:45,157 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:45,220 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:46,094 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:46,177 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:46,184 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Drop veth cleanup script] ***************************************************************
2025-03-29 21:39:47,126 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:39:47,193 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:39:48,073 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:39:48,162 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:39:48,171 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Defines a pre, post, and haltsignal configs] ********************************************
2025-03-29 21:39:48,570 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 21:39:48,615 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 21:39:48,962 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 21:39:48,995 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 21:39:49,427 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:39:49,512 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:39:49,860 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 21:39:49,955 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 21:39:50,251 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 21:39:50,387 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 21:39:50,714 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:39:50,826 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 21:39:50,838 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Run veth wiring] ************************************************************************
2025-03-29 21:39:50,886 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:50,916 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:50,938 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:50,959 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:50,968 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Run container veth wiring script] *******************************************************
2025-03-29 21:39:51,029 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:39:51,063 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:39:51,127 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:39:51,139 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:51,182 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:39:51,196 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:51,219 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:39:51,265 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 21:39:51,320 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:39:51,322 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:51,381 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 21:39:51,384 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:51,393 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_network tasks] **************************************************
2025-03-29 21:39:51,551 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_network.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:39:51,724 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] *************************************************
2025-03-29 21:39:51,809 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:39:51,837 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:39:51,882 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:51,904 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:51,914 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] *************************
2025-03-29 21:39:51,968 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:51,999 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:52,016 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:52,048 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:52,057 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] **********************************
2025-03-29 21:39:52,111 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:52,139 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:52,152 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:52,174 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:52,186 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] ***************************************************************************
2025-03-29 21:39:52,232 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:52,259 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:52,278 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:52,298 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:52,309 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] ****************************************************************
2025-03-29 21:39:52,364 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:52,387 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:52,401 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:52,418 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:52,427 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] ***********************************************************
2025-03-29 21:39:52,481 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:52,509 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:52,521 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:52,545 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:52,560 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] **********************************************************
2025-03-29 21:39:53,117 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:39:53,151 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:39:53,603 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:53,626 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:53,635 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] *************************************************************
2025-03-29 21:39:53,697 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:53,736 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:53,764 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:53,778 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:53,793 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] *****************************************************
2025-03-29 21:39:53,856 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:53,888 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:53,891 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:53,909 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:53,918 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] **************************************************************
2025-03-29 21:39:53,972 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:54,012 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:54,017 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:54,051 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:54,067 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] **************************************************
2025-03-29 21:39:54,122 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:39:54,169 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:39:54,187 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:39:54,220 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:39:54,233 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] ****************************************************
2025-03-29 21:39:55,085 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:55,159 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:55,851 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:55,917 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:56,780 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:56,894 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:57,543 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:57,662 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:57,673 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] *************************************************
2025-03-29 21:39:58,854 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:58,869 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:59,691 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:39:59,699 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:40:01,169 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:40:01,188 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:40:02,032 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:40:02,049 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 21:40:02,062 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] ************************************************
2025-03-29 21:40:02,608 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth1)
2025-03-29 21:40:02,628 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth1)
2025-03-29 21:40:03,072 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth0)
2025-03-29 21:40:03,107 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth0)
2025-03-29 21:40:03,674 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth1)
2025-03-29 21:40:03,681 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth1)
2025-03-29 21:40:04,128 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth0)
2025-03-29 21:40:04,129 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth0)
2025-03-29 21:40:04,145 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ******************************************************
2025-03-29 21:40:05,413 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:05,459 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:06,581 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:06,613 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:07,830 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:07,894 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:09,138 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:09,200 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 21:40:09,213 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] **********************************************************
2025-03-29 21:40:10,272 p=27795 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:40:10,318 p=27795 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:40:11,445 p=27795 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:11,452 p=27795 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:11,463 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:40:11,473 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:40:11,487 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:40:11,497 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] **********************************
2025-03-29 21:40:11,508 p=27795 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] ***************************************************************
2025-03-29 21:40:11,637 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,648 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,663 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:11,678 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,696 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,708 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:11,799 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,821 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,826 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:11,855 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,876 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 21:40:11,884 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:11,934 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create resolved link] *******************************************************************
2025-03-29 21:40:12,516 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:12,552 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:13,141 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:13,199 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:13,212 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] *************************************************************************
2025-03-29 21:40:13,843 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:13,927 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:14,393 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:14,521 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:15,197 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:15,339 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:15,787 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:15,904 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:15,916 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] ****************************************************************
2025-03-29 21:40:16,492 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:16,622 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:16,985 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:17,096 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:17,527 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:17,650 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:18,024 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:18,145 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 21:40:18,158 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] **************************************************************
2025-03-29 21:40:18,706 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:40:18,746 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:40:19,328 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:40:19,347 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 21:40:19,360 p=27795 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *********************************************************************
2025-03-29 21:40:20,665 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:40:20,739 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:40:21,875 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:40:21,949 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:40:23,755 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:40:23,867 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 21:40:25,282 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:40:25,290 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 21:40:25,307 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *******************************************************************
2025-03-29 21:40:26,403 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:40:26,435 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:40:27,368 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:40:27,459 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 21:40:27,473 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ******************************************************************
2025-03-29 21:40:28,931 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:40:29,026 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:40:30,404 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:40:30,493 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 21:40:30,507 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *********************************************************************
2025-03-29 21:40:30,612 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:30,651 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:30,711 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:30,731 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:30,741 p=27795 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ********************************************************************
2025-03-29 21:40:30,831 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:30,867 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:30,915 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:30,944 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:30,952 p=27795 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ***************************************************************
2025-03-29 21:40:31,014 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:31,050 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:31,078 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:31,119 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:31,132 p=27795 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] ****************************************************************
2025-03-29 21:40:31,413 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "sysctl-container"})
2025-03-29 21:40:31,423 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:40:31,515 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load service sysctl-container] ***************************************************************
2025-03-29 21:40:32,331 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"})
2025-03-29 21:40:32,385 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"})
2025-03-29 21:40:33,151 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"})
2025-03-29 21:40:33,242 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"})
2025-03-29 21:40:33,263 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load timer sysctl-container] *****************************************************************
2025-03-29 21:40:33,318 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:40:33,328 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:33,358 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:40:33,367 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:33,399 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:40:33,403 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:33,426 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"}) 
2025-03-29 21:40:33,428 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:33,447 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load service systemd-hostnamed] **************************************************************
2025-03-29 21:40:34,444 p=27795 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:40:34,533 p=27795 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:40:35,516 p=27795 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:40:35,621 p=27795 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 21:40:35,647 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load timer systemd-hostnamed] ****************************************************************
2025-03-29 21:40:35,701 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:40:35,711 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:35,739 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:40:35,749 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:35,784 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:40:35,786 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:35,815 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 21:40:35,816 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:35,828 p=27795 u=vagrant n=ansible | TASK [systemd_service : Load socket] *********************************************************************************
2025-03-29 21:40:35,922 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:35,987 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:36,059 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:36,106 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:36,154 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Add global_environment_variables to environment file] ***********************************
2025-03-29 21:40:36,730 p=27795 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:40:36,757 p=27795 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:40:37,214 p=27795 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:37,246 p=27795 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:37,260 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create localhost config] ****************************************************************
2025-03-29 21:40:37,821 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:37,864 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:38,378 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:38,411 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:38,420 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Set hostnamectl name] *******************************************************************
2025-03-29 21:40:38,481 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:40:38,513 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:40:38,526 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:38,554 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:38,567 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Generate machine-id] ********************************************************************
2025-03-29 21:40:39,186 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:39,242 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:39,701 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:39,732 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:39,742 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Ensure the dbus directory exists] *******************************************************
2025-03-29 21:40:40,334 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:40,368 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:40,852 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:40,879 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:40,889 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Create dbus machine-id] *****************************************************************
2025-03-29 21:40:41,625 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:41,671 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:42,346 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:42,388 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:42,398 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Retrieve the machine-id] ****************************************************************
2025-03-29 21:40:42,852 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:42,896 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:43,310 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:43,350 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:43,360 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Set bind mount for journal linking] *****************************************************
2025-03-29 21:40:43,413 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:43,452 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:43,468 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:43,498 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:43,511 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Ensure journal directory exists] ********************************************************
2025-03-29 21:40:43,982 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:40:44,105 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:40:44,485 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=controller-galera-container-f800b10b)
2025-03-29 21:40:44,585 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=controller-memcached-container-71b4149f)
2025-03-29 21:40:44,960 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:40:45,036 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=controller)
2025-03-29 21:40:45,445 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=controller-utility-container-7e5b64c5)
2025-03-29 21:40:45,524 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=controller-rabbit-mq-container-6f8ad97c)
2025-03-29 21:40:45,535 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] **********************************************
2025-03-29 21:40:45,972 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 21:40:46,008 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 21:40:46,399 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 21:40:46,454 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 21:40:46,463 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *********************************************************
2025-03-29 21:40:46,936 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:46,964 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:47,379 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:47,419 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:47,427 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Record the container variant deployed] **************************************************
2025-03-29 21:40:48,135 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:48,156 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:48,595 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:48,629 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:48,641 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:40:48,653 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:40:48,665 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:40:48,675 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ********************************************************
2025-03-29 21:40:48,683 p=27795 u=vagrant n=ansible | TASK [lxc_container_create : (RE)Gather facts post setup] ************************************************************
2025-03-29 21:40:50,351 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:50,443 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:51,790 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:51,816 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:51,912 p=27795 u=vagrant n=ansible | TASK [Wait for container connectivity] *******************************************************************************
2025-03-29 21:40:55,977 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:40:55,999 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:40:59,663 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:40:59,684 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:40:59,697 p=27795 u=vagrant n=ansible | TASK [Clear facts for new container(s)] ******************************************************************************
2025-03-29 21:40:59,737 p=27795 u=vagrant n=ansible | PLAY [Gather lxc containers facts] ***********************************************************************************
2025-03-29 21:40:59,747 p=27795 u=vagrant n=ansible | TASK [Gathering Facts] ***********************************************************************************************
2025-03-29 21:41:01,461 p=27795 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-galera-container-f800b10b is using the discovered Python interpreter at
/usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:41:01,462 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:01,510 p=27795 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-memcached-container-71b4149f is using the discovered Python interpreter
at /usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:41:01,511 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:02,515 p=27795 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-utility-container-7e5b64c5 is using the discovered Python interpreter at
/usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:41:02,515 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:02,553 p=27795 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-rabbit-mq-container-6f8ad97c is using the discovered Python interpreter
at /usr/bin/python3.10, but future installation of another Python interpreter could change the meaning of that path.
See https://docs.ansible.com/ansible-core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 21:41:02,553 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:02,700 p=27795 u=vagrant n=ansible | PLAY [Configure containers default software] *************************************************************************
2025-03-29 21:41:02,725 p=27795 u=vagrant n=ansible | TASK [Check for a supported Operating System] ************************************************************************
2025-03-29 21:41:02,816 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:02,835 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:02,864 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:02,895 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:02,905 p=27795 u=vagrant n=ansible | TASK [Setup installation variables] **********************************************************************************
2025-03-29 21:41:03,024 p=27795 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:41:03,099 p=27795 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 21:41:04,540 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:04,557 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:05,794 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:05,846 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:05,855 p=27795 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 21:41:05,901 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:05,932 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:05,938 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:05,958 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:05,987 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] **************************************************
2025-03-29 21:41:06,077 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:06,112 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:06,153 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:06,184 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:06,192 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] **************************************************************
2025-03-29 21:41:06,676 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:06,739 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:07,178 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:07,232 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:07,242 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] *****************************************************************
2025-03-29 21:41:08,351 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:08,467 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:09,615 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:09,839 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:09,850 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ********************************************************
2025-03-29 21:41:09,905 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:09,937 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:09,939 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:09,961 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:09,969 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ****************************************
2025-03-29 21:41:10,580 p=27795 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 21:41:10,670 p=27795 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 21:41:11,127 p=27795 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:11,214 p=27795 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:11,227 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] **************************************************
2025-03-29 21:41:11,288 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:11,317 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:11,329 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:11,376 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:11,387 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] *************************************************************
2025-03-29 21:41:12,028 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:12,065 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:12,603 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:12,639 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:12,649 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] ***********************************************************
2025-03-29 21:41:13,472 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:13,569 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:14,319 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:14,434 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:14,444 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *******************************************************************
2025-03-29 21:41:14,639 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:41:14,673 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] *****************************************************************
2025-03-29 21:41:14,795 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:14,806 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] ***************************************************************************
2025-03-29 21:41:15,313 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:15,363 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:15,813 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:15,875 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:15,885 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] ************************************************************
2025-03-29 21:41:16,285 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 21:41:16,293 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] *************************************************************
2025-03-29 21:41:17,686 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:17,708 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:19,010 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:19,148 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:19,157 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] **************************************
2025-03-29 21:41:19,302 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:41:19,341 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *******************************************************
2025-03-29 21:41:19,819 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:19,926 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:20,267 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:20,357 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:20,365 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *******************************************************
2025-03-29 21:41:20,478 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:20,519 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:20,584 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:20,618 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 21:41:20,629 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] **************************************
2025-03-29 21:41:21,146 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=uca.list)
2025-03-29 21:41:21,180 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=uca.list)
2025-03-29 21:41:21,605 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=osbpo.list)
2025-03-29 21:41:21,655 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=osbpo.list)
2025-03-29 21:41:22,134 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=uca.list)
2025-03-29 21:41:22,161 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=uca.list)
2025-03-29 21:41:22,571 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=osbpo.list)
2025-03-29 21:41:22,598 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=osbpo.list)
2025-03-29 21:41:22,613 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] *******************************
2025-03-29 21:41:29,538 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:29,679 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:36,054 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:36,222 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:36,233 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *********************************************************************
2025-03-29 21:41:36,988 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:41:37,092 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:41:37,814 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:41:37,874 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 21:41:37,892 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] **************************************************************************
2025-03-29 21:41:39,043 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:39,269 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:40,323 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:40,414 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:40,424 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] ****************************************************************************
2025-03-29 21:41:40,485 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:40,520 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:40,537 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:40,562 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:40,574 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *******************************************************
2025-03-29 21:41:40,642 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:40,682 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:40,684 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:40,720 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:40,731 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] **************************************************************
2025-03-29 21:41:41,462 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:41,498 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:41,992 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:41,995 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:42,004 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *********************************************************************
2025-03-29 21:41:43,998 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:44,148 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:46,333 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:46,456 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:46,468 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] **************************************************
2025-03-29 21:41:46,525 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:46,556 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:46,570 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:46,582 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:46,592 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] ************************************************************************
2025-03-29 21:41:47,414 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:47,437 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:48,024 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:48,079 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:48,088 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] *****************************************************************************
2025-03-29 21:41:48,153 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:48,196 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:48,204 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:48,243 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:48,255 p=27795 u=vagrant n=ansible | TASK [Including PKI role] ********************************************************************************************
2025-03-29 21:41:48,463 p=27795 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:41:48,547 p=27795 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] *************************************************************************
2025-03-29 21:41:48,637 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:48,662 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:48,678 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:48,715 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:48,726 p=27795 u=vagrant n=ansible | TASK [pki : Install certificate authorities] *************************************************************************
2025-03-29 21:41:48,927 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:41:48,942 p=27795 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] ************************************************
2025-03-29 21:41:49,366 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 21:41:49,380 p=27795 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *********************************************************************
2025-03-29 21:41:50,627 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:41:50,655 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:41:51,776 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:41:51,819 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 21:41:51,831 p=27795 u=vagrant n=ansible | TASK [pki : Update CA store] *****************************************************************************************
2025-03-29 21:41:51,880 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:51,911 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:51,923 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:51,947 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:51,975 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *********************************************************
2025-03-29 21:41:52,095 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c
2025-03-29 21:41:52,174 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] *****************************************************************************
2025-03-29 21:41:52,697 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:52,720 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:53,191 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:53,198 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:53,208 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ******************************************************
2025-03-29 21:41:53,673 p=27795 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 21:41:53,756 p=27795 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 21:41:54,191 p=27795 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:54,286 p=27795 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:54,297 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] **************************************************************
2025-03-29 21:41:54,355 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:54,397 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:54,422 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:54,440 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:54,448 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] **************************************************
2025-03-29 21:41:54,500 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:54,527 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:54,533 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:54,558 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:54,572 p=27795 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] *****************************************************
2025-03-29 21:41:54,637 p=27795 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 21:41:54,663 p=27795 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 21:41:54,664 p=27795 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 21:41:54,688 p=27795 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 21:41:54,796 p=27795 u=vagrant n=ansible | PLAY [Gather security hardening facts] *******************************************************************************
2025-03-29 21:41:54,881 p=27795 u=vagrant n=ansible | TASK [Gather additional facts] ***************************************************************************************
2025-03-29 21:41:54,946 p=27795 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller
2025-03-29 21:41:54,974 p=27795 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] ****************************************************
2025-03-29 21:41:56,782 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:56,889 p=27795 u=vagrant n=ansible | PLAY [Apply security hardening configurations] ***********************************************************************
2025-03-29 21:41:56,957 p=27795 u=vagrant n=ansible | TASK [Include security hardening role] *******************************************************************************
2025-03-29 21:41:57,672 p=27795 u=vagrant n=ansible | included: ansible-hardening for controller
2025-03-29 21:41:57,685 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Gather variables for each operating system] ************************************************
2025-03-29 21:41:57,776 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:57,794 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for check/audit mode] ****************************************************************
2025-03-29 21:41:58,181 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:58,206 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if we are booting with EFI or UEFI] *******************************************
2025-03-29 21:41:58,293 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:58,323 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set facts] *********************************************************************************
2025-03-29 21:41:58,393 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:58,419 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if grub is present on the remote node] ***********************************************
2025-03-29 21:41:58,923 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:58,943 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Create temporary directory to hold any temporary files] ************************************
2025-03-29 21:41:59,579 p=27795 u=vagrant n=ansible | changed: [controller]
2025-03-29 21:41:59,599 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set a fact for the temporary directory] ****************************************************
2025-03-29 21:41:59,646 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:41:59,672 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Verify all installed RPM packages] *********************************************************
2025-03-29 21:41:59,726 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:41:59,752 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Locate top level directories to check for .shosts] *****************************************
2025-03-29 21:41:59,792 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:41:59,815 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for .shosts or shosts.equiv files] ***************************************************
2025-03-29 21:41:59,853 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:41:59,880 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all users on the system] *************************************************
2025-03-29 21:42:00,641 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:00,664 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all interactive users on the system] *************************************
2025-03-29 21:42:01,115 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:01,146 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Install EPEL repository] *******************************************************************
2025-03-29 21:42:01,186 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:01,216 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Add packages based on STIG requirements] ***************************************************
2025-03-29 21:42:03,537 p=27795 u=vagrant n=ansible | ok: [controller] => (item=present)
2025-03-29 21:42:03,557 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove packages based on STIG requirements] ************************************************
2025-03-29 21:42:04,949 p=27795 u=vagrant n=ansible | ok: [controller] => (item=absent)
2025-03-29 21:42:04,971 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Including OS-specific tasks] ***************************************************************
2025-03-29 21:42:05,059 p=27795 u=vagrant n=ansible | included: /etc/ansible/roles/ansible-hardening/tasks/rhel7stig/apt.yml for controller
2025-03-29 21:42:05,259 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure debsums is installed] ***************************************************************
2025-03-29 21:42:05,291 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:05,315 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Gather debsums report] *********************************************************************
2025-03-29 21:42:05,345 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:05,369 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Get files with invalid checksums (apt)] ******************************************
2025-03-29 21:42:05,435 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:05,462 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Create comma-separated list] *****************************************************
2025-03-29 21:42:05,515 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:05,542 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - The cryptographic hash of system files and commands must match vendor values (apt)] ***
2025-03-29 21:42:05,604 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:05,648 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Search for AllowUnauthenticated in /etc/apt/apt.conf.d/] ***********************************
2025-03-29 21:42:06,075 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:06,096 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71977 - Package management tool must verify authenticity of packages] ********************
2025-03-29 21:42:06,125 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:06,247 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71979 - Package management tool must verify authenticity of locally-installed packages] ***
2025-03-29 21:42:06,675 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:06,695 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71987 - Clean requirements/dependencies when removing packages (dpkg)] *******************
2025-03-29 21:42:06,726 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:06,747 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Enable automatic package updates (apt)] ****************************************************
2025-03-29 21:42:06,791 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:06,814 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/security/pwquality.conf exists] **********************************************
2025-03-29 21:42:07,301 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:07,324 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set password quality requirements] *********************************************************
2025-03-29 21:42:07,840 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:07,860 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for SHA512 password storage in PAM] **************************************************
2025-03-29 21:42:08,260 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:08,284 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Print warning if PAM is not using SHA512 for password storage] *****************************
2025-03-29 21:42:08,360 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "PAM is not using SHA512 for password storage. This is a security issue.\n"
}
2025-03-29 21:42:08,410 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure libuser is storing passwords using SHA512] ******************************************
2025-03-29 21:42:08,485 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:08,538 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set minimum password lifetime limit to 24 hours for interactive accounts] ******************
2025-03-29 21:42:08,684 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,729 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,755 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,769 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,772 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:08,805 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set maximum password lifetime limit to 60 days for interactive accounts] *******************
2025-03-29 21:42:08,881 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,892 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,907 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,919 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:08,922 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:08,942 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure that users cannot reuse one of their last 5 passwords] ******************************
2025-03-29 21:42:08,987 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:09,007 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure accounts are disabled if the password expires] **************************************
2025-03-29 21:42:09,036 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:09,059 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Apply shadow-utils configurations] *********************************************************
2025-03-29 21:42:09,507 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'ENCRYPT_METHOD', 'value': 'SHA512', 'stig_id': 'V-71921', 'os_family': 'all'})
2025-03-29 21:42:09,511 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MIN_DAYS', 'value': '', 'stig_id': 'V-71925', 'os_family': 'all'}) 
2025-03-29 21:42:09,518 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MAX_DAYS', 'value': '', 'stig_id': 'V-71929', 'os_family': 'all'}) 
2025-03-29 21:42:09,534 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'FAIL_DELAY', 'value': '4', 'stig_id': 'V-71951', 'os_family': 'RedHat'}) 
2025-03-29 21:42:09,545 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'UMASK', 'value': '', 'stig_id': 'V-71995', 'os_family': 'all'}) 
2025-03-29 21:42:09,911 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'CREATE_HOME', 'value': 'yes', 'stig_id': 'V-72013', 'os_family': 'all'})
2025-03-29 21:42:09,934 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for groups in /etc/passwd that are not in /etc/group] ************************
2025-03-29 21:42:09,999 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:10,016 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Get all accounts with UID 0] ***************************************************************
2025-03-29 21:42:10,439 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:10,457 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Print warnings for non-root users with UID 0] **********************************************
2025-03-29 21:42:10,486 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:10,511 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for local interactive users without a home directory assigned] ***************
2025-03-29 21:42:10,572 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:10,595 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check each user to see if its home directory exists on the filesystem] *********************
2025-03-29 21:42:11,060 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'root', 'uid': 0, 'gid': 0, 'gecos': 'root', 'dir': '/root', 'shell': '/bin/bash', 'group': {'name': 'root', 'passwd': 'x', 'gid': 0}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:11,451 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'daemon', 'uid': 1, 'gid': 1, 'gecos': 'daemon', 'dir': '/usr/sbin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:11,835 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'bin', 'uid': 2, 'gid': 2, 'gecos': 'bin', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'bin', 'passwd': 'x', 'gid': 2}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:12,245 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sys', 'uid': 3, 'gid': 3, 'gecos': 'sys', 'dir': '/dev', 'shell': '/usr/sbin/nologin', 'group': {'name': 'sys', 'passwd': 'x', 'gid': 3}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:12,635 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sync', 'uid': 4, 'gid': 65534, 'gecos': 'sync', 'dir': '/bin', 'shell': '/bin/sync', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:13,018 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'games', 'uid': 5, 'gid': 60, 'gecos': 'games', 'dir': '/usr/games', 'shell': '/usr/sbin/nologin', 'group': {'name': 'games', 'passwd': 'x', 'gid': 60}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:13,412 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'man', 'uid': 6, 'gid': 12, 'gecos': 'man', 'dir': '/var/cache/man', 'shell': '/usr/sbin/nologin', 'group': {'name': 'man', 'passwd': 'x', 'gid': 12}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:13,783 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lp', 'uid': 7, 'gid': 7, 'gecos': 'lp', 'dir': '/var/spool/lpd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'lp', 'passwd': 'x', 'gid': 7}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:14,181 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'mail', 'uid': 8, 'gid': 8, 'gecos': 'mail', 'dir': '/var/mail', 'shell': '/usr/sbin/nologin', 'group': {'name': 'mail', 'passwd': 'x', 'gid': 8}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:14,543 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'news', 'uid': 9, 'gid': 9, 'gecos': 'news', 'dir': '/var/spool/news', 'shell': '/usr/sbin/nologin', 'group': {'name': 'news', 'passwd': 'x', 'gid': 9}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:14,907 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uucp', 'uid': 10, 'gid': 10, 'gecos': 'uucp', 'dir': '/var/spool/uucp', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uucp', 'passwd': 'x', 'gid': 10}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:15,302 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'proxy', 'uid': 13, 'gid': 13, 'gecos': 'proxy', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'proxy', 'passwd': 'x', 'gid': 13}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:15,678 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'www-data', 'uid': 33, 'gid': 33, 'gecos': 'www-data', 'dir': '/var/www', 'shell': '/usr/sbin/nologin', 'group': {'name': 'www-data', 'passwd': 'x', 'gid': 33}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:16,081 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'backup', 'uid': 34, 'gid': 34, 'gecos': 'backup', 'dir': '/var/backups', 'shell': '/usr/sbin/nologin', 'group': {'name': 'backup', 'passwd': 'x', 'gid': 34}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:16,443 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'list', 'uid': 38, 'gid': 38, 'gecos': 'Mailing List Manager', 'dir': '/var/list', 'shell': '/usr/sbin/nologin', 'group': {'name': 'list', 'passwd': 'x', 'gid': 38}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:16,835 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'irc', 'uid': 39, 'gid': 39, 'gecos': 'ircd', 'dir': '/run/ircd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'irc', 'passwd': 'x', 'gid': 39}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:17,215 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'gnats', 'uid': 41, 'gid': 41, 'gecos': 'Gnats Bug-Reporting System (admin)', 'dir': '/var/lib/gnats', 'shell': '/usr/sbin/nologin', 'group': {'name': 'gnats', 'passwd': 'x', 'gid': 41}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:17,592 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:17,974 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-network', 'uid': 100, 'gid': 102, 'gecos': 'systemd Network Management,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-network', 'passwd': 'x', 'gid': 102}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:18,364 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-resolve', 'uid': 101, 'gid': 103, 'gecos': 'systemd Resolver,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-resolve', 'passwd': 'x', 'gid': 103}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:18,727 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'messagebus', 'uid': 102, 'gid': 105, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'messagebus', 'passwd': 'x', 'gid': 105}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:19,111 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-timesync', 'uid': 103, 'gid': 106, 'gecos': 'systemd Time Synchronization,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-timesync', 'passwd': 'x', 'gid': 106}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:19,471 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'syslog', 'uid': 104, 'gid': 111, 'gecos': '', 'dir': '/home/syslog', 'shell': '/usr/sbin/nologin', 'group': {'name': 'syslog', 'passwd': 'x', 'gid': 111}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:19,823 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': '_apt', 'uid': 105, 'gid': 65534, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:20,208 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tss', 'uid': 106, 'gid': 112, 'gecos': 'TPM software stack,,,', 'dir': '/var/lib/tpm', 'shell': '/bin/false', 'group': {'name': 'tss', 'passwd': 'x', 'gid': 112}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:20,592 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uuidd', 'uid': 107, 'gid': 113, 'gecos': '', 'dir': '/run/uuidd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uuidd', 'passwd': 'x', 'gid': 113}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:20,959 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tcpdump', 'uid': 108, 'gid': 114, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'tcpdump', 'passwd': 'x', 'gid': 114}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:21,376 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sshd', 'uid': 109, 'gid': 65534, 'gecos': '', 'dir': '/run/sshd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:21,776 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'pollinate', 'uid': 110, 'gid': 1, 'gecos': '', 'dir': '/var/cache/pollinate', 'shell': '/bin/false', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:22,173 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'landscape', 'uid': 111, 'gid': 116, 'gecos': '', 'dir': '/var/lib/landscape', 'shell': '/usr/sbin/nologin', 'group': {'name': 'landscape', 'passwd': 'x', 'gid': 116}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:22,557 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'fwupd-refresh', 'uid': 112, 'gid': 117, 'gecos': 'fwupd-refresh user,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'fwupd-refresh', 'passwd': 'x', 'gid': 117}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:22,940 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:23,347 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:23,735 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:24,153 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dnsmasq', 'uid': 113, 'gid': 65534, 'gecos': 'dnsmasq,,,', 'dir': '/var/lib/misc', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:24,542 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxc-dnsmasq', 'uid': 114, 'gid': 121, 'gecos': 'LXC dnsmasq', 'dir': '/var/lib/lxc', 'shell': '/bin/false', 'group': {'name': 'lxc-dnsmasq', 'passwd': 'x', 'gid': 121}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:24,920 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': '_chrony', 'uid': 115, 'gid': 122, 'gecos': 'Chrony daemon,,,', 'dir': '/var/lib/chrony', 'shell': '/usr/sbin/nologin', 'group': {'name': '_chrony', 'passwd': 'x', 'gid': 122}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:25,314 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'postfix', 'uid': 116, 'gid': 124, 'gecos': '', 'dir': '/var/spool/postfix', 'shell': '/usr/sbin/nologin', 'group': {'name': 'postfix', 'passwd': 'x', 'gid': 124}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 21:42:25,381 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for users with an assigned home directory that does not exist] ***************
2025-03-29 21:42:25,473 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "These users have a home directory assigned, but the directory does not exist:\nlp (/var/spool/lpd does not exist)\nnews (/var/spool/news does not exist)\nuucp (/var/spool/uucp does not exist)\nwww-data (/var/www does not exist)\nlist (/var/list does not exist)\nirc (/run/ircd does not exist)\ngnats (/var/lib/gnats does not exist)\nnobody (/nonexistent does not exist)\nmessagebus (/nonexistent does not exist)\nsyslog (/home/syslog does not exist)\n_apt (/nonexistent does not exist)\ntcpdump (/nonexistent does not exist)\n"
}
2025-03-29 21:42:25,495 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Use pwquality when passwords are changed or created] ***************************************
2025-03-29 21:42:25,527 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:25,549 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Verify that AIDE configuration directory exists] *******************************************
2025-03-29 21:42:25,966 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide/aide.conf.d)
2025-03-29 21:42:26,338 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide.conf)
2025-03-29 21:42:26,364 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Exclude certain directories from AIDE] *****************************************************
2025-03-29 21:42:27,248 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:27,266 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (Ubuntu)] ***********************************
2025-03-29 21:42:27,682 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:27,707 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (SUSE)] *************************************
2025-03-29 21:42:27,740 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:27,761 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if AIDE database is already in place] *****************************************
2025-03-29 21:42:28,143 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:28,161 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Initialize AIDE (this will take a few minutes)] ********************************************
2025-03-29 21:42:28,211 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:28,234 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Move AIDE database into place] *************************************************************
2025-03-29 21:42:28,292 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:28,325 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Create AIDE cron job] **********************************************************************
2025-03-29 21:42:28,371 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:28,390 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Verify that auditd.conf exists] ************************************************************
2025-03-29 21:42:28,818 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:28,840 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Verify that audisp-remote.conf exists] *****************************************************
2025-03-29 21:42:29,236 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:29,255 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72083 - The operating system must off-load audit records onto a different system or media from the system being audited] ***
2025-03-29 21:42:29,297 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:29,317 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72085 - The operating system must encrypt the transfer of audit records off-loaded onto a different system or media from the system being audited] ***
2025-03-29 21:42:29,357 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:29,461 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Get valid system architectures for audit rules] ********************************************
2025-03-29 21:42:29,514 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:29,534 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove system default audit.rules file] ****************************************************
2025-03-29 21:42:29,931 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:29,949 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove old RHEL 6 audit rules file] ********************************************************
2025-03-29 21:42:30,355 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:30,379 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Deploy rules for auditd based on STIG requirements] ****************************************
2025-03-29 21:42:31,445 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:31,464 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Adjust auditd/audispd configurations] ******************************************************
2025-03-29 21:42:31,542 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'disk_full_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-29 21:42:31,557 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'network_failure_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-29 21:42:31,565 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left', 'value': '9907', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 21:42:31,575 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left_action', 'value': 'email', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 21:42:31,584 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'action_mail_acct', 'value': 'root', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 21:42:31,587 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:31,608 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure auditd is running and enabled at boot time] *****************************************
2025-03-29 21:42:32,345 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:32,370 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set pam_faildelay configuration on Ubuntu] *************************************************
2025-03-29 21:42:32,792 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:32,813 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Debian/Ubuntu)] ************
2025-03-29 21:42:33,240 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:33,259 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Red Hat)] ******************
2025-03-29 21:42:33,304 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-auth']) 
2025-03-29 21:42:33,316 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-password']) 
2025-03-29 21:42:33,329 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-auth']) 
2025-03-29 21:42:33,342 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-password']) 
2025-03-29 21:42:33,344 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:33,368 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (SUSE)] *********************
2025-03-29 21:42:33,412 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-auth) 
2025-03-29 21:42:33,423 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-password) 
2025-03-29 21:42:33,425 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:33,445 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Lock accounts after three failed login attempts a 15 minute period] ************************
2025-03-29 21:42:33,486 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:33,509 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for 'nopasswd' in sudoers files] *****************************************************
2025-03-29 21:42:33,904 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:33,928 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71947 - Users must provide a password for privilege escalation.] *************************
2025-03-29 21:42:33,988 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The 'NOPASSWD' directive was found in the sudoers configuration files. Remove the directive to ensure that all users must provide a password to run commands as the root user.\n"
}
2025-03-29 21:42:34,015 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for '!authenticate' in sudoers files] ************************************************
2025-03-29 21:42:34,419 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:34,438 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71949 - Users must re-authenticate for privilege escalation.] ****************************
2025-03-29 21:42:34,481 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:34,507 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if sssd.conf exists] *****************************************************************
2025-03-29 21:42:34,888 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:34,907 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if GRUB2 custom file exists] *********************************************************
2025-03-29 21:42:35,325 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:35,346 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Define password options for grub] **********************************************************
2025-03-29 21:42:35,385 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:35,411 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set CLASS for grub file] *******************************************************************
2025-03-29 21:42:35,442 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:35,462 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72217 - The operating system must limit the number of concurrent sessions to 10 for all accounts and/or account types.] ***
2025-03-29 21:42:35,510 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:35,530 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for pam_lastlog in PAM configuration] ************************************************
2025-03-29 21:42:35,935 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:35,957 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72275 - Display date/time of last logon after logon] *************************************
2025-03-29 21:42:35,988 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,012 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure .shosts find has finished] **********************************************************
2025-03-29 21:42:36,052 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,079 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove .shosts or shosts.equiv files] ******************************************************
2025-03-29 21:42:36,123 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,146 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Get packages with incorrect file permissions or ownership] ***********************
2025-03-29 21:42:36,182 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,201 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Reset file permissions/ownership to vendor values] *******************************
2025-03-29 21:42:36,241 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,259 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid owner] ****************************************
2025-03-29 21:42:36,290 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,314 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72007 - All files and directories must have a valid owner.] ******************************
2025-03-29 21:42:36,359 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,378 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid group owner] **********************************
2025-03-29 21:42:36,406 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,425 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72009 - All files and directories must have a valid group owner.] ************************
2025-03-29 21:42:36,470 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,499 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set proper owner, group owner, and permissions on home directories] ************************
2025-03-29 21:42:36,567 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:36,577 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:36,591 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 21:42:36,594 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,616 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Find all world-writable directories] *******************************************************
2025-03-29 21:42:36,647 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,670 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72047 - All world-writable directories must be group-owned by root, sys, bin, or an application group.] ***
2025-03-29 21:42:36,714 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:36,733 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/cron.allow exists] ***********************************************************
2025-03-29 21:42:37,138 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:37,249 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set owner/group owner on /etc/cron.allow] **************************************************
2025-03-29 21:42:37,295 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:37,321 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if gdm is installed and configured] **************************************************
2025-03-29 21:42:37,725 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:37,745 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71953 - The operating system must not allow an unattended or automatic logon to the system via a graphical user interface] ***
2025-03-29 21:42:37,776 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:37,797 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71955 - The operating system must not allow guest logon to the system.] ******************
2025-03-29 21:42:37,826 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:37,845 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for dconf profiles] ******************************************************************
2025-03-29 21:42:38,243 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:38,262 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Create a user profile in dconf] ************************************************************
2025-03-29 21:42:38,292 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:38,318 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Create dconf directories] ******************************************************************
2025-03-29 21:42:38,352 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/) 
2025-03-29 21:42:38,358 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/locks) 
2025-03-29 21:42:38,364 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/) 
2025-03-29 21:42:38,367 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:38,387 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Configure graphical session locking] *******************************************************
2025-03-29 21:42:38,414 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:38,434 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users from changing graphical session locking configurations] **********************
2025-03-29 21:42:38,463 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:38,488 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM profile for displaying a login banner] ****************************************
2025-03-29 21:42:38,519 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:38,545 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM keyfile for machine-wide settings] ********************************************
2025-03-29 21:42:38,585 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/01-banner-message) 
2025-03-29 21:42:38,589 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/01-banner-message) 
2025-03-29 21:42:38,591 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:38,613 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71983 - USB mass storage must be disabled.] **********************************************
2025-03-29 21:42:38,986 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:39,013 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set sysctl configurations] *****************************************************************
2025-03-29 21:42:39,442 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 21:42:39,817 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 21:42:40,199 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.icmp_echo_ignore_broadcasts', 'value': 1, 'enabled': True})
2025-03-29 21:42:40,588 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.send_redirects', 'value': 0, 'enabled': True})
2025-03-29 21:42:40,963 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.send_redirects', 'value': 0, 'enabled': True})
2025-03-29 21:42:40,971 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv4.ip_forward', 'value': 0, 'enabled': False}) 
2025-03-29 21:42:41,371 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv6.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 21:42:41,770 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_redirects', 'value': 0, 'enabled': True})
2025-03-29 21:42:42,174 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'kernel.randomize_va_space', 'value': 2, 'enabled': True})
2025-03-29 21:42:42,182 p=27795 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv6.conf.all.disable_ipv6', 'value': 1, 'enabled': False}) 
2025-03-29 21:42:42,211 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check kdump service] ***********************************************************************
2025-03-29 21:42:42,625 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:42,646 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72057 - Kernel core dumps must be disabled unless needed.] *******************************
2025-03-29 21:42:42,676 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:42,702 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if FIPS is enabled] ******************************************************************
2025-03-29 21:42:42,734 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:42,756 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Print a warning if FIPS isn't enabled] *****************************************************
2025-03-29 21:42:42,790 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:42,809 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled] ******
2025-03-29 21:42:43,679 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:43,703 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check apparmor_status output] **************************************************************
2025-03-29 21:42:44,164 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:44,187 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if apparmor is running] **************************************************************
2025-03-29 21:42:44,608 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:44,628 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is enabled at boot time] ***************************************************
2025-03-29 21:42:45,361 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:45,385 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is running] ****************************************************************
2025-03-29 21:42:46,124 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:46,145 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure SELinux is in enforcing mode on the next reboot] ************************************
2025-03-29 21:42:46,177 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:46,200 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Relabel files on next boot if SELinux mode changed] ****************************************
2025-03-29 21:42:46,235 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:46,259 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for unlabeled device files] **********************************************************
2025-03-29 21:42:46,294 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:46,314 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72039 - All system device files must be correctly labeled to prevent unauthorized modification.] ***
2025-03-29 21:42:46,348 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:46,367 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check autofs service] **********************************************************************
2025-03-29 21:42:46,777 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:46,801 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71985 - File system automounter must be disabled unless required.] ***********************
2025-03-29 21:42:46,831 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:46,854 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***************************
2025-03-29 21:42:47,546 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:47,564 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***************************
2025-03-29 21:42:48,667 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:48,692 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for /home on mounted filesystem] *****************************************************
2025-03-29 21:42:48,761 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /home is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:42:48,782 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var on mounted filesystem] ******************************************************
2025-03-29 21:42:48,846 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:42:48,872 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var/log/audit on mounted filesystem] ********************************************
2025-03-29 21:42:48,944 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var/log/audit is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:42:48,968 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for /tmp on mounted filesystem] ******************************************************
2025-03-29 21:42:49,138 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /tmp is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 21:42:49,240 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if syslog output is being sent to another server] ************************************
2025-03-29 21:42:49,626 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:49,648 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72209 - The system must send rsyslog output to a log aggregation server.] ****************
2025-03-29 21:42:49,735 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Output from syslog must be sent to another server."
}
2025-03-29 21:42:49,768 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV is installed] **************************************************************
2025-03-29 21:42:50,162 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:50,185 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove 'Example' line from ClamAV configuration files] *************************************
2025-03-29 21:42:50,225 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/freshclam.conf) 
2025-03-29 21:42:50,228 p=27795 u=vagrant n=ansible | skipping: [controller] => (item=/etc/clamd.d/scan.conf) 
2025-03-29 21:42:50,230 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:50,249 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Set ClamAV server type as socket] **********************************************************
2025-03-29 21:42:50,278 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:50,297 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV socket directory exists] *****************************************************
2025-03-29 21:42:50,326 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:50,349 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Allow automatic freshclam updates] *********************************************************
2025-03-29 21:42:50,379 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:50,399 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV update process is already running] *****************************************
2025-03-29 21:42:50,789 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:50,810 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Update ClamAV database] ********************************************************************
2025-03-29 21:42:50,840 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:50,873 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV is running] ******************************************************************
2025-03-29 21:42:50,905 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:50,926 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove old config block for V-72223 from openstack-ansible-security] ***********************
2025-03-29 21:42:51,315 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:51,337 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72223 - Set 10 minute timeout on communication sessions] *********************************
2025-03-29 21:42:51,727 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:51,753 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Start and enable chrony] *******************************************************************
2025-03-29 21:42:52,463 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:52,482 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check if chrony configuration file exists] *************************************************
2025-03-29 21:42:52,907 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:52,929 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72269 - Synchronize system clock (configuration file)] ***********************************
2025-03-29 21:42:53,852 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:53,877 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check firewalld status] ********************************************************************
2025-03-29 21:42:54,284 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:54,306 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure firewalld is running and enabled] ***************************************************
2025-03-29 21:42:54,335 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:54,355 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Limit new TCP connections to 25/minute and allow bursting to 100] **************************
2025-03-29 21:42:54,388 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:54,410 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Count nameserver entries in /etc/resolv.conf] **********************************************
2025-03-29 21:42:55,809 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:55,829 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72281 - For systems using DNS resolution, at least two name servers must be configured.] ***
2025-03-29 21:42:55,896 p=27795 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Two or more nameservers must be configured in /etc/resolv.conf.\nNameservers found: 1\n"
}
2025-03-29 21:42:55,915 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for interfaces in promiscuous mode] **************************************************
2025-03-29 21:42:56,315 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:56,340 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72295 - Network interfaces must not be in promiscuous mode.] *****************************
2025-03-29 21:42:56,369 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:56,388 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for postfix configuration file] ******************************************************
2025-03-29 21:42:56,815 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:56,836 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72297 - Prevent unrestricted mail relaying] **********************************************
2025-03-29 21:42:57,243 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:57,267 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check for TFTP server configuration file] **************************************************
2025-03-29 21:42:57,635 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:57,654 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check TFTP configuration mode] *************************************************************
2025-03-29 21:42:57,682 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:57,702 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72305 - TFTP must be configured to operate in secure mode] *******************************
2025-03-29 21:42:57,732 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:57,757 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if snmpd config contains public/private] **************************************
2025-03-29 21:42:59,163 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:42:59,183 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : V-72313 - Change SNMP community strings from default.] *************************************
2025-03-29 21:42:59,216 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:42:59,240 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Copy login warning banner] *****************************************************************
2025-03-29 21:43:00,092 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:00,118 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Drop options from SSH config that we manage] ***********************************************
2025-03-29 21:43:00,562 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitEmptyPasswords', 'value': 'no', 'enabled': True, 'stig_id': 'V-71939 / RHEL-07-010440'})
2025-03-29 21:43:00,931 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitUserEnvironment', 'value': 'no', 'enabled': True, 'stig_id': 'V-71957'})
2025-03-29 21:43:01,312 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'HostbasedAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-71959'})
2025-03-29 21:43:01,708 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Ciphers', 'value': 'aes128-ctr,aes192-ctr,aes256-ctr', 'enabled': True, 'stig_id': 'V-72221'})
2025-03-29 21:43:02,085 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveInterval', 'value': 600, 'enabled': True, 'stig_id': 'V-72237'})
2025-03-29 21:43:02,451 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveCountMax', 'value': 0, 'enabled': True, 'stig_id': 'V-72241'})
2025-03-29 21:43:02,823 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintLastLog', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72245'})
2025-03-29 21:43:03,186 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitRootLogin', 'value': 'without-password', 'enabled': True, 'stig_id': 'V-72247'})
2025-03-29 21:43:03,562 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreUserKnownHosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72249 / V-72239'})
2025-03-29 21:43:03,948 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreRhosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72243'})
2025-03-29 21:43:04,323 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'X11Forwarding', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72303'})
2025-03-29 21:43:04,682 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Protocol', 'value': 2, 'enabled': True, 'stig_id': 'V-72251'})
2025-03-29 21:43:05,049 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'MACs', 'value': 'hmac-sha2-256,hmac-sha2-512', 'enabled': True, 'stig_id': 'V-72253'})
2025-03-29 21:43:05,421 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Compression', 'value': 'delayed', 'enabled': True, 'stig_id': 'V-72267'})
2025-03-29 21:43:05,795 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'KerberosAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-72261'})
2025-03-29 21:43:06,155 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'GSSAPIAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-204598'})
2025-03-29 21:43:06,520 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'StrictModes', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72263'})
2025-03-29 21:43:06,890 p=27795 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintMotd', 'value': 'yes', 'enabled': True, 'stig_id': 'V-71861'})
2025-03-29 21:43:06,923 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Adjust ssh server configuration based on STIG requirements] ********************************
2025-03-29 21:43:07,356 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:07,376 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Ensure sshd is enabled at boot time] *******************************************************
2025-03-29 21:43:08,207 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:08,317 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing public ssh host keys] ***************************************************
2025-03-29 21:43:08,715 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:08,736 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Public host key files must have mode 0644 or less] *****************************************
2025-03-29 21:43:09,149 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key.pub)
2025-03-29 21:43:09,515 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key.pub)
2025-03-29 21:43:09,891 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key.pub)
2025-03-29 21:43:09,911 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing private ssh host keys] **************************************************
2025-03-29 21:43:10,318 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:10,342 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Private host key files must have mode 0600 or less] ****************************************
2025-03-29 21:43:10,749 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key)
2025-03-29 21:43:11,130 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key)
2025-03-29 21:43:11,495 p=27795 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key)
2025-03-29 21:43:11,518 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Manage motd in pam.d] **********************************************************************
2025-03-29 21:43:12,103 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:12,123 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Remove the temporary directory] ************************************************************
2025-03-29 21:43:12,531 p=27795 u=vagrant n=ansible | ok: [controller]
2025-03-29 21:43:12,553 p=27795 u=vagrant n=ansible | TASK [ansible-hardening : Including contrib tasks] *******************************************************************
2025-03-29 21:43:12,583 p=27795 u=vagrant n=ansible | skipping: [controller]
2025-03-29 21:43:12,673 p=27795 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 21:43:12,718 p=27795 u=vagrant n=ansible | PLAY RECAP ***********************************************************************************************************
2025-03-29 21:43:12,719 p=27795 u=vagrant n=ansible | controller                 : ok=173  changed=3    unreachable=0    failed=0    skipped=120  rescued=0    ignored=0   
2025-03-29 21:43:12,719 p=27795 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=96   changed=6    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 21:43:12,719 p=27795 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 21:43:12,719 p=27795 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 21:43:12,719 p=27795 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 21:43:12,719 p=27795 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-29 22:00:11,997 p=31960 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version and can 
apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use module_defaults 
instead. This feature will be removed from ansible-core in version 2.18. Deprecation warnings can be disabled by 
setting deprecation_warnings=False in ansible.cfg.
2025-03-29 22:00:12,733 p=31960 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 22:00:14,460 p=31960 u=vagrant n=ansible | PLAY [Placeholder hook] **********************************************************************************************
2025-03-29 22:00:14,536 p=31960 u=vagrant n=ansible | PLAY [Gather unbound facts] ******************************************************************************************
2025-03-29 22:00:14,537 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,542 p=31960 u=vagrant n=ansible | PLAY [Install unbound DNS resolvers] *********************************************************************************
2025-03-29 22:00:14,542 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,551 p=31960 u=vagrant n=ansible | PLAY [Install unbound DNS resolver client configurations] ************************************************************
2025-03-29 22:00:14,611 p=31960 u=vagrant n=ansible | TASK [Including unbound-clients role] ********************************************************************************
2025-03-29 22:00:14,663 p=31960 u=vagrant n=ansible | skipping: [controller]
2025-03-29 22:00:14,792 p=31960 u=vagrant n=ansible | PLAY [Gather haproxy facts] ******************************************************************************************
2025-03-29 22:00:14,792 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,798 p=31960 u=vagrant n=ansible | PLAY [HAProxy base config] *******************************************************************************************
2025-03-29 22:00:14,799 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,805 p=31960 u=vagrant n=ansible | PLAY [Gather repo facts] *********************************************************************************************
2025-03-29 22:00:14,805 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,813 p=31960 u=vagrant n=ansible | PLAY [Setup repo servers] ********************************************************************************************
2025-03-29 22:00:14,813 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,815 p=31960 u=vagrant n=ansible | PLAY [Setup repo server gluster cluster] *****************************************************************************
2025-03-29 22:00:14,815 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,821 p=31960 u=vagrant n=ansible | PLAY [haproxy] *******************************************************************************************************
2025-03-29 22:00:14,821 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,827 p=31960 u=vagrant n=ansible | PLAY [Setup repo servers] ********************************************************************************************
2025-03-29 22:00:14,827 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:14,836 p=31960 u=vagrant n=ansible | PLAY [Gather memcached facts] ****************************************************************************************
2025-03-29 22:00:14,888 p=31960 u=vagrant n=ansible | PLAY [Install memcached] *********************************************************************************************
2025-03-29 22:00:14,909 p=31960 u=vagrant n=ansible | TASK [Including container-setup role] ********************************************************************************
2025-03-29 22:00:15,006 p=31960 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-memcached-container-71b4149f
2025-03-29 22:00:15,014 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ************************************
2025-03-29 22:00:15,072 p=31960 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:00:15,081 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *******************************************
2025-03-29 22:00:16,086 p=31960 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 22:00:16,098 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] *********************************
2025-03-29 22:00:16,715 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 22:00:16,726 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] **********************************************************
2025-03-29 22:00:16,754 p=31960 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:00:16,762 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ***********************************************
2025-03-29 22:00:17,207 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 22:00:17,219 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] *****************************************************
2025-03-29 22:00:17,835 p=31960 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 22:00:17,843 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] *****************************************************
2025-03-29 22:00:19,056 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 22:00:19,065 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ***********************************************************
2025-03-29 22:00:19,993 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 22:00:20,007 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] **********************************
2025-03-29 22:00:20,416 p=31960 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:00:20,425 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *******************************************
2025-03-29 22:00:24,321 p=31960 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:00:24,335 p=31960 u=vagrant n=ansible | TASK [Including unbound-clients role] ********************************************************************************
2025-03-29 22:00:24,387 p=31960 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:00:24,403 p=31960 u=vagrant n=ansible | TASK [memcached_server : Gather variables for each operating system] *************************************************
2025-03-29 22:00:24,482 p=31960 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:00:24,489 p=31960 u=vagrant n=ansible | TASK [memcached_server : Install distro packages] ********************************************************************
2025-03-29 22:00:34,464 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:34,475 p=31960 u=vagrant n=ansible | TASK [memcached_server : Apply memcached config] *********************************************************************
2025-03-29 22:00:36,044 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:36,054 p=31960 u=vagrant n=ansible | TASK [memcached_server : Override systemd service file] **************************************************************
2025-03-29 22:00:36,094 p=31960 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:00:36,111 p=31960 u=vagrant n=ansible | TASK [memcached_server : Create memcached systemd service config dir] ************************************************
2025-03-29 22:00:36,561 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:36,570 p=31960 u=vagrant n=ansible | TASK [memcached_server : Apply systemd options] **********************************************************************
2025-03-29 22:00:37,747 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.limits.conf.j2', 'dest': 'limits.conf'})
2025-03-29 22:00:38,848 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.restart.conf.j2', 'dest': 'restart.conf'})
2025-03-29 22:00:39,936 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.slice.conf.j2', 'dest': 'slice.conf'})
2025-03-29 22:00:41,058 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.without-privatedevices.conf.j2', 'dest': 'without-privatedevices.conf'})
2025-03-29 22:00:41,071 p=31960 u=vagrant n=ansible | TASK [memcached_server : Configure soft file limits] *****************************************************************
2025-03-29 22:00:41,505 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:41,515 p=31960 u=vagrant n=ansible | TASK [memcached_server : Configure hard file limits] *****************************************************************
2025-03-29 22:00:41,950 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:41,959 p=31960 u=vagrant n=ansible | TASK [memcached_server : Flush handlers] *****************************************************************************
2025-03-29 22:00:41,972 p=31960 u=vagrant n=ansible | RUNNING HANDLER [memcached_server : Restart memcached] ***************************************************************
2025-03-29 22:00:44,048 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:44,062 p=31960 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] ****************************************************
2025-03-29 22:00:45,301 p=31960 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 22:00:45,342 p=31960 u=vagrant n=ansible | PLAY [Gather galera facts] *******************************************************************************************
2025-03-29 22:00:45,368 p=31960 u=vagrant n=ansible | TASK [Gather additional facts] ***************************************************************************************
2025-03-29 22:00:45,419 p=31960 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller-galera-container-f800b10b
2025-03-29 22:00:45,424 p=31960 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] ****************************************************
2025-03-29 22:00:47,182 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:00:47,221 p=31960 u=vagrant n=ansible | PLAY [haproxy] *******************************************************************************************************
2025-03-29 22:00:47,221 p=31960 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:00:47,232 p=31960 u=vagrant n=ansible | PLAY [Install galera server] *****************************************************************************************
2025-03-29 22:00:47,247 p=31960 u=vagrant n=ansible | TASK [Including container-setup role] ********************************************************************************
2025-03-29 22:00:47,347 p=31960 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-galera-container-f800b10b
2025-03-29 22:00:47,355 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ************************************
2025-03-29 22:00:47,409 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:00:47,419 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *******************************************
2025-03-29 22:00:47,875 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 22:00:48,265 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 22:00:48,277 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] *********************************
2025-03-29 22:00:48,739 p=31960 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 22:00:49,110 p=31960 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 22:00:49,124 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] **********************************************************
2025-03-29 22:00:49,156 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:00:49,168 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ***********************************************
2025-03-29 22:00:49,616 p=31960 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.order=10)
2025-03-29 22:00:49,627 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] *****************************************************
2025-03-29 22:00:50,055 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 22:00:50,064 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] *****************************************************
2025-03-29 22:00:51,291 p=31960 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 22:00:51,300 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ***********************************************************
2025-03-29 22:00:52,217 p=31960 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 22:00:52,226 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] **********************************
2025-03-29 22:00:54,521 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:00:54,529 p=31960 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *******************************************
2025-03-29 22:00:58,336 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:00:58,356 p=31960 u=vagrant n=ansible | TASK [Including unbound-clients role] ********************************************************************************
2025-03-29 22:00:58,420 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:00:58,433 p=31960 u=vagrant n=ansible | TASK [Disabling haproxy backends] ************************************************************************************
2025-03-29 22:00:58,474 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:00:58,500 p=31960 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] *****************************************************************
2025-03-29 22:00:59,807 p=31960 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:00:59,819 p=31960 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] **************************************************************
2025-03-29 22:00:59,863 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:00:59,877 p=31960 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] ****************************************************
2025-03-29 22:00:59,954 p=31960 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:00:59,961 p=31960 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] ******************************************************************
2025-03-29 22:00:59,991 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:01:00,002 p=31960 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] *******************************************************************
2025-03-29 22:01:00,027 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:01:00,038 p=31960 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] ******************************************************************
2025-03-29 22:01:00,105 p=31960 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_main.yml for controller-galera-container-f800b10b
2025-03-29 22:01:00,118 p=31960 u=vagrant n=ansible | TASK [galera_server : Fail when the host is not in galera_cluster_members] *******************************************
2025-03-29 22:01:00,155 p=31960 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:01:00,181 p=31960 u=vagrant n=ansible | TASK [galera_server : Fail if the galera root password is not provided] **********************************************
2025-03-29 22:01:00,297 p=31960 u=vagrant n=ansible | fatal: [controller-galera-container-f800b10b]: FAILED! => {"changed": false, "msg": "Please set the galera_root_password variable prior to applying the\ngalera role.\n"}
2025-03-29 22:01:00,324 p=31960 u=vagrant n=ansible | PLAY RECAP ***********************************************************************************************************
2025-03-29 22:01:00,324 p=31960 u=vagrant n=ansible | controller                 : ok=0    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-03-29 22:01:00,325 p=31960 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=15   changed=5    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2025-03-29 22:01:00,325 p=31960 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=19   changed=12   unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2025-03-29 22:07:02,847 p=32415 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version
 and can apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, 
use module_defaults instead. This feature will be removed from ansible-core in version 2.18. Deprecation 
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
2025-03-29 22:07:03,527 p=32415 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 22:07:05,158 p=32415 u=vagrant n=ansible | PLAY [Placeholder hook] ***********************************************************************************
2025-03-29 22:07:05,227 p=32415 u=vagrant n=ansible | PLAY [Gather unbound facts] *******************************************************************************
2025-03-29 22:07:05,227 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,232 p=32415 u=vagrant n=ansible | PLAY [Install unbound DNS resolvers] **********************************************************************
2025-03-29 22:07:05,232 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,241 p=32415 u=vagrant n=ansible | PLAY [Install unbound DNS resolver client configurations] *************************************************
2025-03-29 22:07:05,293 p=32415 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:07:05,346 p=32415 u=vagrant n=ansible | skipping: [controller]
2025-03-29 22:07:05,485 p=32415 u=vagrant n=ansible | PLAY [Gather haproxy facts] *******************************************************************************
2025-03-29 22:07:05,486 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,491 p=32415 u=vagrant n=ansible | PLAY [HAProxy base config] ********************************************************************************
2025-03-29 22:07:05,491 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,497 p=32415 u=vagrant n=ansible | PLAY [Gather repo facts] **********************************************************************************
2025-03-29 22:07:05,498 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,505 p=32415 u=vagrant n=ansible | PLAY [Setup repo servers] *********************************************************************************
2025-03-29 22:07:05,505 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,507 p=32415 u=vagrant n=ansible | PLAY [Setup repo server gluster cluster] ******************************************************************
2025-03-29 22:07:05,507 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,512 p=32415 u=vagrant n=ansible | PLAY [haproxy] ********************************************************************************************
2025-03-29 22:07:05,512 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,519 p=32415 u=vagrant n=ansible | PLAY [Setup repo servers] *********************************************************************************
2025-03-29 22:07:05,519 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:05,527 p=32415 u=vagrant n=ansible | PLAY [Gather memcached facts] *****************************************************************************
2025-03-29 22:07:05,581 p=32415 u=vagrant n=ansible | PLAY [Install memcached] **********************************************************************************
2025-03-29 22:07:05,600 p=32415 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:07:05,695 p=32415 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-memcached-container-71b4149f
2025-03-29 22:07:05,701 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:07:05,761 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:05,769 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:07:06,753 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 22:07:06,762 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:07:07,313 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 22:07:07,325 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:07:07,355 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:07,365 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:07:07,789 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 22:07:07,798 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:07:07,855 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:07,864 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:07:07,920 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:07,930 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:07:07,987 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:07,997 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:07:08,352 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:08,362 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:07:08,399 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:08,411 p=32415 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:07:08,467 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:08,486 p=32415 u=vagrant n=ansible | TASK [memcached_server : Gather variables for each operating system] **************************************
2025-03-29 22:07:08,562 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:08,571 p=32415 u=vagrant n=ansible | TASK [memcached_server : Install distro packages] *********************************************************
2025-03-29 22:07:10,688 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:10,702 p=32415 u=vagrant n=ansible | TASK [memcached_server : Apply memcached config] **********************************************************
2025-03-29 22:07:11,855 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:11,865 p=32415 u=vagrant n=ansible | TASK [memcached_server : Override systemd service file] ***************************************************
2025-03-29 22:07:11,906 p=32415 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:07:11,918 p=32415 u=vagrant n=ansible | TASK [memcached_server : Create memcached systemd service config dir] *************************************
2025-03-29 22:07:12,375 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:12,382 p=32415 u=vagrant n=ansible | TASK [memcached_server : Apply systemd options] ***********************************************************
2025-03-29 22:07:13,357 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.limits.conf.j2', 'dest': 'limits.conf'})
2025-03-29 22:07:14,308 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.restart.conf.j2', 'dest': 'restart.conf'})
2025-03-29 22:07:15,248 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.slice.conf.j2', 'dest': 'slice.conf'})
2025-03-29 22:07:16,200 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.without-privatedevices.conf.j2', 'dest': 'without-privatedevices.conf'})
2025-03-29 22:07:16,213 p=32415 u=vagrant n=ansible | TASK [memcached_server : Configure soft file limits] ******************************************************
2025-03-29 22:07:16,624 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:16,633 p=32415 u=vagrant n=ansible | TASK [memcached_server : Configure hard file limits] ******************************************************
2025-03-29 22:07:17,052 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:17,060 p=32415 u=vagrant n=ansible | TASK [memcached_server : Flush handlers] ******************************************************************
2025-03-29 22:07:17,076 p=32415 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] *****************************************
2025-03-29 22:07:18,125 p=32415 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:07:18,162 p=32415 u=vagrant n=ansible | PLAY [Gather galera facts] ********************************************************************************
2025-03-29 22:07:18,186 p=32415 u=vagrant n=ansible | TASK [Gather additional facts] ****************************************************************************
2025-03-29 22:07:18,235 p=32415 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller-galera-container-f800b10b
2025-03-29 22:07:18,246 p=32415 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] *****************************************
2025-03-29 22:07:19,822 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:19,857 p=32415 u=vagrant n=ansible | PLAY [haproxy] ********************************************************************************************
2025-03-29 22:07:19,857 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:07:19,869 p=32415 u=vagrant n=ansible | PLAY [Install galera server] ******************************************************************************
2025-03-29 22:07:19,885 p=32415 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:07:19,974 p=32415 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-galera-container-f800b10b
2025-03-29 22:07:19,983 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:07:20,039 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:20,047 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:07:20,440 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 22:07:20,849 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 22:07:20,861 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:07:21,263 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 22:07:21,598 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 22:07:21,611 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:07:21,639 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:21,650 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:07:22,058 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.order=10)
2025-03-29 22:07:22,069 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:07:22,120 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,131 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:07:22,188 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,202 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:07:22,273 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,281 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:07:22,408 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,415 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:07:22,457 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,472 p=32415 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:07:22,519 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,527 p=32415 u=vagrant n=ansible | TASK [Disabling haproxy backends] *************************************************************************
2025-03-29 22:07:22,559 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:22,576 p=32415 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ******************************************************
2025-03-29 22:07:23,657 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:23,666 p=32415 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ***************************************************
2025-03-29 22:07:23,723 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:23,748 p=32415 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] *****************************************
2025-03-29 22:07:23,870 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:23,886 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] *******************************************************
2025-03-29 22:07:23,923 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:23,934 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] ********************************************************
2025-03-29 22:07:23,968 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:23,981 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] *******************************************************
2025-03-29 22:07:24,069 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_main.yml for controller-galera-container-f800b10b
2025-03-29 22:07:24,080 p=32415 u=vagrant n=ansible | TASK [galera_server : Fail when the host is not in galera_cluster_members] ********************************
2025-03-29 22:07:24,123 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:24,135 p=32415 u=vagrant n=ansible | TASK [galera_server : Fail if the galera root password is not provided] ***********************************
2025-03-29 22:07:24,181 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:24,192 p=32415 u=vagrant n=ansible | TASK [galera_server : Initialize local facts] *************************************************************
2025-03-29 22:07:25,025 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:07:25,037 p=32415 u=vagrant n=ansible | TASK [galera_server : Refresh local facts] ****************************************************************
2025-03-29 22:07:25,727 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:25,736 p=32415 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ***********************************************
2025-03-29 22:07:25,804 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:25,815 p=32415 u=vagrant n=ansible | TASK [galera_server : Cluster state notice] ***************************************************************
2025-03-29 22:07:25,841 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:25,852 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_cluster_state] **********************************************
2025-03-29 22:07:25,882 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:25,892 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade] ****************************************************
2025-03-29 22:07:25,917 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:07:25,928 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_install] ****************************************************
2025-03-29 22:07:25,981 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_install.yml for controller-galera-container-f800b10b
2025-03-29 22:07:26,003 p=32415 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ***********************************************************
2025-03-29 22:07:26,075 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:26,087 p=32415 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ***************************************
2025-03-29 22:07:26,166 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-galera-container-f800b10b
2025-03-29 22:07:26,179 p=32415 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] **********************************************
2025-03-29 22:07:26,302 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 22:07:26,314 p=32415 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] *************************************************
2025-03-29 22:07:27,692 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:27,702 p=32415 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] *****************************
2025-03-29 22:07:28,138 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=MariaDB.list)
2025-03-29 22:07:28,149 p=32415 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] *****************************************
2025-03-29 22:07:30,148 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:07:30,157 p=32415 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] ************************************************************
2025-03-29 22:07:31,115 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:07:31,127 p=32415 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] *************************************
2025-03-29 22:07:39,855 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:07:39,865 p=32415 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] *********************************************************
2025-03-29 22:07:40,813 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:07:41,465 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:07:41,467 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:07:41,481 p=32415 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ******************************************
2025-03-29 22:08:08,912 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:08,922 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_encryption] *************************************************
2025-03-29 22:08:08,952 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:08,962 p=32415 u=vagrant n=ansible | TASK [galera_server : Record galera has been deployed] ****************************************************
2025-03-29 22:08:09,507 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:09,521 p=32415 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ***********************************************
2025-03-29 22:08:09,579 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:09,588 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_post_install] ***********************************************
2025-03-29 22:08:09,694 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_post_install.yml for controller-galera-container-f800b10b
2025-03-29 22:08:09,711 p=32415 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] **************************************************************
2025-03-29 22:08:10,215 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 22:08:10,657 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 22:08:10,668 p=32415 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] *****************************************************
2025-03-29 22:08:11,190 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 22:08:11,593 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 22:08:11,603 p=32415 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ***************************************************
2025-03-29 22:08:12,090 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/mariadb.service.d", "owner": "root", "group": "root"})
2025-03-29 22:08:12,108 p=32415 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] **********************************************************
2025-03-29 22:08:13,657 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadb.conf"})
2025-03-29 22:08:14,854 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadbcheck@.conf"})
2025-03-29 22:08:14,956 p=32415 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] ********************************************************
2025-03-29 22:08:15,832 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/mariadbcheck@.service", "config_overrides": {}, "config_type": "ini"})
2025-03-29 22:08:15,844 p=32415 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] *******************************************************
2025-03-29 22:08:17,214 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/mariadb.service.d/override.conf"})
2025-03-29 22:08:17,226 p=32415 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] **********************************************************
2025-03-29 22:08:17,312 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:17,323 p=32415 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] *********************************************************
2025-03-29 22:08:18,672 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"src": "systemd-socket.j2", "dest": "/etc/systemd/system/mariadbcheck.socket"})
2025-03-29 22:08:18,681 p=32415 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ****************************************************
2025-03-29 22:08:20,053 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:20,062 p=32415 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] *****************************************************
2025-03-29 22:08:20,171 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadb"})
2025-03-29 22:08:20,177 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadbcheck@"})
2025-03-29 22:08:20,203 p=32415 u=vagrant n=ansible | TASK [systemd_service : Load service mariadb] *************************************************************
2025-03-29 22:08:20,952 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"})
2025-03-29 22:08:20,976 p=32415 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadb] ***************************************************************
2025-03-29 22:08:21,035 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"}) 
2025-03-29 22:08:21,038 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:21,055 p=32415 u=vagrant n=ansible | TASK [systemd_service : Load service mariadbcheck@] *******************************************************
2025-03-29 22:08:21,103 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-29 22:08:21,106 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:21,132 p=32415 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadbcheck@] *********************************************************
2025-03-29 22:08:21,196 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-29 22:08:21,198 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:21,206 p=32415 u=vagrant n=ansible | TASK [systemd_service : Load socket] **********************************************************************
2025-03-29 22:08:22,189 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"name": "mariadbcheck.socket", "enabled": true, "state": "__omit_place_holder__98bf3937aa7b0cb06694447703286900b2d6bae1"})
2025-03-29 22:08:22,203 p=32415 u=vagrant n=ansible | TASK [galera_server : Create galera initial secure tool] **************************************************
2025-03-29 22:08:22,245 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:22,257 p=32415 u=vagrant n=ansible | TASK [galera_server : Run galera secure] ******************************************************************
2025-03-29 22:08:22,301 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:22,320 p=32415 u=vagrant n=ansible | TASK [galera_server : Create the local directories] *******************************************************
2025-03-29 22:08:22,809 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql', 'owner': 'mysql', 'mode': '02755'})
2025-03-29 22:08:23,224 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql/#tmp', 'owner': 'mysql', 'mode': '02755'})
2025-03-29 22:08:23,666 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/etc/mysql/conf.d'})
2025-03-29 22:08:23,680 p=32415 u=vagrant n=ansible | TASK [Create and install SSL certificates] ****************************************************************
2025-03-29 22:08:23,808 p=32415 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b
2025-03-29 22:08:23,839 p=32415 u=vagrant n=ansible | TASK [pki : Create Server certificates] *******************************************************************
2025-03-29 22:08:24,036 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-galera-container-f800b10b => (item={'name': 'galera_controller-galera-container-f800b10b', 'provider': 'ownca', 'cn': 'controller-galera-container-f800b10b', 'san': 'DNS:controller-galera-container-f800b10b,IP:192.168.56.254,IP:192.168.56.180', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-29 22:08:24,048 p=32415 u=vagrant n=ansible | TASK [pki : Generate certificate private key for galera_controller-galera-container-f800b10b] *************
2025-03-29 22:08:28,104 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:08:28,116 p=32415 u=vagrant n=ansible | TASK [pki : Create the CSR for galera_controller-galera-container-f800b10b] *******************************
2025-03-29 22:08:30,306 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:08:30,322 p=32415 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for galera_controller-galera-container-f800b10b] *********************
2025-03-29 22:08:32,936 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:08:32,950 p=32415 u=vagrant n=ansible | TASK [pki : Get certificate info for galera_controller-galera-container-f800b10b] *************************
2025-03-29 22:08:33,889 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:08:33,901 p=32415 u=vagrant n=ansible | TASK [pki : Save certificate info for galera_controller-galera-container-f800b10b] ************************
2025-03-29 22:08:34,633 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:08:34,646 p=32415 u=vagrant n=ansible | TASK [pki : Create certificate chain for galera_controller-galera-container-f800b10b] *********************
2025-03-29 22:08:35,366 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:08:35,386 p=32415 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] *********************************
2025-03-29 22:08:36,056 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/galera_controller-galera-container-f800b10b-chain.crt', 'dest': '/etc/ssl/certs/galera.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-29 22:08:36,360 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/galera_controller-galera-container-f800b10b.key.pem', 'dest': '/etc/mysql/ssl/galera.key', 'owner': 'mysql', 'group': 'root', 'mode': '0600'})
2025-03-29 22:08:36,676 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/ssl/certs/galera-ca.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-29 22:08:36,690 p=32415 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ***************************************************
2025-03-29 22:08:37,219 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/ssl/certs", "state": "directory", "mode": "0755"})
2025-03-29 22:08:37,665 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"path": "/etc/mysql/ssl", "state": "directory", "mode": "0755"})
2025-03-29 22:08:37,677 p=32415 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] *******************************************************
2025-03-29 22:08:39,057 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-29 22:08:40,383 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"dest": "/etc/mysql/ssl/galera.key", "owner": "mysql", "group": "root", "mode": "0600"})
2025-03-29 22:08:42,129 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera-ca.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-29 22:08:42,153 p=32415 u=vagrant n=ansible | TASK [galera_server : Remove existing mariadb configuration files] ****************************************
2025-03-29 22:08:42,186 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:42,194 p=32415 u=vagrant n=ansible | TASK [galera_server : Drop mariadb config(s)] *************************************************************
2025-03-29 22:08:43,452 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'src': 'my.cnf.j2', 'dest': '/etc/mysql/my.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-29 22:08:44,252 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'src': 'cluster.cnf.j2', 'dest': '/etc/mysql/conf.d/cluster.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-29 22:08:44,266 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'debian.cnf.j2', 'dest': '/etc/mysql/debian.cnf', 'config_overrides': {}, 'config_type': 'ini', 'condition': False}) 
2025-03-29 22:08:44,278 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'client.my.cnf.j2', 'dest': '/root/.my.cnf', 'config_overrides': {}, 'config_type': 'ini', 'mode': '0600', 'condition': False}) 
2025-03-29 22:08:44,302 p=32415 u=vagrant n=ansible | TASK [galera_server : Apply service defaults] *************************************************************
2025-03-29 22:08:45,639 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:45,648 p=32415 u=vagrant n=ansible | TASK [galera_server : Link mysql and mariadb config files] ************************************************
2025-03-29 22:08:46,144 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:46,154 p=32415 u=vagrant n=ansible | TASK [galera_server : Remove default mysql_safe_syslog] ***************************************************
2025-03-29 22:08:46,631 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:46,641 p=32415 u=vagrant n=ansible | TASK [galera_server : Create new cluster tool] ************************************************************
2025-03-29 22:08:48,021 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:48,032 p=32415 u=vagrant n=ansible | TASK [galera_server : Create clustercheck script] *********************************************************
2025-03-29 22:08:49,383 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:49,393 p=32415 u=vagrant n=ansible | TASK [galera_server : Flush handlers] *********************************************************************
2025-03-29 22:08:49,406 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Check node status] *******************************************************
2025-03-29 22:08:49,892 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:49,901 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Check if node is in the cluster] *****************************************
2025-03-29 22:08:50,373 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:50,383 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Set incoming addresses fact (primary)] ***********************************
2025-03-29 22:08:50,442 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:50,452 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Set node status fact] ****************************************************
2025-03-29 22:08:50,516 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:50,527 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Stop mysql] **************************************************************
2025-03-29 22:08:51,338 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:51,346 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Start new cluster] *******************************************************
2025-03-29 22:08:53,631 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:53,645 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Restart mysql (All)] *****************************************************
2025-03-29 22:08:54,600 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=controller-galera-container-f800b10b)
2025-03-29 22:08:54,612 p=32415 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Delete encryption keyfile after starting Galera] *************************
2025-03-29 22:08:54,642 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:54,654 p=32415 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed sockets] ***********************************************
2025-03-29 22:08:54,727 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/handlers/socket_restart.yml for controller-galera-container-f800b10b => (item={'diff': [], 'dest': '/etc/systemd/system/mariadbcheck.socket', 'src': '/root/.ansible/tmp/ansible-tmp-1743286097.5239906-32846-248386618033674/.source.socket', 'md5sum': '080fbf800923297a4325a13cc8dbad2a', 'checksum': 'c30a14459676c7b7298020741b42deb07c23f77b', 'changed': True, 'uid': 0, 'gid': 0, 'owner': 'root', 'group': 'root', 'mode': '0644', 'state': 'file', 'size': 220, 'invocation': {'module_args': {'src': '/root/.ansible/tmp/ansible-tmp-1743286097.5239906-32846-248386618033674/.source.socket', 'dest': '/etc/systemd/system/mariadbcheck.socket', 'mode': '0644', 'owner': 'root', 'group': 'root', 'follow': False, '_original_basename': 'systemd-socket.j2', 'checksum': 'c30a14459676c7b7298020741b42deb07c23f77b', 'backup': False, 'force': True, 'unsafe_writes': False, 'content': None, 'validate': None, 'directory_mode': None, 'remote_src': None, 'local_follow': None, 'seuser': None, 'serole': None, 'selevel': None, 'setype': None, 'attributes': None}}, 'failed': False, 'item': [{'service_name': 'mariadbcheck@', 'service_type': 'oneshot', 'execstarts': '-/usr/local/bin/clustercheck', 'enabled': False, 'load': False, 'standard_output': 'socket', 'after_targets': [], 'sockets': [{'socket_name': 'mariadbcheck', 'enabled': True, 'options': {'ListenStream': '192.168.56.180:9200', 'IPAddressDeny': 'any', 'IPAddressAllow': '192.168.56.180 127.0.0.1', 'Accept': 'yes', 'FreeBind': 'true'}}]}, {'socket_name': 'mariadbcheck', 'enabled': True, 'options': {'ListenStream': '192.168.56.180:9200', 'IPAddressDeny': 'any', 'IPAddressAllow': '192.168.56.180 127.0.0.1', 'Accept': 'yes', 'FreeBind': 'true'}}], 'ansible_loop_var': 'item'})
2025-03-29 22:08:54,734 p=32415 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restarting socket] *****************************************************
2025-03-29 22:08:55,653 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"name": "mariadbcheck.socket", "state": "restarted"})
2025-03-29 22:08:55,671 p=32415 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed services] **********************************************
2025-03-29 22:08:55,745 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@.service"}) 
2025-03-29 22:08:55,749 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:55,760 p=32415 u=vagrant n=ansible | RUNNING HANDLER [pki : cert changed] **********************************************************************
2025-03-29 22:08:55,761 p=32415 u=vagrant n=ansible | [WARNING]: noop task does not support when conditional

2025-03-29 22:08:55,770 p=32415 u=vagrant n=ansible | RUNNING HANDLER [pki : cert installed] ********************************************************************
2025-03-29 22:08:55,779 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_setup] ******************************************************
2025-03-29 22:08:55,854 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_setup.yml for controller-galera-container-f800b10b
2025-03-29 22:08:55,962 p=32415 u=vagrant n=ansible | TASK [galera_server : Fail if upgrade is needed] **********************************************************
2025-03-29 22:08:56,445 p=32415 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:08:56,456 p=32415 u=vagrant n=ansible | TASK [galera_server : Create galera users] ****************************************************************
2025-03-29 22:08:57,300 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:08:57,912 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:08:58,465 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:08:59,054 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:08:59,059 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:08:59,072 p=32415 u=vagrant n=ansible | TASK [galera_server : Including galera_server_backups] ****************************************************
2025-03-29 22:08:59,100 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:08:59,117 p=32415 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] *****************************************
2025-03-29 22:09:00,490 p=32415 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 22:09:00,519 p=32415 u=vagrant n=ansible | TASK [Enabling haproxy backends] **************************************************************************
2025-03-29 22:09:00,554 p=32415 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:09:00,581 p=32415 u=vagrant n=ansible | PLAY [Gather qdrouterd facts] *****************************************************************************
2025-03-29 22:09:00,582 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:09:00,592 p=32415 u=vagrant n=ansible | PLAY [Create and configure qdrouterd container] ***********************************************************
2025-03-29 22:09:00,592 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:09:00,599 p=32415 u=vagrant n=ansible | PLAY [Install qdrouterd server] ***************************************************************************
2025-03-29 22:09:00,599 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:09:00,611 p=32415 u=vagrant n=ansible | PLAY [Gather etcd facts] **********************************************************************************
2025-03-29 22:09:00,667 p=32415 u=vagrant n=ansible | PLAY [Create and configure rabbitmq container] ************************************************************
2025-03-29 22:09:00,684 p=32415 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:09:00,766 p=32415 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:09:00,771 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:09:00,855 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:00,867 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:09:01,314 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-29 22:09:01,325 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:09:01,818 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-29 22:09:01,830 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:09:01,867 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:01,876 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:09:02,323 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.order=19)
2025-03-29 22:09:02,333 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:09:02,783 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 22:09:02,794 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:09:04,081 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 22:09:04,089 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:09:05,021 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 22:09:05,035 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:09:07,299 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:07,307 p=32415 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:09:11,221 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:11,234 p=32415 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:09:11,279 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:11,293 p=32415 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] *****************************************
2025-03-29 22:09:12,543 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:12,592 p=32415 u=vagrant n=ansible | PLAY [haproxy] ********************************************************************************************
2025-03-29 22:09:12,592 p=32415 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:09:12,609 p=32415 u=vagrant n=ansible | PLAY [Install rabbitmq server] ****************************************************************************
2025-03-29 22:09:12,664 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Gather variables for each operating system] ***************************************
2025-03-29 22:09:12,755 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:12,766 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Download the RabbitMQ package] ****************************************************
2025-03-29 22:09:12,797 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:12,807 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Fail if hosts file is not managed yet] ********************************************
2025-03-29 22:09:13,266 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:13,276 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure localhost /etc/hosts entry is correct] *************************************
2025-03-29 22:09:13,728 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:13,737 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Remove hostname record for 127.0.1.1] *********************************************
2025-03-29 22:09:14,317 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:14,328 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Create the system group] **********************************************************
2025-03-29 22:09:15,010 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:15,027 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Create the rabbit system user] ****************************************************
2025-03-29 22:09:15,919 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:15,934 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Create the local directories] *****************************************************
2025-03-29 22:09:16,415 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:16,425 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_install tasks] *************************************************
2025-03-29 22:09:16,502 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_install.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:09:16,537 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (deb)] **********************************
2025-03-29 22:09:17,015 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,030 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (rpm)] **********************************
2025-03-29 22:09:17,058 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,071 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Register a fact for the installed RabbitMQ version] *******************************
2025-03-29 22:09:17,142 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'stdout': '', 'stderr': 'dpkg-query: no packages found matching rabbitmq-server', 'rc': 1, 'cmd': ['dpkg-query', '-f=${Version}', '-W', 'rabbitmq-server'], 'start': '2025-03-29 22:09:16.966114', 'end': '2025-03-29 22:09:16.976565', 'delta': '0:00:00.010451', 'failed': False, 'msg': 'non-zero return code', 'stdout_lines': [], 'stderr_lines': ['dpkg-query: no packages found matching rabbitmq-server'], 'failed_when_result': False})
2025-03-29 22:09:17,147 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'false_condition': "ansible_facts['pkg_mgr'] == 'dnf'"}) 
2025-03-29 22:09:17,159 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure installed RabbitMQ version is same as expected] ****************************
2025-03-29 22:09:17,192 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,201 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure that RabbitMQ is running minimal required version for upgrade] *************
2025-03-29 22:09:17,231 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,245 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] *******************************************
2025-03-29 22:09:17,299 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,324 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_feature_flags tasks] *******************************************
2025-03-29 22:09:17,369 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,399 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_upgrade_prep tasks] ********************************************
2025-03-29 22:09:17,520 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:17,550 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Including install tasks] **********************************************************
2025-03-29 22:09:17,669 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/install_apt.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:09:17,697 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Validate repo config is deb822 format] ********************************************
2025-03-29 22:09:17,863 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 22:09:17,876 p=32415 u=vagrant n=ansible | TASK [Run the apt package pinning role] *******************************************************************
2025-03-29 22:09:17,955 p=32415 u=vagrant n=ansible | included: apt_package_pinning for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:09:17,981 p=32415 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ******************************************************
2025-03-29 22:09:19,258 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:19,267 p=32415 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ***************************************************
2025-03-29 22:09:19,306 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:19,325 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Clean up legacy repository config not in deb822 format] ***************************
2025-03-29 22:09:19,795 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=RabbitMQ.list)
2025-03-29 22:09:20,254 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=els_erlang.list)
2025-03-29 22:09:20,269 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure python3-debian package is available] ***************************************
2025-03-29 22:09:22,300 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:22,309 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Manage apt repositories] **********************************************************
2025-03-29 22:09:22,976 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'RabbitMQ', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGAyemoBDADMwGfwPLzN0G0TOoiJdboRZOHUk51mtkBemD+JX2XiTvykjj4p\nM5MyRfGKV5YFRw5IkFXqYaNP/dqCAbWkfQG1aNpzPVIqlwwOkNEnNR2dKpiEpiq9\nQ53HbAjMa9eHxvWN65MtvDIXGUIoupVMZAbycsYD9+fZWJrQgRlSb/Lk9cCvYKoy\ndXsfS1TOmglI3yFRgSvr+CM54gIOKpqWJVE+u2ZFq2rw9yh0GQzcOLXmrMStfbla\nakgqe3jpdXKIlI4tSoRaOsIFUjc1DeyZcEJGZyKlo4h1cgVNha8HDiMB9a7bdTCm\nW06ZbUrEz1vTmyFN6WFsLuZ4MRiWkuz0RAA9ePGMYz8DsQoMqusaoFAoQkgJQH4d\nMF+/3MFnK6CXMtkDYqwstcSDqtzbgvW+sOCzA/WGUzw37nwoh+mxIctVPxYsuipT\naX8O9T449mQ61AOFw9MoTRSnf0XNfFUlkh9fQlUK/BWxM0X7A4UUtdMcZC54LsMF\nKHDCC4WHeOpDy1sAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1zZXJ2ZXIpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgMnpqAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEJ9Fh/ImIINCM+4M\nAJmb/bXlShUTN4J1XCSOoUk4rBe0jBb6YbvB0YJrD1FZr/nfwV08sqCxfBvXR41W\n9PwCCPYKUXo1K4TxehfOR4RpiHou+YxnqMiZjLKB9nSTnGj7kSJ8OLEcqUrgV/Uv\nFk0w2IGQf25u6D6NumKuk6CElFxBG5OzBXtBAxUSLzQ7Xz/3IuqaPuA8KPRD25s8\nyDjj2auyZxlfaD+wUNkqaLQ9quXd8IJuUqvz9wNbOItooWypEk2tX48w5i+wd1pP\nAW+NjKuwd0G88nO6J+7oFYXcsh7n3nblJZT0bmUZC9M6kL9llt8Vy/FBkHnP3dX3\n+6EfEXeXPhVJTI7nkNP64XssO4zHg9vQd3rLd6RCfUnA/NjEXvpR6pjoEsPMlD99\n8hsK1c0AhAntSsB2sky7E5p7Rzq8X/SM8aZGDmkitkN2VdnAQsJP0UVq7FnpqBFS\npMxOxGveS5d5sjU3LoHPTg1uOcARcsOH245szVBPtklXOzg7Fazcc+BHmjYmrgeu\nQQ==\n=CfXb\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:09:23,541 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'els_erlang', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGBJAVUBDADBhHZA6wqZcmWMALb5Q+H/99kuI1xXGSBTm3/sNU21kMzHL+Tm\nAJrZbSVHflkNdwjQM+xi2Z04xRYZlmE8VI9v788gKm3ojZ4l089aoMW85R0RLxnl\nMy9KyUbpNkayOAVWIHj/AG/OMSrF7G3OcQCcDYLyD9PvIpt2vPgn9TunMkqD1G5o\nhMUOdBBBnzGrgWco2zbORwPM8O8ETtkcZioSp4AWCj7oA/SaugzBQ/3RzSby+1PT\n3cBRJei8RWGK97C9ILzY34SMYa0jj8x183gRRzGlGycyVQhLrHmhozLZFaqBCc5a\n0JtEYJy/yWeVvz+JEbx4VXFENQbWc77Qe9JO9iaPNO43HtOxpuxIOFajFHWnk2e7\nQSnYlZGZQ/7JRHtRu/GcCuqVf+M6jAVx+7rwjCdJ9ROhHYaCmXXODABUPwO0bWIr\nrnJChjSDnQ+aQJgQpcQfITO8FjvVcrQowjMCeIq58nIqq8aBKOEk7xHckQ6BnQSB\nKrHjzkM+6k8ccVMAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1lcmxhbmcpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgSQFVAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEOSVu0nMS75bjV4L\n/1lbtAK4qtksPZRoZQJl+s9U7zj7Sqo7Gz9ke90sqt6O96QgKq0/LzACWoeezk9J\nlScTwl1bHg+/TVDdar5pTJf3jOoMxNqpdouF4uhCDhbJkOVYFDUysdYwCvavrF7U\n4zYa01jKuMcF1FJ21qqy9uFqfQsxVrvniIu1+tONbiDqPEVZUcd7ffcndCLBEpA2\nkbFrCj7nD/G3JrO3F6u3/v27lHbpaTbqiL5ovUj5nEA2ACzEgXP69+2MO/2h7mw1\n8kS48QiyTVaZaByN4RwbSmPDDtYXM7Mts59XPaxLrzWEH2wKtpAQdKSaUoTGSwDc\nbJJ/QOvTdHqaOSaEWR6tZnSrjdGElaHzK3xIdaTpipg+y6WKOEfM8WPpBmYrTJ2F\nKGO+mHZY0OdUqdCZohzNtZnbekZUb88UejEvtnOjxmO/22jZxIU7d8ocIV0l7GFf\nGMuKc63PqdMzaztmt+CS0uFscE4kfS3ZyMavW7pRDfB8Y4SqZ17zIdnIfnAucCus\nTg==\n=gGzU\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:09:23,559 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Update apt repositories when config is changed] ***********************************
2025-03-29 22:09:32,667 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:32,675 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ package dependencies] ********************************************
2025-03-29 22:09:49,744 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:49,754 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Install the RabbitMQ package deb] *************************************************
2025-03-29 22:09:49,783 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:09:49,793 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ packages] ********************************************************
2025-03-29 22:10:05,300 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:10:05,308 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Reload the systemd daemon] ********************************************************
2025-03-29 22:10:05,338 p=32415 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:10:05,347 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure there are no policy-rc files] **********************************************
2025-03-29 22:10:05,780 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:10:05,790 p=32415 u=vagrant n=ansible | TASK [Create and install SSL certificates] ****************************************************************
2025-03-29 22:10:05,903 p=32415 u=vagrant n=ansible | included: pki for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:10:05,945 p=32415 u=vagrant n=ansible | TASK [pki : Create Server certificates] *******************************************************************
2025-03-29 22:10:06,042 p=32415 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-rabbit-mq-container-6f8ad97c => (item={'name': 'rabbitmq_controller-rabbit-mq-container-6f8ad97c', 'provider': 'ownca', 'cn': 'controller-rabbit-mq-container-6f8ad97c', 'san': 'DNS:controller-rabbit-mq-container-6f8ad97c,IP:192.168.56.214,DNS:controller-rabbit-mq-container-6f8ad97c.openstack.local', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-29 22:10:06,052 p=32415 u=vagrant n=ansible | TASK [pki : Generate certificate private key for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ********
2025-03-29 22:10:09,958 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:10:09,973 p=32415 u=vagrant n=ansible | TASK [pki : Create the CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] **************************
2025-03-29 22:10:12,127 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:10:12,136 p=32415 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ****************
2025-03-29 22:10:14,111 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:10:14,125 p=32415 u=vagrant n=ansible | TASK [pki : Get certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ********************
2025-03-29 22:10:14,728 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:10:14,740 p=32415 u=vagrant n=ansible | TASK [pki : Save certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] *******************
2025-03-29 22:10:15,555 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:10:15,570 p=32415 u=vagrant n=ansible | TASK [pki : Create certificate chain for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ****************
2025-03-29 22:10:16,011 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:10:16,028 p=32415 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] *********************************
2025-03-29 22:10:16,487 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/rabbitmq_controller-rabbit-mq-container-6f8ad97c-chain.crt', 'dest': '/etc/rabbitmq/rabbitmq.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-29 22:10:16,823 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/rabbitmq_controller-rabbit-mq-container-6f8ad97c.key.pem', 'dest': '/etc/rabbitmq/rabbitmq.key', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0600'})
2025-03-29 22:10:17,168 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/rabbitmq/rabbitmq-ca.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-29 22:10:17,180 p=32415 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ***************************************************
2025-03-29 22:10:17,612 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/rabbitmq", "state": "directory", "mode": "0755"})
2025-03-29 22:10:17,628 p=32415 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] *******************************************************
2025-03-29 22:10:18,812 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-29 22:10:20,195 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.key", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0600"})
2025-03-29 22:10:21,704 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq-ca.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-29 22:10:21,728 p=32415 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbit cookie] ****************************************************************
2025-03-29 22:10:22,626 p=32415 u=vagrant n=ansible | fatal: [controller-rabbit-mq-container-6f8ad97c]: FAILED! => {"changed": false, "msg": "src (or content) is required"}
2025-03-29 22:10:22,670 p=32415 u=vagrant n=ansible | RUNNING HANDLER [rabbitmq_server : Ensure RabbitMQ is stopped] ********************************************
2025-03-29 22:10:28,041 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:10:28,052 p=32415 u=vagrant n=ansible | RUNNING HANDLER [rabbitmq_server : Ensure RabbitMQ is started] ********************************************
2025-03-29 22:10:34,123 p=32415 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:10:34,131 p=32415 u=vagrant n=ansible | RUNNING HANDLER [rabbitmq_server : Wait for rabbitmq to be started] ***************************************
2025-03-29 22:10:34,863 p=32415 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': '192.168.56.214', 'value': '5672'})
2025-03-29 22:10:34,874 p=32415 u=vagrant n=ansible | RUNNING HANDLER [pki : cert changed] **********************************************************************
2025-03-29 22:10:34,880 p=32415 u=vagrant n=ansible | RUNNING HANDLER [pki : cert installed] ********************************************************************
2025-03-29 22:10:34,882 p=32415 u=vagrant n=ansible | PLAY RECAP ************************************************************************************************
2025-03-29 22:10:34,882 p=32415 u=vagrant n=ansible | controller                 : ok=0    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-03-29 22:10:34,883 p=32415 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=71   changed=32   unreachable=0    failed=0    skipped=27   rescued=0    ignored=0   
2025-03-29 22:10:34,883 p=32415 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=14   changed=0    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2025-03-29 22:10:34,883 p=32415 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=46   changed=22   unreachable=0    failed=1    skipped=12   rescued=0    ignored=0   
2025-03-29 22:28:15,851 p=33872 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults keyword is a more generic version
 and can apply to all calls to the M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, 
use module_defaults instead. This feature will be removed from ansible-core in version 2.18. Deprecation 
warnings can be disabled by setting deprecation_warnings=False in ansible.cfg.
2025-03-29 22:28:16,714 p=33872 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory source

2025-03-29 22:28:18,615 p=33872 u=vagrant n=ansible | PLAY [Placeholder hook] ***********************************************************************************
2025-03-29 22:28:18,682 p=33872 u=vagrant n=ansible | PLAY [Gather unbound facts] *******************************************************************************
2025-03-29 22:28:18,682 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,688 p=33872 u=vagrant n=ansible | PLAY [Install unbound DNS resolvers] **********************************************************************
2025-03-29 22:28:18,688 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,697 p=33872 u=vagrant n=ansible | PLAY [Install unbound DNS resolver client configurations] *************************************************
2025-03-29 22:28:18,755 p=33872 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:28:18,805 p=33872 u=vagrant n=ansible | skipping: [controller]
2025-03-29 22:28:18,929 p=33872 u=vagrant n=ansible | PLAY [Gather haproxy facts] *******************************************************************************
2025-03-29 22:28:18,929 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,935 p=33872 u=vagrant n=ansible | PLAY [HAProxy base config] ********************************************************************************
2025-03-29 22:28:18,935 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,940 p=33872 u=vagrant n=ansible | PLAY [Gather repo facts] **********************************************************************************
2025-03-29 22:28:18,941 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,948 p=33872 u=vagrant n=ansible | PLAY [Setup repo servers] *********************************************************************************
2025-03-29 22:28:18,949 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,950 p=33872 u=vagrant n=ansible | PLAY [Setup repo server gluster cluster] ******************************************************************
2025-03-29 22:28:18,950 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,955 p=33872 u=vagrant n=ansible | PLAY [haproxy] ********************************************************************************************
2025-03-29 22:28:18,956 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,962 p=33872 u=vagrant n=ansible | PLAY [Setup repo servers] *********************************************************************************
2025-03-29 22:28:18,962 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:18,971 p=33872 u=vagrant n=ansible | PLAY [Gather memcached facts] *****************************************************************************
2025-03-29 22:28:19,023 p=33872 u=vagrant n=ansible | PLAY [Install memcached] **********************************************************************************
2025-03-29 22:28:19,041 p=33872 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:28:19,149 p=33872 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-memcached-container-71b4149f
2025-03-29 22:28:19,156 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:28:19,217 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:19,228 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:28:20,296 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 22:28:20,308 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:28:20,926 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 22:28:20,937 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:28:20,969 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:20,980 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:28:21,442 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 22:28:21,453 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:28:21,516 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:21,529 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:28:21,598 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:21,612 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:28:21,669 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:21,678 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:28:22,056 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:22,066 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:28:22,112 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:22,128 p=33872 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:28:22,185 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:22,204 p=33872 u=vagrant n=ansible | TASK [memcached_server : Gather variables for each operating system] **************************************
2025-03-29 22:28:22,281 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:22,289 p=33872 u=vagrant n=ansible | TASK [memcached_server : Install distro packages] *********************************************************
2025-03-29 22:28:26,081 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:26,092 p=33872 u=vagrant n=ansible | TASK [memcached_server : Apply memcached config] **********************************************************
2025-03-29 22:28:27,339 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:27,350 p=33872 u=vagrant n=ansible | TASK [memcached_server : Override systemd service file] ***************************************************
2025-03-29 22:28:27,394 p=33872 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 22:28:27,406 p=33872 u=vagrant n=ansible | TASK [memcached_server : Create memcached systemd service config dir] *************************************
2025-03-29 22:28:27,908 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:27,918 p=33872 u=vagrant n=ansible | TASK [memcached_server : Apply systemd options] ***********************************************************
2025-03-29 22:28:29,019 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.limits.conf.j2', 'dest': 'limits.conf'})
2025-03-29 22:28:30,024 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.restart.conf.j2', 'dest': 'restart.conf'})
2025-03-29 22:28:31,008 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.slice.conf.j2', 'dest': 'slice.conf'})
2025-03-29 22:28:32,019 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.without-privatedevices.conf.j2', 'dest': 'without-privatedevices.conf'})
2025-03-29 22:28:32,033 p=33872 u=vagrant n=ansible | TASK [memcached_server : Configure soft file limits] ******************************************************
2025-03-29 22:28:32,467 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:32,475 p=33872 u=vagrant n=ansible | TASK [memcached_server : Configure hard file limits] ******************************************************
2025-03-29 22:28:32,904 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:32,914 p=33872 u=vagrant n=ansible | TASK [memcached_server : Flush handlers] ******************************************************************
2025-03-29 22:28:32,929 p=33872 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] *****************************************
2025-03-29 22:28:34,034 p=33872 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 22:28:34,075 p=33872 u=vagrant n=ansible | PLAY [Gather galera facts] ********************************************************************************
2025-03-29 22:28:34,106 p=33872 u=vagrant n=ansible | TASK [Gather additional facts] ****************************************************************************
2025-03-29 22:28:34,157 p=33872 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller-galera-container-f800b10b
2025-03-29 22:28:34,164 p=33872 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] *****************************************
2025-03-29 22:28:36,054 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:36,098 p=33872 u=vagrant n=ansible | PLAY [haproxy] ********************************************************************************************
2025-03-29 22:28:36,099 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:28:36,111 p=33872 u=vagrant n=ansible | PLAY [Install galera server] ******************************************************************************
2025-03-29 22:28:36,136 p=33872 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:28:36,223 p=33872 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-galera-container-f800b10b
2025-03-29 22:28:36,228 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:28:36,285 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:36,295 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:28:36,726 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 22:28:37,102 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 22:28:37,117 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:28:37,534 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 22:28:37,911 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 22:28:37,927 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:28:37,956 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:37,967 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:28:38,389 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.order=10)
2025-03-29 22:28:38,400 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:28:38,453 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,463 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:28:38,521 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,530 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:28:38,585 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,596 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:28:38,747 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,755 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:28:38,795 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,808 p=33872 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:28:38,862 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,872 p=33872 u=vagrant n=ansible | TASK [Disabling haproxy backends] *************************************************************************
2025-03-29 22:28:38,911 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:38,932 p=33872 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ******************************************************
2025-03-29 22:28:40,079 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,089 p=33872 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ***************************************************
2025-03-29 22:28:40,141 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,162 p=33872 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] *****************************************
2025-03-29 22:28:40,239 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,248 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] *******************************************************
2025-03-29 22:28:40,276 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,287 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] ********************************************************
2025-03-29 22:28:40,312 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,324 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] *******************************************************
2025-03-29 22:28:40,399 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_main.yml for controller-galera-container-f800b10b
2025-03-29 22:28:40,407 p=33872 u=vagrant n=ansible | TASK [galera_server : Fail when the host is not in galera_cluster_members] ********************************
2025-03-29 22:28:40,437 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,447 p=33872 u=vagrant n=ansible | TASK [galera_server : Fail if the galera root password is not provided] ***********************************
2025-03-29 22:28:40,485 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:40,495 p=33872 u=vagrant n=ansible | TASK [galera_server : Initialize local facts] *************************************************************
2025-03-29 22:28:41,208 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:41,218 p=33872 u=vagrant n=ansible | TASK [galera_server : Refresh local facts] ****************************************************************
2025-03-29 22:28:42,117 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:42,126 p=33872 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ***********************************************
2025-03-29 22:28:42,190 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:42,201 p=33872 u=vagrant n=ansible | TASK [galera_server : Cluster state notice] ***************************************************************
2025-03-29 22:28:42,229 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:42,239 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_cluster_state] **********************************************
2025-03-29 22:28:42,291 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_cluster_state.yml for controller-galera-container-f800b10b
2025-03-29 22:28:42,309 p=33872 u=vagrant n=ansible | TASK [galera_server : Check node status] ******************************************************************
2025-03-29 22:28:43,074 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:43,084 p=33872 u=vagrant n=ansible | TASK [galera_server : Fail if cluster is out of sync] *****************************************************
2025-03-29 22:28:43,127 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:43,137 p=33872 u=vagrant n=ansible | TASK [galera_server : Check cluster name] *****************************************************************
2025-03-29 22:28:43,622 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:43,631 p=33872 u=vagrant n=ansible | TASK [galera_server : Fail if galera_cluster_name doesnt match provided value] ****************************
2025-03-29 22:28:43,675 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:43,689 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade] ****************************************************
2025-03-29 22:28:43,736 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_upgrade.yml for controller-galera-container-f800b10b
2025-03-29 22:28:43,756 p=33872 u=vagrant n=ansible | TASK [galera_server : Check mysql version] ****************************************************************
2025-03-29 22:28:44,283 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:44,291 p=33872 u=vagrant n=ansible | TASK [galera_server : Check if major version of Galera is installed] **************************************
2025-03-29 22:28:44,319 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:44,330 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade_pre] ************************************************
2025-03-29 22:28:44,363 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:44,377 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_install] ****************************************************
2025-03-29 22:28:44,426 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_install.yml for controller-galera-container-f800b10b
2025-03-29 22:28:44,453 p=33872 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ***********************************************************
2025-03-29 22:28:44,518 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:44,531 p=33872 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ***************************************
2025-03-29 22:28:44,593 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-galera-container-f800b10b
2025-03-29 22:28:44,606 p=33872 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] **********************************************
2025-03-29 22:28:44,737 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 22:28:44,750 p=33872 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] *************************************************
2025-03-29 22:28:46,217 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:46,227 p=33872 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] *****************************
2025-03-29 22:28:46,724 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=MariaDB.list)
2025-03-29 22:28:46,737 p=33872 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] *****************************************
2025-03-29 22:28:48,919 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:48,929 p=33872 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] ************************************************************
2025-03-29 22:28:49,989 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:28:50,002 p=33872 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] *************************************
2025-03-29 22:28:50,042 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:50,051 p=33872 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] *********************************************************
2025-03-29 22:28:50,956 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:28:51,518 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:28:51,520 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:51,535 p=33872 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ******************************************
2025-03-29 22:28:57,068 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:57,077 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_encryption] *************************************************
2025-03-29 22:28:57,106 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:28:57,119 p=33872 u=vagrant n=ansible | TASK [galera_server : Record galera has been deployed] ****************************************************
2025-03-29 22:28:57,576 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:57,584 p=33872 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ***********************************************
2025-03-29 22:28:57,637 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:28:57,646 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_post_install] ***********************************************
2025-03-29 22:28:57,750 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_post_install.yml for controller-galera-container-f800b10b
2025-03-29 22:28:57,776 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] **************************************************************
2025-03-29 22:28:58,314 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 22:28:58,756 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 22:28:58,769 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] *****************************************************
2025-03-29 22:28:59,288 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 22:28:59,717 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 22:28:59,732 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ***************************************************
2025-03-29 22:29:00,246 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/mariadb.service.d", "owner": "root", "group": "root"})
2025-03-29 22:29:00,261 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] **********************************************************
2025-03-29 22:29:01,482 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadb.conf"})
2025-03-29 22:29:02,616 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadbcheck@.conf"})
2025-03-29 22:29:02,732 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] ********************************************************
2025-03-29 22:29:03,984 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/mariadbcheck@.service", "config_overrides": {}, "config_type": "ini"})
2025-03-29 22:29:03,999 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] *******************************************************
2025-03-29 22:29:05,295 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/mariadb.service.d/override.conf"})
2025-03-29 22:29:05,310 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] **********************************************************
2025-03-29 22:29:05,393 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:05,404 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] *********************************************************
2025-03-29 22:29:06,660 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-socket.j2", "dest": "/etc/systemd/system/mariadbcheck.socket"})
2025-03-29 22:29:06,682 p=33872 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ****************************************************
2025-03-29 22:29:06,730 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:06,739 p=33872 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] *****************************************************
2025-03-29 22:29:06,857 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadb"})
2025-03-29 22:29:06,867 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadbcheck@"})
2025-03-29 22:29:06,900 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load service mariadb] *************************************************************
2025-03-29 22:29:08,288 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"})
2025-03-29 22:29:08,315 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadb] ***************************************************************
2025-03-29 22:29:08,372 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"}) 
2025-03-29 22:29:08,374 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:08,399 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load service mariadbcheck@] *******************************************************
2025-03-29 22:29:08,446 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-29 22:29:08,449 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:08,469 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadbcheck@] *********************************************************
2025-03-29 22:29:08,531 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-29 22:29:08,535 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:08,546 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load socket] **********************************************************************
2025-03-29 22:29:09,390 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"name": "mariadbcheck.socket", "enabled": true, "state": "__omit_place_holder__301b8cf98b005f63bd2d544ca3e6aefc526a6d1f"})
2025-03-29 22:29:09,412 p=33872 u=vagrant n=ansible | TASK [galera_server : Create galera initial secure tool] **************************************************
2025-03-29 22:29:09,439 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:09,448 p=33872 u=vagrant n=ansible | TASK [galera_server : Run galera secure] ******************************************************************
2025-03-29 22:29:09,477 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:09,488 p=33872 u=vagrant n=ansible | TASK [galera_server : Create the local directories] *******************************************************
2025-03-29 22:29:09,970 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql', 'owner': 'mysql', 'mode': '02755'})
2025-03-29 22:29:10,390 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql/#tmp', 'owner': 'mysql', 'mode': '02755'})
2025-03-29 22:29:10,834 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/etc/mysql/conf.d'})
2025-03-29 22:29:10,844 p=33872 u=vagrant n=ansible | TASK [Create and install SSL certificates] ****************************************************************
2025-03-29 22:29:10,957 p=33872 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b
2025-03-29 22:29:10,988 p=33872 u=vagrant n=ansible | TASK [pki : Create Server certificates] *******************************************************************
2025-03-29 22:29:11,190 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-galera-container-f800b10b => (item={'name': 'galera_controller-galera-container-f800b10b', 'provider': 'ownca', 'cn': 'controller-galera-container-f800b10b', 'san': 'DNS:controller-galera-container-f800b10b,IP:192.168.56.254,IP:192.168.56.180', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-29 22:29:11,205 p=33872 u=vagrant n=ansible | TASK [pki : Generate certificate private key for galera_controller-galera-container-f800b10b] *************
2025-03-29 22:29:16,488 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:29:16,499 p=33872 u=vagrant n=ansible | TASK [pki : Create the CSR for galera_controller-galera-container-f800b10b] *******************************
2025-03-29 22:29:18,551 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:29:18,562 p=33872 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for galera_controller-galera-container-f800b10b] *********************
2025-03-29 22:29:18,610 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:18,620 p=33872 u=vagrant n=ansible | TASK [pki : Get certificate info for galera_controller-galera-container-f800b10b] *************************
2025-03-29 22:29:18,672 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:18,692 p=33872 u=vagrant n=ansible | TASK [pki : Save certificate info for galera_controller-galera-container-f800b10b] ************************
2025-03-29 22:29:18,735 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:18,746 p=33872 u=vagrant n=ansible | TASK [pki : Create certificate chain for galera_controller-galera-container-f800b10b] *********************
2025-03-29 22:29:19,156 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 22:29:19,175 p=33872 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] *********************************
2025-03-29 22:29:19,834 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/galera_controller-galera-container-f800b10b-chain.crt', 'dest': '/etc/ssl/certs/galera.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-29 22:29:20,198 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/galera_controller-galera-container-f800b10b.key.pem', 'dest': '/etc/mysql/ssl/galera.key', 'owner': 'mysql', 'group': 'root', 'mode': '0600'})
2025-03-29 22:29:20,535 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/ssl/certs/galera-ca.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-29 22:29:20,549 p=33872 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ***************************************************
2025-03-29 22:29:21,016 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/ssl/certs", "state": "directory", "mode": "0755"})
2025-03-29 22:29:21,433 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/mysql/ssl", "state": "directory", "mode": "0755"})
2025-03-29 22:29:21,446 p=33872 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] *******************************************************
2025-03-29 22:29:22,645 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-29 22:29:23,795 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/mysql/ssl/galera.key", "owner": "mysql", "group": "root", "mode": "0600"})
2025-03-29 22:29:24,990 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera-ca.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-29 22:29:25,011 p=33872 u=vagrant n=ansible | TASK [galera_server : Remove existing mariadb configuration files] ****************************************
2025-03-29 22:29:25,045 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:25,056 p=33872 u=vagrant n=ansible | TASK [galera_server : Drop mariadb config(s)] *************************************************************
2025-03-29 22:29:25,961 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'src': 'my.cnf.j2', 'dest': '/etc/mysql/my.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-29 22:29:26,762 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'src': 'cluster.cnf.j2', 'dest': '/etc/mysql/conf.d/cluster.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-29 22:29:26,852 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'debian.cnf.j2', 'dest': '/etc/mysql/debian.cnf', 'config_overrides': {}, 'config_type': 'ini', 'condition': False}) 
2025-03-29 22:29:26,861 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'client.my.cnf.j2', 'dest': '/root/.my.cnf', 'config_overrides': {}, 'config_type': 'ini', 'mode': '0600', 'condition': False}) 
2025-03-29 22:29:26,874 p=33872 u=vagrant n=ansible | TASK [galera_server : Apply service defaults] *************************************************************
2025-03-29 22:29:28,056 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:28,066 p=33872 u=vagrant n=ansible | TASK [galera_server : Link mysql and mariadb config files] ************************************************
2025-03-29 22:29:28,508 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:28,517 p=33872 u=vagrant n=ansible | TASK [galera_server : Remove default mysql_safe_syslog] ***************************************************
2025-03-29 22:29:28,966 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:28,976 p=33872 u=vagrant n=ansible | TASK [galera_server : Create new cluster tool] ************************************************************
2025-03-29 22:29:30,202 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:30,212 p=33872 u=vagrant n=ansible | TASK [galera_server : Create clustercheck script] *********************************************************
2025-03-29 22:29:31,493 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:31,504 p=33872 u=vagrant n=ansible | TASK [galera_server : Flush handlers] *********************************************************************
2025-03-29 22:29:31,517 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_setup] ******************************************************
2025-03-29 22:29:31,571 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_setup.yml for controller-galera-container-f800b10b
2025-03-29 22:29:31,630 p=33872 u=vagrant n=ansible | TASK [galera_server : Fail if upgrade is needed] **********************************************************
2025-03-29 22:29:32,236 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:32,247 p=33872 u=vagrant n=ansible | TASK [galera_server : Create galera users] ****************************************************************
2025-03-29 22:29:33,141 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:29:34,044 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:29:34,681 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:29:35,281 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 22:29:35,287 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:35,302 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_backups] ****************************************************
2025-03-29 22:29:35,329 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:35,410 p=33872 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] *****************************************
2025-03-29 22:29:36,674 p=33872 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 22:29:36,700 p=33872 u=vagrant n=ansible | TASK [Enabling haproxy backends] **************************************************************************
2025-03-29 22:29:36,741 p=33872 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 22:29:36,766 p=33872 u=vagrant n=ansible | PLAY [Gather qdrouterd facts] *****************************************************************************
2025-03-29 22:29:36,766 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:29:36,774 p=33872 u=vagrant n=ansible | PLAY [Create and configure qdrouterd container] ***********************************************************
2025-03-29 22:29:36,775 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:29:36,784 p=33872 u=vagrant n=ansible | PLAY [Install qdrouterd server] ***************************************************************************
2025-03-29 22:29:36,785 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:29:36,795 p=33872 u=vagrant n=ansible | PLAY [Gather etcd facts] **********************************************************************************
2025-03-29 22:29:36,851 p=33872 u=vagrant n=ansible | PLAY [Create and configure rabbitmq container] ************************************************************
2025-03-29 22:29:36,861 p=33872 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:29:36,940 p=33872 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:29:36,948 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:29:37,010 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:37,020 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:29:37,471 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-29 22:29:37,491 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:29:37,921 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-29 22:29:37,933 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:29:37,966 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:37,974 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:29:38,418 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.order=19)
2025-03-29 22:29:38,428 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:29:38,478 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:38,488 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:29:38,543 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:38,553 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:29:38,603 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:38,612 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:29:38,754 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:38,764 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:29:38,800 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:38,813 p=33872 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:29:38,857 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:38,873 p=33872 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] *****************************************
2025-03-29 22:29:40,042 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:40,084 p=33872 u=vagrant n=ansible | PLAY [haproxy] ********************************************************************************************
2025-03-29 22:29:40,085 p=33872 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 22:29:40,095 p=33872 u=vagrant n=ansible | PLAY [Install rabbitmq server] ****************************************************************************
2025-03-29 22:29:40,161 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Gather variables for each operating system] ***************************************
2025-03-29 22:29:40,244 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:40,259 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Download the RabbitMQ package] ****************************************************
2025-03-29 22:29:40,291 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:40,300 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Fail if hosts file is not managed yet] ********************************************
2025-03-29 22:29:40,764 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:40,772 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure localhost /etc/hosts entry is correct] *************************************
2025-03-29 22:29:41,223 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:41,231 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Remove hostname record for 127.0.1.1] *********************************************
2025-03-29 22:29:41,849 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:41,857 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Create the system group] **********************************************************
2025-03-29 22:29:42,507 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:42,516 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Create the rabbit system user] ****************************************************
2025-03-29 22:29:43,400 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:43,408 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Create the local directories] *****************************************************
2025-03-29 22:29:43,871 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:43,878 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_install tasks] *************************************************
2025-03-29 22:29:44,003 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_install.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:29:44,035 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (deb)] **********************************
2025-03-29 22:29:44,491 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,500 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (rpm)] **********************************
2025-03-29 22:29:44,528 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,543 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Register a fact for the installed RabbitMQ version] *******************************
2025-03-29 22:29:44,625 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'stdout': '4.0.3-1', 'stderr': '', 'rc': 0, 'cmd': ['dpkg-query', '-f=${Version}', '-W', 'rabbitmq-server'], 'start': '2025-03-29 22:29:44.439604', 'end': '2025-03-29 22:29:44.450250', 'delta': '0:00:00.010646', 'msg': '', 'stdout_lines': ['4.0.3-1'], 'stderr_lines': [], 'failed': False, 'failed_when_result': False})
2025-03-29 22:29:44,634 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'false_condition': "ansible_facts['pkg_mgr'] == 'dnf'"}) 
2025-03-29 22:29:44,649 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure installed RabbitMQ version is same as expected] ****************************
2025-03-29 22:29:44,691 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,701 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure that RabbitMQ is running minimal required version for upgrade] *************
2025-03-29 22:29:44,731 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,739 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] *******************************************
2025-03-29 22:29:44,766 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,775 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_feature_flags tasks] *******************************************
2025-03-29 22:29:44,807 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,816 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_upgrade_prep tasks] ********************************************
2025-03-29 22:29:44,844 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:44,856 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including install tasks] **********************************************************
2025-03-29 22:29:44,926 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/install_apt.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:29:44,941 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Validate repo config is deb822 format] ********************************************
2025-03-29 22:29:45,082 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 22:29:45,090 p=33872 u=vagrant n=ansible | TASK [Run the apt package pinning role] *******************************************************************
2025-03-29 22:29:45,152 p=33872 u=vagrant n=ansible | included: apt_package_pinning for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:29:45,175 p=33872 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ******************************************************
2025-03-29 22:29:46,237 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:46,248 p=33872 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ***************************************************
2025-03-29 22:29:46,283 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:46,298 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Clean up legacy repository config not in deb822 format] ***************************
2025-03-29 22:29:46,760 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=RabbitMQ.list)
2025-03-29 22:29:47,164 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=els_erlang.list)
2025-03-29 22:29:47,179 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure python3-debian package is available] ***************************************
2025-03-29 22:29:49,465 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:49,472 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Manage apt repositories] **********************************************************
2025-03-29 22:29:50,207 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'RabbitMQ', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGAyemoBDADMwGfwPLzN0G0TOoiJdboRZOHUk51mtkBemD+JX2XiTvykjj4p\nM5MyRfGKV5YFRw5IkFXqYaNP/dqCAbWkfQG1aNpzPVIqlwwOkNEnNR2dKpiEpiq9\nQ53HbAjMa9eHxvWN65MtvDIXGUIoupVMZAbycsYD9+fZWJrQgRlSb/Lk9cCvYKoy\ndXsfS1TOmglI3yFRgSvr+CM54gIOKpqWJVE+u2ZFq2rw9yh0GQzcOLXmrMStfbla\nakgqe3jpdXKIlI4tSoRaOsIFUjc1DeyZcEJGZyKlo4h1cgVNha8HDiMB9a7bdTCm\nW06ZbUrEz1vTmyFN6WFsLuZ4MRiWkuz0RAA9ePGMYz8DsQoMqusaoFAoQkgJQH4d\nMF+/3MFnK6CXMtkDYqwstcSDqtzbgvW+sOCzA/WGUzw37nwoh+mxIctVPxYsuipT\naX8O9T449mQ61AOFw9MoTRSnf0XNfFUlkh9fQlUK/BWxM0X7A4UUtdMcZC54LsMF\nKHDCC4WHeOpDy1sAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1zZXJ2ZXIpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgMnpqAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEJ9Fh/ImIINCM+4M\nAJmb/bXlShUTN4J1XCSOoUk4rBe0jBb6YbvB0YJrD1FZr/nfwV08sqCxfBvXR41W\n9PwCCPYKUXo1K4TxehfOR4RpiHou+YxnqMiZjLKB9nSTnGj7kSJ8OLEcqUrgV/Uv\nFk0w2IGQf25u6D6NumKuk6CElFxBG5OzBXtBAxUSLzQ7Xz/3IuqaPuA8KPRD25s8\nyDjj2auyZxlfaD+wUNkqaLQ9quXd8IJuUqvz9wNbOItooWypEk2tX48w5i+wd1pP\nAW+NjKuwd0G88nO6J+7oFYXcsh7n3nblJZT0bmUZC9M6kL9llt8Vy/FBkHnP3dX3\n+6EfEXeXPhVJTI7nkNP64XssO4zHg9vQd3rLd6RCfUnA/NjEXvpR6pjoEsPMlD99\n8hsK1c0AhAntSsB2sky7E5p7Rzq8X/SM8aZGDmkitkN2VdnAQsJP0UVq7FnpqBFS\npMxOxGveS5d5sjU3LoHPTg1uOcARcsOH245szVBPtklXOzg7Fazcc+BHmjYmrgeu\nQQ==\n=CfXb\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:29:50,808 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'els_erlang', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGBJAVUBDADBhHZA6wqZcmWMALb5Q+H/99kuI1xXGSBTm3/sNU21kMzHL+Tm\nAJrZbSVHflkNdwjQM+xi2Z04xRYZlmE8VI9v788gKm3ojZ4l089aoMW85R0RLxnl\nMy9KyUbpNkayOAVWIHj/AG/OMSrF7G3OcQCcDYLyD9PvIpt2vPgn9TunMkqD1G5o\nhMUOdBBBnzGrgWco2zbORwPM8O8ETtkcZioSp4AWCj7oA/SaugzBQ/3RzSby+1PT\n3cBRJei8RWGK97C9ILzY34SMYa0jj8x183gRRzGlGycyVQhLrHmhozLZFaqBCc5a\n0JtEYJy/yWeVvz+JEbx4VXFENQbWc77Qe9JO9iaPNO43HtOxpuxIOFajFHWnk2e7\nQSnYlZGZQ/7JRHtRu/GcCuqVf+M6jAVx+7rwjCdJ9ROhHYaCmXXODABUPwO0bWIr\nrnJChjSDnQ+aQJgQpcQfITO8FjvVcrQowjMCeIq58nIqq8aBKOEk7xHckQ6BnQSB\nKrHjzkM+6k8ccVMAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1lcmxhbmcpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgSQFVAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEOSVu0nMS75bjV4L\n/1lbtAK4qtksPZRoZQJl+s9U7zj7Sqo7Gz9ke90sqt6O96QgKq0/LzACWoeezk9J\nlScTwl1bHg+/TVDdar5pTJf3jOoMxNqpdouF4uhCDhbJkOVYFDUysdYwCvavrF7U\n4zYa01jKuMcF1FJ21qqy9uFqfQsxVrvniIu1+tONbiDqPEVZUcd7ffcndCLBEpA2\nkbFrCj7nD/G3JrO3F6u3/v27lHbpaTbqiL5ovUj5nEA2ACzEgXP69+2MO/2h7mw1\n8kS48QiyTVaZaByN4RwbSmPDDtYXM7Mts59XPaxLrzWEH2wKtpAQdKSaUoTGSwDc\nbJJ/QOvTdHqaOSaEWR6tZnSrjdGElaHzK3xIdaTpipg+y6WKOEfM8WPpBmYrTJ2F\nKGO+mHZY0OdUqdCZohzNtZnbekZUb88UejEvtnOjxmO/22jZxIU7d8ocIV0l7GFf\nGMuKc63PqdMzaztmt+CS0uFscE4kfS3ZyMavW7pRDfB8Y4SqZ17zIdnIfnAucCus\nTg==\n=gGzU\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:29:50,821 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Update apt repositories when config is changed] ***********************************
2025-03-29 22:29:50,854 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:50,864 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ package dependencies] ********************************************
2025-03-29 22:29:55,291 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:55,303 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Install the RabbitMQ package deb] *************************************************
2025-03-29 22:29:55,333 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:55,342 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ packages] ********************************************************
2025-03-29 22:29:57,399 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:57,408 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Reload the systemd daemon] ********************************************************
2025-03-29 22:29:57,436 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:57,444 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure there are no policy-rc files] **********************************************
2025-03-29 22:29:57,891 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:29:57,901 p=33872 u=vagrant n=ansible | TASK [Create and install SSL certificates] ****************************************************************
2025-03-29 22:29:58,007 p=33872 u=vagrant n=ansible | included: pki for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:29:58,048 p=33872 u=vagrant n=ansible | TASK [pki : Create Server certificates] *******************************************************************
2025-03-29 22:29:58,148 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-rabbit-mq-container-6f8ad97c => (item={'name': 'rabbitmq_controller-rabbit-mq-container-6f8ad97c', 'provider': 'ownca', 'cn': 'controller-rabbit-mq-container-6f8ad97c', 'san': 'DNS:controller-rabbit-mq-container-6f8ad97c,IP:192.168.56.214,DNS:controller-rabbit-mq-container-6f8ad97c.openstack.local', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-29 22:29:58,161 p=33872 u=vagrant n=ansible | TASK [pki : Generate certificate private key for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ********
2025-03-29 22:30:03,127 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:30:03,138 p=33872 u=vagrant n=ansible | TASK [pki : Create the CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] **************************
2025-03-29 22:30:04,967 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:30:04,979 p=33872 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ****************
2025-03-29 22:30:05,036 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:05,050 p=33872 u=vagrant n=ansible | TASK [pki : Get certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ********************
2025-03-29 22:30:05,091 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:05,104 p=33872 u=vagrant n=ansible | TASK [pki : Save certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] *******************
2025-03-29 22:30:05,148 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:05,163 p=33872 u=vagrant n=ansible | TASK [pki : Create certificate chain for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ****************
2025-03-29 22:30:05,582 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 22:30:05,608 p=33872 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] *********************************
2025-03-29 22:30:06,032 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/rabbitmq_controller-rabbit-mq-container-6f8ad97c-chain.crt', 'dest': '/etc/rabbitmq/rabbitmq.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-29 22:30:06,376 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/rabbitmq_controller-rabbit-mq-container-6f8ad97c.key.pem', 'dest': '/etc/rabbitmq/rabbitmq.key', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0600'})
2025-03-29 22:30:06,698 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/rabbitmq/rabbitmq-ca.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-29 22:30:06,712 p=33872 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ***************************************************
2025-03-29 22:30:07,178 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/rabbitmq", "state": "directory", "mode": "0755"})
2025-03-29 22:30:07,199 p=33872 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] *******************************************************
2025-03-29 22:30:08,384 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-29 22:30:09,883 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.key", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0600"})
2025-03-29 22:30:10,996 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq-ca.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-29 22:30:11,022 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbit cookie] ****************************************************************
2025-03-29 22:30:12,243 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:12,250 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Create rabbitmq config] ***********************************************************
2025-03-29 22:30:13,498 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq.conf.j2', 'dest': '/etc/rabbitmq/rabbitmq.conf'})
2025-03-29 22:30:14,678 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'advanced.config.j2', 'dest': '/etc/rabbitmq/advanced.config'})
2025-03-29 22:30:15,851 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq-server.j2', 'dest': '/etc/default/rabbitmq-server', 'mode': '0644'})
2025-03-29 22:30:17,032 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq-env.j2', 'dest': '/etc/rabbitmq/rabbitmq-env.conf'})
2025-03-29 22:30:17,051 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] **************************************************************
2025-03-29 22:30:17,521 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/system", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-29 22:30:17,536 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] *****************************************************
2025-03-29 22:30:18,003 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/system", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-29 22:30:18,014 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ***************************************************
2025-03-29 22:30:18,487 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/rabbitmq-server.service.d", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-29 22:30:18,498 p=33872 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] **********************************************************
2025-03-29 22:30:19,702 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-rabbitmq-server.conf"})
2025-03-29 22:30:19,717 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] ********************************************************
2025-03-29 22:30:19,752 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:19,763 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] *******************************************************
2025-03-29 22:30:20,934 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/rabbitmq-server.service.d/override.conf"})
2025-03-29 22:30:20,953 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] **********************************************************
2025-03-29 22:30:20,987 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:20,998 p=33872 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] *********************************************************
2025-03-29 22:30:21,033 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:21,047 p=33872 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] ****************************************************
2025-03-29 22:30:21,937 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:21,948 p=33872 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] *****************************************************
2025-03-29 22:30:22,005 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "rabbitmq-server"})
2025-03-29 22:30:22,032 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load service rabbitmq-server] *****************************************************
2025-03-29 22:30:22,817 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "rabbitmq-server"})
2025-03-29 22:30:22,842 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load timer rabbitmq-server] *******************************************************
2025-03-29 22:30:22,892 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "rabbitmq-server"}) 
2025-03-29 22:30:22,899 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:22,908 p=33872 u=vagrant n=ansible | TASK [systemd_service : Load socket] **********************************************************************
2025-03-29 22:30:22,946 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:22,962 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Configure rabbitmq plugins] *******************************************************
2025-03-29 22:30:29,293 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'rabbitmq_management', 'state': 'enabled'})
2025-03-29 22:30:29,304 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Flush handlers] *******************************************************************
2025-03-29 22:30:29,317 p=33872 u=vagrant n=ansible | RUNNING HANDLER [rabbitmq_server : Ensure RabbitMQ is stopped] ********************************************
2025-03-29 22:30:32,627 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:32,635 p=33872 u=vagrant n=ansible | RUNNING HANDLER [rabbitmq_server : Ensure RabbitMQ is started] ********************************************
2025-03-29 22:30:40,411 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:40,420 p=33872 u=vagrant n=ansible | RUNNING HANDLER [rabbitmq_server : Wait for rabbitmq to be started] ***************************************
2025-03-29 22:30:41,173 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': '192.168.56.214', 'value': '5672'})
2025-03-29 22:30:41,184 p=33872 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed services] **********************************************
2025-03-29 22:30:41,209 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:41,217 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Gather cluster status] ************************************************************
2025-03-29 22:30:43,187 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:43,199 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Define cluster_state fact] ********************************************************
2025-03-29 22:30:43,276 p=33872 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:43,286 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbitmq cluster name on primary node] ****************************************
2025-03-29 22:30:45,196 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:45,206 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Join cluster on secondary nodes] **************************************************
2025-03-29 22:30:45,246 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:30:45,255 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_setup tasks] ***************************************************
2025-03-29 22:30:45,318 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_setup.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 22:30:45,364 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Apply rabbitmq policies] **********************************************************
2025-03-29 22:30:50,931 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'CQv2', 'pattern': '.*', 'priority': 0, 'tags': {'queue-version': 2}, 'state': 'present'})
2025-03-29 22:30:50,943 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure default rabbitmq guest user is removed] ************************************
2025-03-29 22:31:00,584 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:31:00,595 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure default rabbitmq guest user is removed] ************************************
2025-03-29 22:31:00,629 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:31:00,638 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] *******************************************
2025-03-29 22:31:00,687 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:31:00,701 p=33872 u=vagrant n=ansible | TASK [rabbitmq_server : Importing rabbitmq_feature_flags tasks] *******************************************
2025-03-29 22:31:00,745 p=33872 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:31:00,799 p=33872 u=vagrant n=ansible | PLAY [Ensure rabbitmq user for monitoring GUI] ************************************************************
2025-03-29 22:31:00,822 p=33872 u=vagrant n=ansible | TASK [Create rabbitmq user for monitoring GUI] ************************************************************
2025-03-29 22:31:14,571 p=33872 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 22:31:14,606 p=33872 u=vagrant n=ansible | PLAY [Gather utility facts] *******************************************************************************
2025-03-29 22:31:14,666 p=33872 u=vagrant n=ansible | PLAY [Setup the utility location(s)] **********************************************************************
2025-03-29 22:31:14,685 p=33872 u=vagrant n=ansible | TASK [Setup installation variables] ***********************************************************************
2025-03-29 22:31:14,727 p=33872 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-utility-container-7e5b64c5
2025-03-29 22:31:14,743 p=33872 u=vagrant n=ansible | TASK [Including container-setup role] *********************************************************************
2025-03-29 22:31:14,834 p=33872 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-utility-container-7e5b64c5
2025-03-29 22:31:14,844 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] *************************
2025-03-29 22:31:14,909 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:14,918 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] ********************************
2025-03-29 22:31:15,397 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-utility-container-7e5b64c5'})
2025-03-29 22:31:15,412 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] **********************
2025-03-29 22:31:15,889 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-utility-container-7e5b64c5'})
2025-03-29 22:31:15,900 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ***********************************************
2025-03-29 22:31:15,935 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:15,945 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] ************************************
2025-03-29 22:31:16,417 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 22:31:16,430 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ******************************************
2025-03-29 22:31:16,915 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 22:31:16,926 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ******************************************
2025-03-29 22:31:18,233 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 22:31:18,241 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] ************************************************
2025-03-29 22:31:19,246 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 22:31:19,259 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***********************
2025-03-29 22:31:21,681 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:21,709 p=33872 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] ********************************
2025-03-29 22:31:25,789 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:25,805 p=33872 u=vagrant n=ansible | TASK [Including unbound-clients role] *********************************************************************
2025-03-29 22:31:25,856 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:25,869 p=33872 u=vagrant n=ansible | TASK [Create log directory (not is_metal)] ****************************************************************
2025-03-29 22:31:26,354 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:26,374 p=33872 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ******************************************************
2025-03-29 22:31:27,849 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:27,860 p=33872 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ***************************************************
2025-03-29 22:31:27,905 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:27,925 p=33872 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] *****************************************
2025-03-29 22:31:28,003 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:28,013 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] *******************************************************
2025-03-29 22:31:28,071 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_client_main.yml for controller-utility-container-7e5b64c5
2025-03-29 22:31:28,081 p=33872 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ***********************************************************
2025-03-29 22:31:28,152 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:28,163 p=33872 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ***************************************
2025-03-29 22:31:28,236 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-utility-container-7e5b64c5
2025-03-29 22:31:28,245 p=33872 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] **********************************************
2025-03-29 22:31:28,357 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 22:31:28,368 p=33872 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] *************************************************
2025-03-29 22:31:29,704 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:29,714 p=33872 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] *****************************
2025-03-29 22:31:30,186 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=MariaDB.list)
2025-03-29 22:31:30,205 p=33872 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] *****************************************
2025-03-29 22:31:32,633 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:32,640 p=33872 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] ************************************************************
2025-03-29 22:31:33,365 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 22:31:33,378 p=33872 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] *************************************
2025-03-29 22:31:42,561 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:42,574 p=33872 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] *********************************************************
2025-03-29 22:31:43,359 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=None)
2025-03-29 22:31:44,043 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item=None)
2025-03-29 22:31:44,045 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:44,054 p=33872 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ******************************************
2025-03-29 22:31:50,496 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:50,505 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_client_post_install] ***********************************************
2025-03-29 22:31:50,544 p=33872 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_client_post_install.yml for controller-utility-container-7e5b64c5
2025-03-29 22:31:50,564 p=33872 u=vagrant n=ansible | TASK [galera_server : Drop local .my.cnf file] ************************************************************
2025-03-29 22:31:51,399 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,407 p=33872 u=vagrant n=ansible | TASK [Create and install SSL certificates] ****************************************************************
2025-03-29 22:31:51,487 p=33872 u=vagrant n=ansible | included: pki for controller-utility-container-7e5b64c5
2025-03-29 22:31:51,503 p=33872 u=vagrant n=ansible | TASK [pki : Create Server certificates] *******************************************************************
2025-03-29 22:31:51,546 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,564 p=33872 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] *********************************
2025-03-29 22:31:51,609 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,619 p=33872 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ***************************************************
2025-03-29 22:31:51,650 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,661 p=33872 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] *******************************************************
2025-03-29 22:31:51,685 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,702 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] ********************************************************
2025-03-29 22:31:51,731 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,741 p=33872 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] *******************************************************
2025-03-29 22:31:51,772 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:51,789 p=33872 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] **************************************************************
2025-03-29 22:31:53,143 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/root/openrc'})
2025-03-29 22:31:53,157 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/root/openrc.system_scope', 'condition': False}) 
2025-03-29 22:31:53,169 p=33872 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] *********************************
2025-03-29 22:31:53,704 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:53,714 p=33872 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] *********************************************************
2025-03-29 22:31:55,007 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:55,037 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Check node status] *******************************************************
2025-03-29 22:31:58,642 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:31:58,652 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Check if node is in the cluster] *****************************************
2025-03-29 22:32:01,715 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:01,724 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Set incoming addresses fact (primary)] ***********************************
2025-03-29 22:32:01,787 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:01,800 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Set node status fact] ****************************************************
2025-03-29 22:32:01,865 p=33872 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:01,881 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Stop mysql] **************************************************************
2025-03-29 22:32:01,911 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:01,922 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Start new cluster] *******************************************************
2025-03-29 22:32:01,966 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:01,976 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Restart mysql (All)] *****************************************************
2025-03-29 22:32:02,018 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=controller-utility-container-7e5b64c5) 
2025-03-29 22:32:02,021 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:02,030 p=33872 u=vagrant n=ansible | RUNNING HANDLER [galera_server : Delete encryption keyfile after starting Galera] *************************
2025-03-29 22:32:02,059 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:02,069 p=33872 u=vagrant n=ansible | TASK [Add OpenStack client to distro packages] ************************************************************
2025-03-29 22:32:02,100 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:02,109 p=33872 u=vagrant n=ansible | TASK [Install distro packages] ****************************************************************************
2025-03-29 22:32:07,016 p=33872 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:07,028 p=33872 u=vagrant n=ansible | TASK [Distribute private ssh key] *************************************************************************
2025-03-29 22:32:07,062 p=33872 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 22:32:07,071 p=33872 u=vagrant n=ansible | TASK [Get list of repo packages] **************************************************************************
2025-03-29 22:32:11,264 p=33872 u=vagrant n=ansible | fatal: [controller-utility-container-7e5b64c5]: FAILED! => {"changed": false, "content": "", "elapsed": 3, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 113] No route to host>", "redirected": false, "status": -1, "url": "http://192.168.56.254:8181/constraints/upper_constraints_cached.txt"}
2025-03-29 22:32:11,278 p=33872 u=vagrant n=ansible | PLAY RECAP ************************************************************************************************
2025-03-29 22:32:11,278 p=33872 u=vagrant n=ansible | controller                 : ok=0    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-03-29 22:32:11,279 p=33872 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=62   changed=0    unreachable=0    failed=0    skipped=32   rescued=0    ignored=0   
2025-03-29 22:32:11,279 p=33872 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=14   changed=0    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2025-03-29 22:32:11,279 p=33872 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=56   changed=14   unreachable=0    failed=0    skipped=30   rescued=0    ignored=0   
2025-03-29 22:32:11,279 p=33872 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=36   changed=15   unreachable=0    failed=1    skipped=15   rescued=0    ignored=0   
2025-03-29 23:13:48,772 p=36074 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-29 23:13:49,548 p=36074 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-29 23:13:50,107 p=36074 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-29 23:13:50,179 p=36074 u=vagrant n=ansible | PLAY [Create CA certificates] **************************************************
2025-03-29 23:13:50,200 p=36074 u=vagrant n=ansible | TASK [Create CA certificates] **************************************************
2025-03-29 23:13:50,266 p=36074 u=vagrant n=ansible | included: pki for localhost
2025-03-29 23:13:50,275 p=36074 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-29 23:13:50,309 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:13:50,316 p=36074 u=vagrant n=ansible | TASK [pki : Create PKI directories] ********************************************
2025-03-29 23:13:51,042 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 23:13:51,409 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-29 23:13:51,771 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-29 23:13:52,128 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-29 23:13:52,474 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-29 23:13:52,843 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-29 23:13:53,243 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-29 23:13:53,256 p=36074 u=vagrant n=ansible | TASK [pki : Create certificate authorities] ************************************
2025-03-29 23:13:53,375 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-29 23:13:53,402 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-29 23:13:53,411 p=36074 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ******
2025-03-29 23:13:53,873 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-29 23:13:54,238 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-29 23:13:54,599 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-29 23:13:54,957 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-29 23:13:54,967 p=36074 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-29 23:13:55,371 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:13:55,382 p=36074 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ******************
2025-03-29 23:13:56,016 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:13:56,027 p=36074 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] ***********************
2025-03-29 23:14:01,384 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:01,394 p=36074 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] ************************
2025-03-29 23:14:01,970 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:01,979 p=36074 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *****************************
2025-03-29 23:14:02,026 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,038 p=36074 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] ***************
2025-03-29 23:14:02,079 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,087 p=36074 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] ***************
2025-03-29 23:14:02,130 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,143 p=36074 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ******************
2025-03-29 23:14:02,172 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,180 p=36074 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-29 23:14:02,216 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,225 p=36074 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] **************************
2025-03-29 23:14:02,262 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,271 p=36074 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] *************************
2025-03-29 23:14:02,310 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,318 p=36074 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-29 23:14:02,348 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,356 p=36074 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-29 23:14:02,402 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:02,411 p=36074 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ***
2025-03-29 23:14:02,845 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-29 23:14:03,213 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-29 23:14:03,582 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-29 23:14:03,949 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-29 23:14:03,960 p=36074 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-29 23:14:04,357 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:04,366 p=36074 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] **********
2025-03-29 23:14:04,792 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:04,802 p=36074 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] ***************
2025-03-29 23:14:10,267 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:10,278 p=36074 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ****************
2025-03-29 23:14:10,676 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:10,685 p=36074 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] *********************
2025-03-29 23:14:10,728 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:10,738 p=36074 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *******
2025-03-29 23:14:10,773 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:10,782 p=36074 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *******
2025-03-29 23:14:10,811 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:10,821 p=36074 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] **********
2025-03-29 23:14:10,862 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:10,870 p=36074 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-29 23:14:10,910 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:10,919 p=36074 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ******************
2025-03-29 23:14:10,955 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:10,964 p=36074 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *****************
2025-03-29 23:14:11,002 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:11,009 p=36074 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-29 23:14:11,433 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:11,446 p=36074 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-29 23:14:11,531 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:11,595 p=36074 u=vagrant n=ansible | PLAY [Create SSHD CA] **********************************************************
2025-03-29 23:14:11,617 p=36074 u=vagrant n=ansible | TASK [Create SSHD certificate authority] ***************************************
2025-03-29 23:14:11,667 p=36074 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-29 23:14:11,675 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] ***
2025-03-29 23:14:11,706 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:11,714 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *****************
2025-03-29 23:14:12,106 p=36074 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-29 23:14:12,115 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ****************************
2025-03-29 23:14:12,161 p=36074 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-29 23:14:12,172 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-29 23:14:17,297 p=36074 u=vagrant n=ansible | ok: [localhost]
2025-03-29 23:14:17,306 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-29 23:14:17,353 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,363 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-29 23:14:17,404 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,412 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***
2025-03-29 23:14:17,433 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,442 p=36074 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] ***************************
2025-03-29 23:14:17,466 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,509 p=36074 u=vagrant n=ansible | PLAY [Generate any extra user certificates] ************************************
2025-03-29 23:14:17,529 p=36074 u=vagrant n=ansible | TASK [Create user certificates] ************************************************
2025-03-29 23:14:17,583 p=36074 u=vagrant n=ansible | included: pki for localhost
2025-03-29 23:14:17,591 p=36074 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-29 23:14:17,624 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,638 p=36074 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-29 23:14:17,673 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,681 p=36074 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-29 23:14:17,706 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,713 p=36074 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-29 23:14:17,730 p=36074 u=vagrant n=ansible | skipping: [localhost]
2025-03-29 23:14:17,763 p=36074 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *******************************************
2025-03-29 23:14:17,782 p=36074 u=vagrant n=ansible | TASK [Ensure python is installed] **********************************************
2025-03-29 23:14:18,283 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:44,653 p=36074 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).", "unreachable": true}
2025-03-29 23:14:44,756 p=36074 u=vagrant n=ansible | PLAY [Gather host facts] *******************************************************
2025-03-29 23:14:44,862 p=36074 u=vagrant n=ansible | PLAY [Basic host setup] ********************************************************
2025-03-29 23:14:44,887 p=36074 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:14:44,927 p=36074 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 23:14:44,953 p=36074 u=vagrant n=ansible | TASK [Check for a supported Operating System] **********************************
2025-03-29 23:14:45,011 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:14:45,112 p=36074 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:14:45,942 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:45,958 p=36074 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:14:45,984 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:14:46,012 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] ************
2025-03-29 23:14:46,110 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:46,129 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] ************************
2025-03-29 23:14:46,503 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:46,520 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] ***************************
2025-03-29 23:14:47,341 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:47,359 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ******************
2025-03-29 23:14:47,381 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:14:47,396 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ***
2025-03-29 23:14:47,950 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:47,965 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] ************
2025-03-29 23:14:47,994 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:14:48,011 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] ***********************
2025-03-29 23:14:48,395 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:48,493 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] *********************
2025-03-29 23:14:49,248 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:49,266 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *****************************
2025-03-29 23:14:49,332 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller
2025-03-29 23:14:49,352 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] ***************************
2025-03-29 23:14:49,480 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:49,496 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] *************************************
2025-03-29 23:14:49,870 p=36074 u=vagrant n=ansible | changed: [controller]
2025-03-29 23:14:49,887 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] **********************
2025-03-29 23:14:50,269 p=36074 u=vagrant n=ansible | changed: [controller -> localhost]
2025-03-29 23:14:50,284 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] ***********************
2025-03-29 23:14:51,731 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:51,749 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] ***
2025-03-29 23:14:51,810 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller
2025-03-29 23:14:51,832 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *****************
2025-03-29 23:14:52,197 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:14:52,213 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *****************
2025-03-29 23:14:52,321 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:14:52,337 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] ***
2025-03-29 23:14:52,710 p=36074 u=vagrant n=ansible | ok: [controller] => (item=uca.list)
2025-03-29 23:14:53,044 p=36074 u=vagrant n=ansible | ok: [controller] => (item=osbpo.list)
2025-03-29 23:14:53,061 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] ***
2025-03-29 23:15:04,060 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:04,080 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *******************************
2025-03-29 23:15:04,967 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:15:04,984 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] ************************************
2025-03-29 23:15:05,792 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:05,808 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] **************************************
2025-03-29 23:15:05,841 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:05,859 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *****************
2025-03-29 23:15:05,995 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/configure_metal_hosts.yml for controller
2025-03-29 23:15:06,022 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Check Kernel Version] **********************************
2025-03-29 23:15:06,057 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:06,082 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages for bare metal nodes] **********
2025-03-29 23:15:07,954 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:07,970 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages for bare metal nodes] ***
2025-03-29 23:15:07,997 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:08,013 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Check how kernel modules are implemented (statically builtin, dynamic, not set)] ***
2025-03-29 23:15:08,040 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:08,059 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Fail fast if we can't load a module] *******************
2025-03-29 23:15:08,088 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:08,109 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Load kernel module(s)] *********************************
2025-03-29 23:15:08,646 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': '8021q'})
2025-03-29 23:15:08,989 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'br_netfilter'})
2025-03-29 23:15:09,331 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_multipath'})
2025-03-29 23:15:09,665 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_snapshot'})
2025-03-29 23:15:09,997 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ebtables'})
2025-03-29 23:15:10,352 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6table_filter'})
2025-03-29 23:15:10,683 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6_tables'})
2025-03-29 23:15:11,016 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_tables'})
2025-03-29 23:15:11,364 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'xt_MASQUERADE'})
2025-03-29 23:15:11,701 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ipt_REJECT'})
2025-03-29 23:15:12,036 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_filter'})
2025-03-29 23:15:12,403 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_mangle'})
2025-03-29 23:15:12,752 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_nat'})
2025-03-29 23:15:13,126 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_vs'})
2025-03-29 23:15:13,464 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iscsi_tcp'})
2025-03-29 23:15:13,819 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nbd'})
2025-03-29 23:15:14,164 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_conntrack'})
2025-03-29 23:15:14,500 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_defrag_ipv4'})
2025-03-29 23:15:14,836 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_nat'})
2025-03-29 23:15:15,197 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vhost_net'})
2025-03-29 23:15:15,537 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'x_tables'})
2025-03-29 23:15:15,561 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Write list of modules to load at boot] *****************
2025-03-29 23:15:16,374 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:16,390 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Adding new system tuning] ******************************
2025-03-29 23:15:17,172 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_watches', 'value': 1048576})
2025-03-29 23:15:17,597 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2025-03-29 23:15:17,996 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2025-03-29 23:15:18,348 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.ip_forward', 'value': 1})
2025-03-29 23:15:18,681 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.netfilter.nf_conntrack_max', 'value': 262144})
2025-03-29 23:15:19,024 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_background_ratio', 'value': 5})
2025-03-29 23:15:19,384 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_ratio', 'value': 10})
2025-03-29 23:15:19,713 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.swappiness', 'value': 5})
2025-03-29 23:15:20,059 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2025-03-29 23:15:20,408 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2025-03-29 23:15:20,744 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-arptables', 'value': 1})
2025-03-29 23:15:21,083 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.igmp_max_memberships', 'value': 1024})
2025-03-29 23:15:21,429 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-29 23:15:21,770 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-29 23:15:22,121 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-29 23:15:22,453 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.route.gc_thresh', 'value': '16384'})
2025-03-29 23:15:22,791 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_interval', 'value': 60})
2025-03-29 23:15:23,135 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 23:15:23,468 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-29 23:15:23,820 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-29 23:15:24,187 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-29 23:15:24,535 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.route.gc_thresh', 'value': '16384'})
2025-03-29 23:15:24,878 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_interval', 'value': 60})
2025-03-29 23:15:25,233 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_stale_time', 'value': 120})
2025-03-29 23:15:25,559 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.conf.lo.disable_ipv6', 'value': 0})
2025-03-29 23:15:25,918 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.aio-max-nr', 'value': 131072})
2025-03-29 23:15:25,941 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Configure sysstat] *************************************
2025-03-29 23:15:25,990 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_sysstat.yml for controller
2025-03-29 23:15:26,009 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat config] *********************************
2025-03-29 23:15:26,805 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:26,821 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat cron] ***********************************
2025-03-29 23:15:27,639 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:27,658 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Start and enable the sysstat service] ******************
2025-03-29 23:15:27,684 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:27,700 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Create a directory to hold systemd journals on disk] ***
2025-03-29 23:15:28,089 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:28,109 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Create tmpfiles structure in journald directory] *******
2025-03-29 23:15:28,142 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:28,160 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] ************************
2025-03-29 23:15:28,522 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:28,538 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *******************************
2025-03-29 23:15:30,171 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:30,187 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] ************
2025-03-29 23:15:30,216 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:30,234 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] **********************************
2025-03-29 23:15:30,607 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:30,624 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] ***************************************
2025-03-29 23:15:30,662 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:30,677 p=36074 u=vagrant n=ansible | TASK [Including PKI role] ******************************************************
2025-03-29 23:15:30,747 p=36074 u=vagrant n=ansible | included: pki for controller
2025-03-29 23:15:30,776 p=36074 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-29 23:15:30,829 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:30,848 p=36074 u=vagrant n=ansible | TASK [pki : Install certificate authorities] ***********************************
2025-03-29 23:15:30,923 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller
2025-03-29 23:15:30,938 p=36074 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] **********
2025-03-29 23:15:31,306 p=36074 u=vagrant n=ansible | ok: [controller -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 23:15:31,324 p=36074 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *******************************
2025-03-29 23:15:32,137 p=36074 u=vagrant n=ansible | ok: [controller] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 23:15:32,157 p=36074 u=vagrant n=ansible | TASK [pki : Update CA store] ***************************************************
2025-03-29 23:15:32,191 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:32,222 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *******************
2025-03-29 23:15:32,330 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller
2025-03-29 23:15:32,364 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] ***************************************
2025-03-29 23:15:32,885 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:32,901 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ****************
2025-03-29 23:15:33,457 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:33,472 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] ************************
2025-03-29 23:15:33,509 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:33,524 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] ************
2025-03-29 23:15:33,546 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:33,562 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] ***************
2025-03-29 23:15:33,584 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:33,632 p=36074 u=vagrant n=ansible | TASK [Ensure deploy host SSH connection is reset] ******************************
2025-03-29 23:15:33,721 p=36074 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-29 23:15:33,830 p=36074 u=vagrant n=ansible | PLAY [Basic lxc host setup] ****************************************************
2025-03-29 23:15:33,852 p=36074 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:15:33,891 p=36074 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-29 23:15:33,917 p=36074 u=vagrant n=ansible | TASK [Check the state of the default LXC service log directory] ****************
2025-03-29 23:15:34,502 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:34,517 p=36074 u=vagrant n=ansible | TASK [Create the log aggregation parent directory] *****************************
2025-03-29 23:15:34,873 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:34,889 p=36074 u=vagrant n=ansible | TASK [Move the existing folder to the log aggregation parent] ******************
2025-03-29 23:15:34,923 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:34,940 p=36074 u=vagrant n=ansible | TASK [Create the new LXC service log directory] ********************************
2025-03-29 23:15:35,308 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:35,323 p=36074 u=vagrant n=ansible | TASK [Create the LXC service log aggregation link] *****************************
2025-03-29 23:15:35,674 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:35,785 p=36074 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:15:35,823 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:35,839 p=36074 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:15:35,866 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:35,895 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Gather variables for each operating system] ******************
2025-03-29 23:15:35,962 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:35,976 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Gather container variables] **********************************
2025-03-29 23:15:36,048 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:36,072 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_pre_install tasks] *****************************
2025-03-29 23:15:36,114 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_pre_install.yml for controller
2025-03-29 23:15:36,132 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Create base directories] *************************************
2025-03-29 23:15:36,501 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/lxc)
2025-03-29 23:15:36,816 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/usr/local/bin)
2025-03-29 23:15:37,161 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/network/interfaces.d)
2025-03-29 23:15:37,500 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/apparmor.d/lxc)
2025-03-29 23:15:37,832 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/usr/share/lxc/templates)
2025-03-29 23:15:38,180 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/openstack)
2025-03-29 23:15:38,532 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/openstack/backup)
2025-03-29 23:15:38,859 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/openstack/log)
2025-03-29 23:15:39,208 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/var/lib/lxc)
2025-03-29 23:15:39,534 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/var/cache/lxc/download)
2025-03-29 23:15:39,558 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_install tasks"] ********************************
2025-03-29 23:15:39,609 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_install_apt.yml for controller
2025-03-29 23:15:39,625 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Remove conflicting packages] *********************************
2025-03-29 23:15:40,761 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:40,777 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Install apt packages] ****************************************
2025-03-29 23:15:42,443 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:42,459 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Drop irqbalance config] **************************************
2025-03-29 23:15:43,266 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:43,292 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc-openstack apparmor profile] *************************
2025-03-29 23:15:44,062 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:44,082 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Flush handler to reload apparmor profiles] *******************
2025-03-29 23:15:44,114 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_post_install tasks] ****************************
2025-03-29 23:15:44,168 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_post_install.yml for controller
2025-03-29 23:15:44,188 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Ensure the lxc dnsmasq user exists] **************************
2025-03-29 23:15:44,906 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:44,923 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Drop base config file(s)] ************************************
2025-03-29 23:15:45,771 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-openstack.conf.j2', 'dest': '/etc/lxc/lxc-openstack.conf'})
2025-03-29 23:15:46,532 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-net.default.j2', 'dest': '/etc/default/lxc-net', 'mode': '0644'})
2025-03-29 23:15:47,317 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc.default.j2', 'dest': '/etc/default/lxc', 'mode': '0644'})
2025-03-29 23:15:48,082 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-system-manage.j2', 'dest': '/usr/local/bin/lxc-system-manage', 'mode': '0755'})
2025-03-29 23:15:48,107 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc veth check script] **********************************
2025-03-29 23:15:48,897 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:48,912 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Set systemd DefaultTasksMax value] ***************************
2025-03-29 23:15:49,521 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:49,540 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Set sshd MaxSessions] ****************************************
2025-03-29 23:15:49,931 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:49,947 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Tuning kernel for lxc] ***************************************
2025-03-29 23:15:50,326 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_instances', 'value': 1024})
2025-03-29 23:15:50,347 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_net tasks] *************************************
2025-03-29 23:15:50,406 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_net.yml for controller
2025-03-29 23:15:50,428 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Check if NetworkManager is running] **************************
2025-03-29 23:15:50,791 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:50,809 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Ensure network services wait on networking (if using NetworkManager)] ***
2025-03-29 23:15:50,831 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:50,848 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Disable and stop lxc-net] ************************************
2025-03-29 23:15:51,999 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:52,014 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Setup LXC OVS Bridge] ****************************************
2025-03-29 23:15:52,035 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:52,113 p=36074 u=vagrant n=ansible | TASK [Run the systemd-networkd role] *******************************************
2025-03-29 23:15:52,216 p=36074 u=vagrant n=ansible | included: systemd_networkd for controller
2025-03-29 23:15:52,233 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] ***********
2025-03-29 23:15:52,303 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:52,320 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] ***
2025-03-29 23:15:52,357 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:52,375 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] ***
2025-03-29 23:15:52,408 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:52,423 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] *************************************
2025-03-29 23:15:52,456 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:52,473 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] **************************
2025-03-29 23:15:52,504 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:52,522 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] *********************
2025-03-29 23:15:52,553 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:52,568 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] ********************
2025-03-29 23:15:52,941 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:15:52,958 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] ***********************
2025-03-29 23:15:52,984 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:53,003 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] ***************
2025-03-29 23:15:53,025 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:53,041 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] ************************
2025-03-29 23:15:53,066 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:53,083 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] ************
2025-03-29 23:15:53,923 p=36074 u=vagrant n=ansible | ok: [controller] => (item=[0, {'NetDev': {'Name': 'lxcbr0', 'Kind': 'bridge'}, 'Bridge': {'ForwardDelaySec': 0, 'HelloTimeSec': 2, 'MaxAgeSec': 12, 'STP': False}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 23:15:53,945 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] **************
2025-03-29 23:15:54,489 p=36074 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 23:15:54,506 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] ***********
2025-03-29 23:15:55,151 p=36074 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-29 23:15:55,172 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] **********
2025-03-29 23:15:55,230 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:55,249 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ****************
2025-03-29 23:15:55,303 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:55,318 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] ********************
2025-03-29 23:15:56,181 p=36074 u=vagrant n=ansible | changed: [controller]
2025-03-29 23:15:56,198 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-29 23:15:56,226 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] *************************
2025-03-29 23:15:56,303 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}]) 
2025-03-29 23:15:56,305 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:56,334 p=36074 u=vagrant n=ansible | TASK [Run the systemd-service role] ********************************************
2025-03-29 23:15:56,439 p=36074 u=vagrant n=ansible | included: systemd_service for controller
2025-03-29 23:15:56,475 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-29 23:15:56,908 p=36074 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 23:15:56,929 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-29 23:15:57,335 p=36074 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lock/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-29 23:15:57,355 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-29 23:15:57,394 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:57,410 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-29 23:15:58,254 p=36074 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-lxc-dnsmasq.conf"})
2025-03-29 23:15:58,271 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-29 23:15:58,915 p=36074 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/lxc-dnsmasq.service", "config_overrides": {"Unit": {"Before": "lxc.service"}, "Service": {"PIDFile": "/run/lxc/dnsmasq.pid"}}, "config_type": "ini"})
2025-03-29 23:15:58,937 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-29 23:15:58,980 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:59,059 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-29 23:15:59,110 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:59,126 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-29 23:15:59,162 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:59,178 p=36074 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-29 23:15:59,225 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:15:59,244 p=36074 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-29 23:15:59,309 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 23:15:59,338 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load service lxc-dnsmasq] ******************************
2025-03-29 23:16:00,019 p=36074 u=vagrant n=ansible | ok: [controller] => (item={"service_name": "lxc-dnsmasq"})
2025-03-29 23:16:00,048 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load timer lxc-dnsmasq] ********************************
2025-03-29 23:16:00,107 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq"}) 
2025-03-29 23:16:00,109 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:16:00,125 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-29 23:16:00,171 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:16:00,201 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Check Container Bridge exists] *******************************
2025-03-29 23:16:00,559 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:16:00,574 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] **********************************************
2025-03-29 23:16:00,600 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache tasks] ***********************************
2025-03-29 23:16:00,648 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache.yml for controller
2025-03-29 23:16:00,679 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Set LXC cache fact(s)] ***************************************
2025-03-29 23:16:00,737 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:16:00,753 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Retrieve the expiry object] **********************************
2025-03-29 23:16:01,108 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:16:01,124 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Set cache refresh fact] **************************************
2025-03-29 23:16:01,167 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:16:01,185 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_rootfs tasks] ****************************
2025-03-29 23:16:01,207 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:16:01,222 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_preparation tasks] ***********************
2025-03-29 23:16:01,244 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:16:01,260 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_create tasks] ****************************
2025-03-29 23:16:01,281 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:16:01,299 p=36074 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] **********************************************
2025-03-29 23:16:01,381 p=36074 u=vagrant n=ansible | PLAY [Set lxc containers group] ************************************************
2025-03-29 23:16:01,445 p=36074 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:16:01,554 p=36074 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:16:01,579 p=36074 u=vagrant n=ansible | TASK [Add hosts to dynamic inventory group] ************************************
2025-03-29 23:16:01,621 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 23:16:01,646 p=36074 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 23:16:01,669 p=36074 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 23:16:01,675 p=36074 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:16:01,700 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:16:01,867 p=36074 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-29 23:16:01,980 p=36074 u=vagrant n=ansible | PLAY [Create container(s)] *****************************************************
2025-03-29 23:16:02,002 p=36074 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:16:02,133 p=36074 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:16:02,205 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *******************
2025-03-29 23:16:02,679 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:16:02,699 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:16:03,115 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:16:03,156 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:16:03,496 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:16:03,504 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Check the physical_host variable is set] **********
2025-03-29 23:16:03,560 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:16:03,580 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:16:03,598 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:16:03,614 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:16:03,630 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:16:03,638 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Read custom facts from previous runs] *************
2025-03-29 23:16:06,192 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:16:06,222 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:16:08,193 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:16:08,236 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:16:10,064 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:16:10,074 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Check for lxc volume group] ***********************
2025-03-29 23:16:10,129 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:16:10,160 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:16:10,185 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:16:10,201 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:16:10,223 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:16:10,232 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : LXC VG check] *************************************
2025-03-29 23:16:10,272 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:16:10,288 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:16:10,305 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:16:10,310 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:16:10,324 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:16:10,332 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_destroy tasks] ************
2025-03-29 23:16:10,372 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:16:10,390 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:16:10,406 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:16:10,410 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:16:10,430 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:16:10,439 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks] *************
2025-03-29 23:16:10,558 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:16:10,570 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Container service directories] ********************
2025-03-29 23:16:11,022 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/controller-galera-container-f800b10b)
2025-03-29 23:16:11,075 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/controller-memcached-container-71b4149f)
2025-03-29 23:16:11,458 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/backup/controller-galera-container-f800b10b)
2025-03-29 23:16:11,487 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-memcached-container-71b4149f)
2025-03-29 23:16:11,857 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/log/controller-galera-container-f800b10b)
2025-03-29 23:16:11,887 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/log/controller-memcached-container-71b4149f)
2025-03-29 23:16:12,309 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-galera-container-f800b10b)
2025-03-29 23:16:12,352 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-memcached-container-71b4149f)
2025-03-29 23:16:12,768 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/controller-utility-container-7e5b64c5)
2025-03-29 23:16:12,866 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 23:16:13,216 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/backup/controller-utility-container-7e5b64c5)
2025-03-29 23:16:13,373 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/backup/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 23:16:13,673 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/log/controller-utility-container-7e5b64c5)
2025-03-29 23:16:13,755 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/log/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 23:16:14,085 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-utility-container-7e5b64c5)
2025-03-29 23:16:14,212 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c)
2025-03-29 23:16:14,537 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/controller-repo-container-79f4553f)
2025-03-29 23:16:14,933 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-repo-container-79f4553f)
2025-03-29 23:16:15,312 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/log/controller-repo-container-79f4553f)
2025-03-29 23:16:15,719 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-repo-container-79f4553f)
2025-03-29 23:16:15,738 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : LXC autodev setup] ********************************
2025-03-29 23:16:16,756 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:16:16,819 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:16:17,729 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:16:17,766 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:16:18,579 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:16:18,590 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks for dir] *****
2025-03-29 23:16:18,711 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create_dir.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:16:18,734 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create container (dir)] ***************************
2025-03-29 23:16:19,469 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:16:19,493 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:16:19,957 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:16:19,994 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:16:47,836 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:16:47,847 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Check container state] ****************************
2025-03-29 23:16:48,553 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:16:48,569 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:16:48,987 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:16:49,025 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:16:49,390 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:16:49,398 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Start the container if it is not already running] ***
2025-03-29 23:16:49,448 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:16:49,483 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:16:49,500 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:16:49,530 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:16:49,542 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:16:49,550 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_config tasks] *************
2025-03-29 23:16:49,777 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_config.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:16:49,809 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Write default container config] *******************
2025-03-29 23:16:50,220 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 23:16:50,240 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 23:16:50,601 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 23:16:50,641 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 23:16:51,044 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-galera-container-f800b10b/autodev)
2025-03-29 23:16:51,063 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-memcached-container-71b4149f/autodev)
2025-03-29 23:16:51,440 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 23:16:51,459 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 23:16:51,823 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 23:16:51,845 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 23:16:52,205 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 23:16:52,239 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 23:16:52,630 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 23:16:52,673 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 23:16:53,025 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 23:16:53,108 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 23:16:53,408 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-utility-container-7e5b64c5/autodev)
2025-03-29 23:16:53,535 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 23:16:53,914 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 23:16:54,049 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/autodev)
2025-03-29 23:16:54,396 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 23:16:54,433 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 23:16:54,795 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 23:16:54,820 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 23:16:55,217 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-29 23:16:55,569 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-29 23:16:55,960 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-repo-container-79f4553f/autodev)
2025-03-29 23:16:56,337 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-29 23:16:56,689 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-29 23:16:57,052 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-29 23:16:57,066 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Ensure containers have required auto mounts] ******
2025-03-29 23:16:57,486 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:16:57,528 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:16:57,902 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:16:57,936 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:16:58,336 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:16:58,344 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Ensure bind mount host directories exists] ********
2025-03-29 23:16:58,749 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 23:16:58,783 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 23:16:59,205 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 23:16:59,267 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 23:16:59,602 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-repo-container-79f4553f', 'container_directory': '/var/backup'})
2025-03-29 23:16:59,610 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] ********
2025-03-29 23:17:00,002 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-29 23:17:00,032 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-29 23:17:00,427 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-29 23:17:00,450 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-29 23:17:00,831 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-repo-container-79f4553f', 'container_directory': '/var/backup'})
2025-03-29 23:17:00,840 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create and start the container] *******************
2025-03-29 23:17:01,324 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:17:01,358 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:17:01,743 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:17:01,788 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:17:02,170 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:17:02,178 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Gather container facts] ***************************
2025-03-29 23:17:03,341 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:17:03,609 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:17:04,115 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:04,430 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:05,130 p=36074 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-repo-container-79f4553f is using
the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 23:17:05,130 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:17:05,137 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Drop container setup script] **********************
2025-03-29 23:17:06,390 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:17:06,466 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:17:07,561 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:07,626 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:08,783 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:17:08,795 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Drop container first run script] ******************
2025-03-29 23:17:09,815 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:17:09,873 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:17:10,746 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:17:10,851 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:17:11,680 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:17:11,690 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Execute first script] *****************************
2025-03-29 23:17:12,096 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:17:12,145 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:17:12,520 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:17:12,571 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:17:12,933 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:17:12,941 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create container mac script] **********************
2025-03-29 23:17:13,979 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:14,002 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:14,849 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:14,915 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:16,268 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:16,332 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:17,394 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:17,458 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:18,411 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:19,329 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:19,339 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Cleanup old mac scripts] **************************
2025-03-29 23:17:19,747 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:19,776 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:20,170 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:20,239 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:20,609 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:20,694 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:20,992 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:21,184 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:21,460 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:21,890 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:21,905 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Set define static mac address from an existing interface] ***
2025-03-29 23:17:22,353 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:22,387 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:22,877 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:22,879 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:23,439 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:23,453 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:24,053 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:24,103 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:24,562 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:25,036 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:25,049 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Gather hardware addresses to be used as facts] ****
2025-03-29 23:17:25,498 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:25,518 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:25,945 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:25,993 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:26,394 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:26,554 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:26,850 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:26,988 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:27,344 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:27,681 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:27,689 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Set fixed hardware address fact] ******************
2025-03-29 23:17:27,734 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6M2I6Y2M6ZjEK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,751 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6ZDA6YjM6Y2UK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,777 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ZjA6Njk6ZTQK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,787 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ODM6OWQ6YWYK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,840 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6YWM6ZDQ6ZWQK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,855 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6ZTE6Mjg6MWMK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,856 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6N2E6ZjU6NzgK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,888 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6N2Y6ZDI6ZjYK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,925 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'content': 'MDA6MTY6M2U6ZGI6ZGI6NzEK', 'source': '/var/lib/lxc/controller-repo-container-79f4553f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-repo-container-79f4553f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,942 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'content': 'MDA6MTY6M2U6Mzg6NTM6ODIK', 'source': '/var/lib/lxc/controller-repo-container-79f4553f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-repo-container-79f4553f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-29 23:17:27,953 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : LXC host config for container networks] ***********
2025-03-29 23:17:29,050 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 23:17:29,251 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 23:17:30,269 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 23:17:30,445 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 23:17:31,470 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 23:17:31,559 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 23:17:32,524 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 23:17:32,578 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 23:17:33,612 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-29 23:17:34,581 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-29 23:17:34,591 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Container network includes] ***********************
2025-03-29 23:17:35,046 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:35,081 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:35,526 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:35,554 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:36,102 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:36,159 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:36,531 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:36,614 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:37,064 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-29 23:17:37,465 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-29 23:17:37,476 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create wiring script] *****************************
2025-03-29 23:17:38,477 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:17:38,517 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:17:39,457 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:17:39,509 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:17:40,341 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:17:40,350 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Drop veth cleanup script] *************************
2025-03-29 23:17:41,368 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:17:41,505 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:17:42,522 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:17:42,637 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:17:43,557 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:17:43,569 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Defines a pre, post, and haltsignal configs] ******
2025-03-29 23:17:44,036 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 23:17:44,091 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 23:17:44,438 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-29 23:17:44,497 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-29 23:17:44,867 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 23:17:44,944 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 23:17:45,400 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 23:17:45,402 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 23:17:45,903 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-29 23:17:45,919 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-29 23:17:46,299 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 23:17:46,334 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 23:17:46,717 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-repo-container-79f4553f/veth-cleanup.sh)
2025-03-29 23:17:47,172 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-repo-container-79f4553f/veth-cleanup.sh)
2025-03-29 23:17:47,551 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-29 23:17:47,564 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Run veth wiring] **********************************
2025-03-29 23:17:47,632 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:47,674 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:47,697 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:47,716 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:47,739 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:47,749 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Run container veth wiring script] *****************
2025-03-29 23:17:47,835 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 23:17:47,855 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 23:17:47,856 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 23:17:47,868 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:47,891 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 23:17:47,901 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:47,946 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 23:17:47,967 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 23:17:47,972 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 23:17:47,982 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:47,995 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 23:17:47,997 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:48,042 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-29 23:17:48,061 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-29 23:17:48,063 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:48,073 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_network tasks] ************
2025-03-29 23:17:48,261 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_network.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:17:48,405 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] ***********
2025-03-29 23:17:48,492 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:17:48,521 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:17:48,565 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:48,596 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:48,635 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:17:48,648 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] ***
2025-03-29 23:17:48,719 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:48,740 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:48,773 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:48,787 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:48,816 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:48,826 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] ***
2025-03-29 23:17:48,866 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:48,896 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:48,918 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:48,923 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:48,946 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:48,956 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] *************************************
2025-03-29 23:17:49,003 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:49,028 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:49,050 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:49,062 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:49,083 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:49,096 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] **************************
2025-03-29 23:17:49,142 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:49,168 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:49,203 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:49,204 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:49,226 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:49,236 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] *********************
2025-03-29 23:17:49,279 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:49,320 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:49,346 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:49,348 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:49,368 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:49,377 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] ********************
2025-03-29 23:17:49,881 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:17:49,935 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:17:50,371 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:50,415 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:50,792 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:17:50,802 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] ***********************
2025-03-29 23:17:50,854 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:50,873 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:50,901 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:50,905 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:50,930 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:50,942 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] ***************
2025-03-29 23:17:50,994 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:51,025 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:51,040 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:51,044 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:51,062 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:51,071 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] ************************
2025-03-29 23:17:51,117 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:51,142 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:51,169 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:51,172 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:51,199 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:51,208 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] ************
2025-03-29 23:17:51,284 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:17:51,322 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:17:51,361 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:17:51,377 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:17:51,404 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:17:51,413 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] **************
2025-03-29 23:17:52,436 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:52,478 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:53,248 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:53,371 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:54,239 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:54,405 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:55,044 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:55,207 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:55,901 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:56,601 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:56,614 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] ***********
2025-03-29 23:17:57,720 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:57,793 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:58,588 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:58,779 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:59,651 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:17:59,881 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:18:00,507 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:18:00,739 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:18:01,465 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:18:02,209 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-29 23:18:02,225 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] **********
2025-03-29 23:18:02,749 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth1)
2025-03-29 23:18:02,773 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth1)
2025-03-29 23:18:03,223 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth0)
2025-03-29 23:18:03,255 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth0)
2025-03-29 23:18:03,770 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth1)
2025-03-29 23:18:03,822 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth1)
2025-03-29 23:18:04,196 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth0)
2025-03-29 23:18:04,267 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth0)
2025-03-29 23:18:04,682 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=eth1)
2025-03-29 23:18:05,089 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=eth0)
2025-03-29 23:18:05,105 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ****************
2025-03-29 23:18:06,309 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:06,352 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:07,426 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:07,589 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:08,732 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:08,868 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:09,903 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:10,050 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:11,249 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:12,485 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-29 23:18:12,498 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] ********************
2025-03-29 23:18:13,731 p=36074 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 23:18:13,768 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 23:18:14,931 p=36074 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:14,951 p=36074 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:16,109 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:18:16,119 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-29 23:18:16,127 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-29 23:18:16,136 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-29 23:18:16,145 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-29 23:18:16,153 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-29 23:18:16,181 p=36074 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Stop Container] ************************
2025-03-29 23:18:17,222 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:18:17,246 p=36074 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Start Container] ***********************
2025-03-29 23:18:18,345 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:18:18,374 p=36074 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Wait for container tmpfiles-setup finish] ***
2025-03-29 23:18:20,607 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:18:20,631 p=36074 u=vagrant n=ansible | RUNNING HANDLER [systemd_networkd : Restart networkd] **************************
2025-03-29 23:18:21,505 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:18:21,530 p=36074 u=vagrant n=ansible | RUNNING HANDLER [systemd_networkd : (RE)Gather facts post setup] ***************
2025-03-29 23:18:22,753 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:18:22,784 p=36074 u=vagrant n=ansible | RUNNING HANDLER [systemd_networkd : Update initramfs] **************************
2025-03-29 23:18:22,822 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:22,837 p=36074 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] *************************
2025-03-29 23:18:22,931 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:22,946 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:22,962 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:22,981 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:22,990 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:22,998 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:23,074 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:23,085 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:23,101 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:23,122 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:23,139 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:23,142 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:23,223 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:23,235 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-29 23:18:23,236 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:23,268 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create resolved link] *****************************
2025-03-29 23:18:23,814 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:18:23,838 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:18:24,400 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:24,494 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:24,909 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:18:24,918 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-29 23:18:25,514 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:25,577 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:26,053 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:26,112 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:26,662 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:26,736 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:27,139 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:27,205 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:27,721 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:28,198 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:28,209 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-29 23:18:28,910 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:28,951 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:29,396 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:29,450 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:29,987 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:30,070 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:30,531 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:30,589 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:31,089 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:31,582 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-29 23:18:31,597 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-29 23:18:32,174 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 23:18:32,241 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 23:18:32,791 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 23:18:32,834 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 23:18:33,380 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-29 23:18:33,392 p=36074 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-29 23:18:34,874 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 23:18:34,966 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 23:18:36,460 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 23:18:36,829 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 23:18:38,010 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 23:18:38,219 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 23:18:39,486 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 23:18:39,730 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 23:18:40,788 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-29 23:18:41,983 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-29 23:18:41,992 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-29 23:18:43,038 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 23:18:43,137 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 23:18:44,037 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 23:18:44,173 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 23:18:44,962 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-29 23:18:44,975 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-29 23:18:46,460 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 23:18:46,497 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 23:18:47,795 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 23:18:47,880 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 23:18:49,172 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-29 23:18:49,185 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-29 23:18:49,289 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:49,342 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:49,403 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:49,446 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:49,482 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:49,490 p=36074 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-29 23:18:49,568 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:49,600 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:49,641 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:49,679 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:49,698 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:49,706 p=36074 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-29 23:18:49,758 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:49,786 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:49,826 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:49,846 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:50,902 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:18:50,914 p=36074 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-29 23:18:51,304 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f => (item={"service_name": "sysctl-container"})
2025-03-29 23:18:51,316 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f => (item={"service_name": "systemd-hostnamed"})
2025-03-29 23:18:51,401 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load service sysctl-container] *************************
2025-03-29 23:18:52,302 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"})
2025-03-29 23:18:52,347 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"})
2025-03-29 23:18:53,090 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"})
2025-03-29 23:18:53,218 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"})
2025-03-29 23:18:54,536 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container"})
2025-03-29 23:18:54,574 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load timer sysctl-container] ***************************
2025-03-29 23:18:54,654 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"}) 
2025-03-29 23:18:54,666 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:54,703 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"}) 
2025-03-29 23:18:54,712 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:54,749 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"}) 
2025-03-29 23:18:54,761 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:54,798 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"}) 
2025-03-29 23:18:54,802 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:54,830 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container"}) 
2025-03-29 23:18:54,835 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:54,855 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load service systemd-hostnamed] ************************
2025-03-29 23:18:55,951 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 23:18:55,996 p=36074 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 23:18:57,078 p=36074 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 23:18:57,122 p=36074 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 23:18:58,098 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-hostnamed"})
2025-03-29 23:18:58,123 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load timer systemd-hostnamed] **************************
2025-03-29 23:18:58,197 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 23:18:58,209 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:58,224 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 23:18:58,233 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:58,267 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 23:18:58,276 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:58,305 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 23:18:58,308 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:58,338 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-29 23:18:58,342 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:58,355 p=36074 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-29 23:18:58,476 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:18:58,501 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:18:58,568 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:58,615 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:18:58,661 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:18:58,692 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Add global_environment_variables to environment file] ***
2025-03-29 23:18:59,262 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 23:18:59,302 p=36074 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 23:18:59,776 p=36074 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 23:18:59,826 p=36074 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:00,265 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:00,273 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create localhost config] **************************
2025-03-29 23:19:00,730 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:00,779 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:01,213 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:01,252 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:01,668 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:01,676 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Set hostnamectl name] *****************************
2025-03-29 23:19:01,720 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:19:01,745 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:19:01,775 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:01,788 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:02,219 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:02,228 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Generate machine-id] ******************************
2025-03-29 23:19:02,656 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:02,717 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:03,143 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:03,296 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:03,555 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:03,567 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Ensure the dbus directory exists] *****************
2025-03-29 23:19:04,074 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:04,180 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:04,570 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:04,667 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:05,067 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:05,076 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Create dbus machine-id] ***************************
2025-03-29 23:19:05,886 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:05,933 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:07,072 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:07,099 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:07,800 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:07,810 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Retrieve the machine-id] **************************
2025-03-29 23:19:08,326 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:08,349 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:08,762 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:08,794 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:09,212 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:09,244 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Set bind mount for journal linking] ***************
2025-03-29 23:19:09,297 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:09,336 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:09,361 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:09,379 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:09,410 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:09,419 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Ensure journal directory exists] ******************
2025-03-29 23:19:09,863 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=controller)
2025-03-29 23:19:09,995 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=controller)
2025-03-29 23:19:10,330 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=controller-galera-container-f800b10b)
2025-03-29 23:19:10,461 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=controller-memcached-container-71b4149f)
2025-03-29 23:19:10,780 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=controller)
2025-03-29 23:19:10,910 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=controller)
2025-03-29 23:19:11,225 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=controller-utility-container-7e5b64c5)
2025-03-29 23:19:11,401 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=controller-rabbit-mq-container-6f8ad97c)
2025-03-29 23:19:11,655 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=controller)
2025-03-29 23:19:12,067 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=controller-repo-container-79f4553f)
2025-03-29 23:19:12,079 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] ********
2025-03-29 23:19:12,533 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-29 23:19:12,570 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-29 23:19:13,017 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-29 23:19:13,036 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-29 23:19:13,477 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:19:13,486 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *******************
2025-03-29 23:19:14,004 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:14,036 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:14,544 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:14,563 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:14,983 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:14,991 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Record the container variant deployed] ************
2025-03-29 23:19:15,749 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:15,773 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:16,257 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:16,388 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:16,708 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:16,718 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-29 23:19:16,726 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-29 23:19:16,733 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-29 23:19:16,741 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-29 23:19:16,752 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-29 23:19:16,780 p=36074 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Enable resolved] ***********************
2025-03-29 23:19:17,802 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:17,837 p=36074 u=vagrant n=ansible | RUNNING HANDLER [lxc_container_create : Enable dbus] ***************************
2025-03-29 23:19:18,855 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:18,946 p=36074 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed services] *******************
2025-03-29 23:19:19,009 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container.service"}) 
2025-03-29 23:19:19,011 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:19:19,019 p=36074 u=vagrant n=ansible | TASK [lxc_container_create : (RE)Gather facts post setup] **********************
2025-03-29 23:19:20,240 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:20,430 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:21,474 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:21,598 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:22,598 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:22,714 p=36074 u=vagrant n=ansible | TASK [Wait for container connectivity] *****************************************
2025-03-29 23:19:26,677 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:26,705 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:30,435 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:30,451 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:34,136 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:34,150 p=36074 u=vagrant n=ansible | TASK [Clear facts for new container(s)] ****************************************
2025-03-29 23:19:34,193 p=36074 u=vagrant n=ansible | PLAY [Gather lxc containers facts] *********************************************
2025-03-29 23:19:34,204 p=36074 u=vagrant n=ansible | TASK [Gathering Facts] *********************************************************
2025-03-29 23:19:35,512 p=36074 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-memcached-container-71b4149f is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 23:19:35,513 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:35,674 p=36074 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-galera-container-f800b10b is using
the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 23:19:35,674 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:36,855 p=36074 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-utility-container-7e5b64c5 is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 23:19:36,856 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:37,189 p=36074 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-rabbit-mq-container-6f8ad97c is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-29 23:19:37,189 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:38,220 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:38,385 p=36074 u=vagrant n=ansible | PLAY [Configure containers default software] ***********************************
2025-03-29 23:19:38,417 p=36074 u=vagrant n=ansible | TASK [Check for a supported Operating System] **********************************
2025-03-29 23:19:38,491 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:19:38,514 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:19:38,544 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:19:38,570 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:19:38,594 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:19:38,602 p=36074 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:19:38,723 p=36074 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:19:38,790 p=36074 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:19:40,128 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:40,268 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:41,485 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:41,590 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:42,593 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:42,601 p=36074 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:19:42,648 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:19:42,667 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:19:42,694 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:42,698 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:42,716 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:19:42,746 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] ************
2025-03-29 23:19:42,828 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:42,872 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:42,958 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:42,961 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:43,015 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:43,022 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] ************************
2025-03-29 23:19:43,505 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:43,543 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:43,989 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:44,014 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:44,448 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:19:44,456 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] ***************************
2025-03-29 23:19:45,659 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:45,698 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:46,903 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:46,922 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:48,146 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:48,156 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ******************
2025-03-29 23:19:48,195 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:19:48,215 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:19:48,237 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:48,248 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:48,262 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:19:48,269 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ***
2025-03-29 23:19:48,801 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 23:19:48,874 p=36074 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 23:19:49,319 p=36074 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:49,422 p=36074 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:49,819 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:49,828 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] ************
2025-03-29 23:19:49,871 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:19:49,898 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:19:49,918 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:49,925 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:49,948 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:19:49,956 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] ***********************
2025-03-29 23:19:50,445 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:50,473 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:50,921 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:50,949 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:51,374 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:51,381 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] *********************
2025-03-29 23:19:52,224 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:52,261 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:53,029 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:53,070 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:53,764 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:53,773 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *****************************
2025-03-29 23:19:53,984 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:19:54,035 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] ***************************
2025-03-29 23:19:54,164 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:54,173 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] *************************************
2025-03-29 23:19:54,675 p=36074 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-29 23:19:54,723 p=36074 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-29 23:19:55,176 p=36074 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:55,244 p=36074 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:19:55,681 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:19:55,689 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] **********************
2025-03-29 23:19:56,085 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 23:19:56,097 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] ***********************
2025-03-29 23:19:57,583 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:19:57,679 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:19:59,300 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:19:59,419 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:07,776 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:20:07,784 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] ***
2025-03-29 23:20:07,955 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:20:08,011 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *****************
2025-03-29 23:20:08,540 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:08,636 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:09,048 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:09,138 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:09,518 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:20:09,526 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *****************
2025-03-29 23:20:09,657 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:20:09,699 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:20:09,761 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:20:09,806 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:20:09,859 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:20:09,867 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] ***
2025-03-29 23:20:10,419 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=uca.list)
2025-03-29 23:20:10,435 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=uca.list)
2025-03-29 23:20:10,920 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=osbpo.list)
2025-03-29 23:20:10,959 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=osbpo.list)
2025-03-29 23:20:11,438 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=uca.list)
2025-03-29 23:20:11,505 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=uca.list)
2025-03-29 23:20:11,910 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=osbpo.list)
2025-03-29 23:20:11,999 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=osbpo.list)
2025-03-29 23:20:12,372 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=uca.list)
2025-03-29 23:20:12,848 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=osbpo.list)
2025-03-29 23:20:12,859 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] ***
2025-03-29 23:20:20,463 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:21,712 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:29,688 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:31,340 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:36,615 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:20:36,626 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *******************************
2025-03-29 23:20:37,474 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:20:37,600 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:20:38,302 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:20:38,475 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:20:38,990 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:20:39,000 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] ************************************
2025-03-29 23:20:40,228 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:40,328 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:41,452 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:41,589 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:42,499 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:20:42,509 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] **************************************
2025-03-29 23:20:42,565 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:20:42,591 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:20:42,622 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:42,631 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:42,654 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:20:42,662 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *****************
2025-03-29 23:20:42,709 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:20:42,732 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:20:42,761 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:42,774 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:42,822 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:20:42,829 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] ************************
2025-03-29 23:20:43,341 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:43,362 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:43,823 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:43,840 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:44,259 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:20:44,270 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *******************************
2025-03-29 23:20:46,464 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:46,962 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:49,044 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:49,624 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:54,321 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:20:54,330 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] ************
2025-03-29 23:20:54,378 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:20:54,401 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:20:54,434 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:54,438 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:54,461 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:20:54,470 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] **********************************
2025-03-29 23:20:54,982 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:55,036 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:55,464 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:55,508 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:55,958 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:20:55,968 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] ***************************************
2025-03-29 23:20:56,027 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:20:56,055 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:20:56,084 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:56,096 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:56,120 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:20:56,129 p=36074 u=vagrant n=ansible | TASK [Including PKI role] ******************************************************
2025-03-29 23:20:56,331 p=36074 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:20:56,407 p=36074 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-29 23:20:56,475 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:20:56,511 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:20:56,547 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:20:56,563 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:20:56,594 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:20:56,603 p=36074 u=vagrant n=ansible | TASK [pki : Install certificate authorities] ***********************************
2025-03-29 23:20:56,922 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:20:56,939 p=36074 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] **********
2025-03-29 23:20:57,341 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-29 23:20:57,351 p=36074 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *******************************
2025-03-29 23:20:58,603 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 23:20:58,646 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 23:20:59,841 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 23:20:59,935 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 23:21:01,072 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-29 23:21:01,084 p=36074 u=vagrant n=ansible | TASK [pki : Update CA store] ***************************************************
2025-03-29 23:21:01,144 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:21:01,177 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:21:01,203 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:21:01,227 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:21:03,416 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:21:03,453 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *******************
2025-03-29 23:21:03,585 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-29 23:21:03,670 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] ***************************************
2025-03-29 23:21:04,168 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:21:04,200 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:21:04,710 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:21:04,711 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:21:05,131 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:21:05,141 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ****************
2025-03-29 23:21:05,729 p=36074 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:21:05,780 p=36074 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:21:06,659 p=36074 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:21:06,751 p=36074 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:21:07,176 p=36074 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:21:07,186 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] ************************
2025-03-29 23:21:07,249 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:21:07,292 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:21:07,329 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:21:07,336 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:21:07,371 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:21:07,379 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] ************
2025-03-29 23:21:07,418 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:21:07,442 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:21:07,465 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:21:07,470 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:21:07,487 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:21:07,496 p=36074 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] ***************
2025-03-29 23:21:07,537 p=36074 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:21:07,559 p=36074 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:21:07,578 p=36074 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:21:07,588 p=36074 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:21:07,605 p=36074 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:21:07,698 p=36074 u=vagrant n=ansible | RUNNING HANDLER [openstack_hosts : Systemd daemon reload] **********************
2025-03-29 23:21:08,753 p=36074 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:21:08,831 p=36074 u=vagrant n=ansible | PLAY [Gather security hardening facts] *****************************************
2025-03-29 23:21:08,985 p=36074 u=vagrant n=ansible | TASK [Gather additional facts] *************************************************
2025-03-29 23:21:09,041 p=36074 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller
2025-03-29 23:21:09,059 p=36074 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] **************
2025-03-29 23:21:10,743 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:10,858 p=36074 u=vagrant n=ansible | PLAY [Apply security hardening configurations] *********************************
2025-03-29 23:21:10,921 p=36074 u=vagrant n=ansible | TASK [Include security hardening role] *****************************************
2025-03-29 23:21:11,624 p=36074 u=vagrant n=ansible | included: ansible-hardening for controller
2025-03-29 23:21:11,638 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Gather variables for each operating system] **********
2025-03-29 23:21:11,730 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:11,748 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for check/audit mode] **************************
2025-03-29 23:21:12,209 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:12,231 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if we are booting with EFI or UEFI] *****
2025-03-29 23:21:12,300 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:12,320 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set facts] *******************************************
2025-03-29 23:21:12,387 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:12,485 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if grub is present on the remote node] *********
2025-03-29 23:21:12,959 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:12,981 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Create temporary directory to hold any temporary files] ***
2025-03-29 23:21:13,552 p=36074 u=vagrant n=ansible | changed: [controller]
2025-03-29 23:21:13,577 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set a fact for the temporary directory] **************
2025-03-29 23:21:13,619 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:13,646 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Verify all installed RPM packages] *******************
2025-03-29 23:21:13,691 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:13,710 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Locate top level directories to check for .shosts] ***
2025-03-29 23:21:13,739 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:13,758 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for .shosts or shosts.equiv files] *************
2025-03-29 23:21:13,785 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:13,804 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all users on the system] ***********
2025-03-29 23:21:14,451 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:14,485 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all interactive users on the system] ***
2025-03-29 23:21:14,895 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:14,913 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Install EPEL repository] *****************************
2025-03-29 23:21:14,943 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:14,965 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Add packages based on STIG requirements] *************
2025-03-29 23:21:16,937 p=36074 u=vagrant n=ansible | ok: [controller] => (item=present)
2025-03-29 23:21:16,959 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove packages based on STIG requirements] **********
2025-03-29 23:21:18,303 p=36074 u=vagrant n=ansible | ok: [controller] => (item=absent)
2025-03-29 23:21:18,322 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Including OS-specific tasks] *************************
2025-03-29 23:21:18,428 p=36074 u=vagrant n=ansible | included: /etc/ansible/roles/ansible-hardening/tasks/rhel7stig/apt.yml for controller
2025-03-29 23:21:18,610 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure debsums is installed] *************************
2025-03-29 23:21:18,642 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:18,662 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Gather debsums report] *******************************
2025-03-29 23:21:18,692 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:18,708 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Get files with invalid checksums (apt)] ****
2025-03-29 23:21:18,738 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:18,755 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Create comma-separated list] ***************
2025-03-29 23:21:18,785 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:18,807 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - The cryptographic hash of system files and commands must match vendor values (apt)] ***
2025-03-29 23:21:18,835 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:18,853 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Search for AllowUnauthenticated in /etc/apt/apt.conf.d/] ***
2025-03-29 23:21:19,235 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:19,252 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71977 - Package management tool must verify authenticity of packages] ***
2025-03-29 23:21:19,280 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:19,303 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71979 - Package management tool must verify authenticity of locally-installed packages] ***
2025-03-29 23:21:19,697 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:19,716 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71987 - Clean requirements/dependencies when removing packages (dpkg)] ***
2025-03-29 23:21:19,743 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:19,761 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Enable automatic package updates (apt)] **************
2025-03-29 23:21:19,805 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:19,829 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/security/pwquality.conf exists] ********
2025-03-29 23:21:20,310 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:20,332 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set password quality requirements] *******************
2025-03-29 23:21:20,836 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:20,857 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for SHA512 password storage in PAM] ************
2025-03-29 23:21:21,298 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:21,317 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Print warning if PAM is not using SHA512 for password storage] ***
2025-03-29 23:21:21,391 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "PAM is not using SHA512 for password storage. This is a security issue.\n"
}
2025-03-29 23:21:21,413 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure libuser is storing passwords using SHA512] ****
2025-03-29 23:21:21,455 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:21,478 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set minimum password lifetime limit to 24 hours for interactive accounts] ***
2025-03-29 23:21:21,543 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,563 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,578 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,592 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,595 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:21,615 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set maximum password lifetime limit to 60 days for interactive accounts] ***
2025-03-29 23:21:21,671 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,682 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,695 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,706 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:21,708 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:21,727 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure that users cannot reuse one of their last 5 passwords] ***
2025-03-29 23:21:21,763 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:21,781 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure accounts are disabled if the password expires] ***
2025-03-29 23:21:21,805 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:21,834 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Apply shadow-utils configurations] *******************
2025-03-29 23:21:22,320 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'ENCRYPT_METHOD', 'value': 'SHA512', 'stig_id': 'V-71921', 'os_family': 'all'})
2025-03-29 23:21:22,326 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MIN_DAYS', 'value': '', 'stig_id': 'V-71925', 'os_family': 'all'}) 
2025-03-29 23:21:22,333 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MAX_DAYS', 'value': '', 'stig_id': 'V-71929', 'os_family': 'all'}) 
2025-03-29 23:21:22,347 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'FAIL_DELAY', 'value': '4', 'stig_id': 'V-71951', 'os_family': 'RedHat'}) 
2025-03-29 23:21:22,354 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'UMASK', 'value': '', 'stig_id': 'V-71995', 'os_family': 'all'}) 
2025-03-29 23:21:22,777 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'CREATE_HOME', 'value': 'yes', 'stig_id': 'V-72013', 'os_family': 'all'})
2025-03-29 23:21:22,796 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for groups in /etc/passwd that are not in /etc/group] ***
2025-03-29 23:21:22,855 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:22,958 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Get all accounts with UID 0] *************************
2025-03-29 23:21:23,372 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:23,390 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Print warnings for non-root users with UID 0] ********
2025-03-29 23:21:23,420 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:23,438 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for local interactive users without a home directory assigned] ***
2025-03-29 23:21:23,501 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:23,520 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check each user to see if its home directory exists on the filesystem] ***
2025-03-29 23:21:23,958 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'root', 'uid': 0, 'gid': 0, 'gecos': 'root', 'dir': '/root', 'shell': '/bin/bash', 'group': {'name': 'root', 'passwd': 'x', 'gid': 0}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:24,372 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'daemon', 'uid': 1, 'gid': 1, 'gecos': 'daemon', 'dir': '/usr/sbin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:24,752 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'bin', 'uid': 2, 'gid': 2, 'gecos': 'bin', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'bin', 'passwd': 'x', 'gid': 2}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:25,129 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sys', 'uid': 3, 'gid': 3, 'gecos': 'sys', 'dir': '/dev', 'shell': '/usr/sbin/nologin', 'group': {'name': 'sys', 'passwd': 'x', 'gid': 3}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:25,503 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sync', 'uid': 4, 'gid': 65534, 'gecos': 'sync', 'dir': '/bin', 'shell': '/bin/sync', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:25,879 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'games', 'uid': 5, 'gid': 60, 'gecos': 'games', 'dir': '/usr/games', 'shell': '/usr/sbin/nologin', 'group': {'name': 'games', 'passwd': 'x', 'gid': 60}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:26,269 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'man', 'uid': 6, 'gid': 12, 'gecos': 'man', 'dir': '/var/cache/man', 'shell': '/usr/sbin/nologin', 'group': {'name': 'man', 'passwd': 'x', 'gid': 12}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:26,615 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lp', 'uid': 7, 'gid': 7, 'gecos': 'lp', 'dir': '/var/spool/lpd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'lp', 'passwd': 'x', 'gid': 7}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:26,978 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'mail', 'uid': 8, 'gid': 8, 'gecos': 'mail', 'dir': '/var/mail', 'shell': '/usr/sbin/nologin', 'group': {'name': 'mail', 'passwd': 'x', 'gid': 8}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:27,358 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'news', 'uid': 9, 'gid': 9, 'gecos': 'news', 'dir': '/var/spool/news', 'shell': '/usr/sbin/nologin', 'group': {'name': 'news', 'passwd': 'x', 'gid': 9}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:27,730 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uucp', 'uid': 10, 'gid': 10, 'gecos': 'uucp', 'dir': '/var/spool/uucp', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uucp', 'passwd': 'x', 'gid': 10}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:28,094 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'proxy', 'uid': 13, 'gid': 13, 'gecos': 'proxy', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'proxy', 'passwd': 'x', 'gid': 13}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:28,441 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'www-data', 'uid': 33, 'gid': 33, 'gecos': 'www-data', 'dir': '/var/www', 'shell': '/usr/sbin/nologin', 'group': {'name': 'www-data', 'passwd': 'x', 'gid': 33}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:28,826 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'backup', 'uid': 34, 'gid': 34, 'gecos': 'backup', 'dir': '/var/backups', 'shell': '/usr/sbin/nologin', 'group': {'name': 'backup', 'passwd': 'x', 'gid': 34}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:29,174 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'list', 'uid': 38, 'gid': 38, 'gecos': 'Mailing List Manager', 'dir': '/var/list', 'shell': '/usr/sbin/nologin', 'group': {'name': 'list', 'passwd': 'x', 'gid': 38}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:29,511 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'irc', 'uid': 39, 'gid': 39, 'gecos': 'ircd', 'dir': '/run/ircd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'irc', 'passwd': 'x', 'gid': 39}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:29,854 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'gnats', 'uid': 41, 'gid': 41, 'gecos': 'Gnats Bug-Reporting System (admin)', 'dir': '/var/lib/gnats', 'shell': '/usr/sbin/nologin', 'group': {'name': 'gnats', 'passwd': 'x', 'gid': 41}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:30,259 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:30,611 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-network', 'uid': 100, 'gid': 102, 'gecos': 'systemd Network Management,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-network', 'passwd': 'x', 'gid': 102}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:31,025 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-resolve', 'uid': 101, 'gid': 103, 'gecos': 'systemd Resolver,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-resolve', 'passwd': 'x', 'gid': 103}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:31,389 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'messagebus', 'uid': 102, 'gid': 105, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'messagebus', 'passwd': 'x', 'gid': 105}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:31,748 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-timesync', 'uid': 103, 'gid': 106, 'gecos': 'systemd Time Synchronization,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-timesync', 'passwd': 'x', 'gid': 106}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:32,100 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'syslog', 'uid': 104, 'gid': 111, 'gecos': '', 'dir': '/home/syslog', 'shell': '/usr/sbin/nologin', 'group': {'name': 'syslog', 'passwd': 'x', 'gid': 111}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:32,437 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': '_apt', 'uid': 105, 'gid': 65534, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:32,812 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tss', 'uid': 106, 'gid': 112, 'gecos': 'TPM software stack,,,', 'dir': '/var/lib/tpm', 'shell': '/bin/false', 'group': {'name': 'tss', 'passwd': 'x', 'gid': 112}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:33,186 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uuidd', 'uid': 107, 'gid': 113, 'gecos': '', 'dir': '/run/uuidd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uuidd', 'passwd': 'x', 'gid': 113}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:33,544 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tcpdump', 'uid': 108, 'gid': 114, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'tcpdump', 'passwd': 'x', 'gid': 114}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:33,914 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sshd', 'uid': 109, 'gid': 65534, 'gecos': '', 'dir': '/run/sshd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:34,320 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'pollinate', 'uid': 110, 'gid': 1, 'gecos': '', 'dir': '/var/cache/pollinate', 'shell': '/bin/false', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:34,764 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'landscape', 'uid': 111, 'gid': 116, 'gecos': '', 'dir': '/var/lib/landscape', 'shell': '/usr/sbin/nologin', 'group': {'name': 'landscape', 'passwd': 'x', 'gid': 116}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:35,188 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'fwupd-refresh', 'uid': 112, 'gid': 117, 'gecos': 'fwupd-refresh user,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'fwupd-refresh', 'passwd': 'x', 'gid': 117}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:35,660 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:36,092 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:36,509 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:36,941 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dnsmasq', 'uid': 113, 'gid': 65534, 'gecos': 'dnsmasq,,,', 'dir': '/var/lib/misc', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:37,359 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxc-dnsmasq', 'uid': 114, 'gid': 121, 'gecos': 'LXC dnsmasq', 'dir': '/var/lib/lxc', 'shell': '/bin/false', 'group': {'name': 'lxc-dnsmasq', 'passwd': 'x', 'gid': 121}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:37,803 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': '_chrony', 'uid': 115, 'gid': 122, 'gecos': 'Chrony daemon,,,', 'dir': '/var/lib/chrony', 'shell': '/usr/sbin/nologin', 'group': {'name': '_chrony', 'passwd': 'x', 'gid': 122}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:38,222 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'postfix', 'uid': 116, 'gid': 124, 'gecos': '', 'dir': '/var/spool/postfix', 'shell': '/usr/sbin/nologin', 'group': {'name': 'postfix', 'passwd': 'x', 'gid': 124}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-29 23:21:38,282 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for users with an assigned home directory that does not exist] ***
2025-03-29 23:21:38,363 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "These users have a home directory assigned, but the directory does not exist:\nlp (/var/spool/lpd does not exist)\nnews (/var/spool/news does not exist)\nuucp (/var/spool/uucp does not exist)\nwww-data (/var/www does not exist)\nlist (/var/list does not exist)\nirc (/run/ircd does not exist)\ngnats (/var/lib/gnats does not exist)\nnobody (/nonexistent does not exist)\nmessagebus (/nonexistent does not exist)\nsyslog (/home/syslog does not exist)\n_apt (/nonexistent does not exist)\ntcpdump (/nonexistent does not exist)\n"
}
2025-03-29 23:21:38,381 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Use pwquality when passwords are changed or created] ***
2025-03-29 23:21:38,409 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:38,427 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Verify that AIDE configuration directory exists] *****
2025-03-29 23:21:39,037 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide/aide.conf.d)
2025-03-29 23:21:39,498 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide.conf)
2025-03-29 23:21:39,535 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Exclude certain directories from AIDE] ***************
2025-03-29 23:21:40,820 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:40,843 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (Ubuntu)] ***
2025-03-29 23:21:41,345 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:41,367 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (SUSE)] ***
2025-03-29 23:21:41,405 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:41,435 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if AIDE database is already in place] ***
2025-03-29 23:21:42,010 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:42,029 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Initialize AIDE (this will take a few minutes)] ******
2025-03-29 23:21:42,070 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:42,089 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Move AIDE database into place] ***********************
2025-03-29 23:21:42,130 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:42,153 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Create AIDE cron job] ********************************
2025-03-29 23:21:42,190 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:42,211 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Verify that auditd.conf exists] **********************
2025-03-29 23:21:42,639 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:42,658 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Verify that audisp-remote.conf exists] ***************
2025-03-29 23:21:43,084 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:43,105 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72083 - The operating system must off-load audit records onto a different system or media from the system being audited] ***
2025-03-29 23:21:43,144 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:43,167 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72085 - The operating system must encrypt the transfer of audit records off-loaded onto a different system or media from the system being audited] ***
2025-03-29 23:21:43,209 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:43,226 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Get valid system architectures for audit rules] ******
2025-03-29 23:21:43,271 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:43,288 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove system default audit.rules file] **************
2025-03-29 23:21:43,688 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:43,710 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove old RHEL 6 audit rules file] ******************
2025-03-29 23:21:44,125 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:44,142 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Deploy rules for auditd based on STIG requirements] ***
2025-03-29 23:21:45,178 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:45,199 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Adjust auditd/audispd configurations] ****************
2025-03-29 23:21:45,279 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'disk_full_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-29 23:21:45,287 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'network_failure_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-29 23:21:45,294 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left', 'value': '9907', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 23:21:45,301 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left_action', 'value': 'email', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 23:21:45,308 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'action_mail_acct', 'value': 'root', 'config': '/etc/audit/auditd.conf'}) 
2025-03-29 23:21:45,310 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:45,330 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure auditd is running and enabled at boot time] ***
2025-03-29 23:21:46,048 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:46,069 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set pam_faildelay configuration on Ubuntu] ***********
2025-03-29 23:21:46,475 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:46,495 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Debian/Ubuntu)] ***
2025-03-29 23:21:46,875 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:46,902 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Red Hat)] ***
2025-03-29 23:21:46,950 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-auth']) 
2025-03-29 23:21:46,959 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-password']) 
2025-03-29 23:21:46,971 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-auth']) 
2025-03-29 23:21:46,983 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-password']) 
2025-03-29 23:21:46,984 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:47,004 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (SUSE)] ***
2025-03-29 23:21:47,045 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-auth) 
2025-03-29 23:21:47,056 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-password) 
2025-03-29 23:21:47,062 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:47,079 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Lock accounts after three failed login attempts a 15 minute period] ***
2025-03-29 23:21:47,111 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:47,132 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for 'nopasswd' in sudoers files] ***************
2025-03-29 23:21:47,525 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:47,547 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71947 - Users must provide a password for privilege escalation.] ***
2025-03-29 23:21:47,605 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The 'NOPASSWD' directive was found in the sudoers configuration files. Remove the directive to ensure that all users must provide a password to run commands as the root user.\n"
}
2025-03-29 23:21:47,628 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for '!authenticate' in sudoers files] **********
2025-03-29 23:21:48,015 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:48,035 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71949 - Users must re-authenticate for privilege escalation.] ***
2025-03-29 23:21:48,186 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:48,283 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if sssd.conf exists] ***************************
2025-03-29 23:21:48,657 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:48,687 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if GRUB2 custom file exists] *******************
2025-03-29 23:21:49,101 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:49,118 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Define password options for grub] ********************
2025-03-29 23:21:49,151 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:49,173 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set CLASS for grub file] *****************************
2025-03-29 23:21:49,208 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:49,232 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72217 - The operating system must limit the number of concurrent sessions to 10 for all accounts and/or account types.] ***
2025-03-29 23:21:49,275 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:49,292 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for pam_lastlog in PAM configuration] **********
2025-03-29 23:21:49,683 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:49,705 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72275 - Display date/time of last logon after logon] ***
2025-03-29 23:21:49,733 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:49,754 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure .shosts find has finished] ********************
2025-03-29 23:21:49,814 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:49,894 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove .shosts or shosts.equiv files] ****************
2025-03-29 23:21:50,019 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,079 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Get packages with incorrect file permissions or ownership] ***
2025-03-29 23:21:50,195 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,234 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Reset file permissions/ownership to vendor values] ***
2025-03-29 23:21:50,331 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,362 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid owner] ***
2025-03-29 23:21:50,397 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,419 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72007 - All files and directories must have a valid owner.] ***
2025-03-29 23:21:50,500 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,547 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid group owner] ***
2025-03-29 23:21:50,590 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,609 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72009 - All files and directories must have a valid group owner.] ***
2025-03-29 23:21:50,655 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,678 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set proper owner, group owner, and permissions on home directories] ***
2025-03-29 23:21:50,758 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:50,767 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:50,786 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-29 23:21:50,789 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,821 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Find all world-writable directories] *****************
2025-03-29 23:21:50,852 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,871 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72047 - All world-writable directories must be group-owned by root, sys, bin, or an application group.] ***
2025-03-29 23:21:50,914 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:50,931 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/cron.allow exists] *********************
2025-03-29 23:21:51,341 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:51,363 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set owner/group owner on /etc/cron.allow] ************
2025-03-29 23:21:51,404 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:51,420 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if gdm is installed and configured] ************
2025-03-29 23:21:51,823 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:51,841 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71953 - The operating system must not allow an unattended or automatic logon to the system via a graphical user interface] ***
2025-03-29 23:21:51,867 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:51,891 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71955 - The operating system must not allow guest logon to the system.] ***
2025-03-29 23:21:51,920 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:51,942 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for dconf profiles] ****************************
2025-03-29 23:21:52,349 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:52,370 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Create a user profile in dconf] **********************
2025-03-29 23:21:52,395 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:52,419 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Create dconf directories] ****************************
2025-03-29 23:21:52,452 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/) 
2025-03-29 23:21:52,459 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/locks) 
2025-03-29 23:21:52,466 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/) 
2025-03-29 23:21:52,467 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:52,486 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Configure graphical session locking] *****************
2025-03-29 23:21:52,514 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:52,532 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users from changing graphical session locking configurations] ***
2025-03-29 23:21:52,560 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:52,578 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM profile for displaying a login banner] ***
2025-03-29 23:21:52,605 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:52,627 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM keyfile for machine-wide settings] ******
2025-03-29 23:21:52,660 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/01-banner-message) 
2025-03-29 23:21:52,663 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/01-banner-message) 
2025-03-29 23:21:52,664 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:52,681 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71983 - USB mass storage must be disabled.] ********
2025-03-29 23:21:53,119 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:53,139 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set sysctl configurations] ***************************
2025-03-29 23:21:53,560 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 23:21:53,944 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 23:21:54,340 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.icmp_echo_ignore_broadcasts', 'value': 1, 'enabled': True})
2025-03-29 23:21:54,730 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.send_redirects', 'value': 0, 'enabled': True})
2025-03-29 23:21:55,119 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.send_redirects', 'value': 0, 'enabled': True})
2025-03-29 23:21:55,125 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv4.ip_forward', 'value': 0, 'enabled': False}) 
2025-03-29 23:21:55,492 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv6.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-29 23:21:55,880 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_redirects', 'value': 0, 'enabled': True})
2025-03-29 23:21:56,308 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'kernel.randomize_va_space', 'value': 2, 'enabled': True})
2025-03-29 23:21:56,322 p=36074 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv6.conf.all.disable_ipv6', 'value': 1, 'enabled': False}) 
2025-03-29 23:21:56,361 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check kdump service] *********************************
2025-03-29 23:21:56,793 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:56,812 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72057 - Kernel core dumps must be disabled unless needed.] ***
2025-03-29 23:21:56,843 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:56,861 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if FIPS is enabled] ****************************
2025-03-29 23:21:56,899 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:57,024 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Print a warning if FIPS isn't enabled] ***************
2025-03-29 23:21:57,064 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:21:57,083 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled] ***
2025-03-29 23:21:57,988 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:58,014 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check apparmor_status output] ************************
2025-03-29 23:21:58,459 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:58,484 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if apparmor is running] ************************
2025-03-29 23:21:58,935 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:58,954 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is enabled at boot time] *************
2025-03-29 23:21:59,854 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:21:59,991 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is running] **************************
2025-03-29 23:22:01,164 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:01,200 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure SELinux is in enforcing mode on the next reboot] ***
2025-03-29 23:22:01,232 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:01,252 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Relabel files on next boot if SELinux mode changed] ***
2025-03-29 23:22:01,284 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:01,304 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for unlabeled device files] ********************
2025-03-29 23:22:01,335 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:01,356 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72039 - All system device files must be correctly labeled to prevent unauthorized modification.] ***
2025-03-29 23:22:01,388 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:01,406 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check autofs service] ********************************
2025-03-29 23:22:01,840 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:01,859 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71985 - File system automounter must be disabled unless required.] ***
2025-03-29 23:22:01,885 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:01,904 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***
2025-03-29 23:22:02,580 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:02,605 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***
2025-03-29 23:22:03,691 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:03,711 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for /home on mounted filesystem] ***************
2025-03-29 23:22:03,779 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /home is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 23:22:03,796 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var on mounted filesystem] ****************
2025-03-29 23:22:03,860 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 23:22:03,882 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var/log/audit on mounted filesystem] ******
2025-03-29 23:22:03,952 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var/log/audit is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 23:22:03,969 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for /tmp on mounted filesystem] ****************
2025-03-29 23:22:04,034 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /tmp is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-29 23:22:04,051 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if syslog output is being sent to another server] ***
2025-03-29 23:22:04,426 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:04,447 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72209 - The system must send rsyslog output to a log aggregation server.] ***
2025-03-29 23:22:04,513 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Output from syslog must be sent to another server."
}
2025-03-29 23:22:04,539 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV is installed] ************************
2025-03-29 23:22:04,941 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:04,960 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove 'Example' line from ClamAV configuration files] ***
2025-03-29 23:22:04,995 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/freshclam.conf) 
2025-03-29 23:22:05,001 p=36074 u=vagrant n=ansible | skipping: [controller] => (item=/etc/clamd.d/scan.conf) 
2025-03-29 23:22:05,003 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:05,028 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Set ClamAV server type as socket] ********************
2025-03-29 23:22:05,055 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:05,074 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV socket directory exists] ***************
2025-03-29 23:22:05,101 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:05,118 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Allow automatic freshclam updates] *******************
2025-03-29 23:22:05,142 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:05,163 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV update process is already running] ***
2025-03-29 23:22:05,554 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:05,574 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Update ClamAV database] ******************************
2025-03-29 23:22:05,607 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:05,626 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV is running] ****************************
2025-03-29 23:22:05,658 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:05,683 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove old config block for V-72223 from openstack-ansible-security] ***
2025-03-29 23:22:06,113 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:06,131 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72223 - Set 10 minute timeout on communication sessions] ***
2025-03-29 23:22:06,506 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:06,525 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Start and enable chrony] *****************************
2025-03-29 23:22:07,232 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:07,254 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check if chrony configuration file exists] ***********
2025-03-29 23:22:07,679 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:07,697 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72269 - Synchronize system clock (configuration file)] ***
2025-03-29 23:22:08,580 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:08,599 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check firewalld status] ******************************
2025-03-29 23:22:09,013 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:09,036 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure firewalld is running and enabled] *************
2025-03-29 23:22:09,063 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:09,161 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Limit new TCP connections to 25/minute and allow bursting to 100] ***
2025-03-29 23:22:09,194 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:09,213 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Count nameserver entries in /etc/resolv.conf] ********
2025-03-29 23:22:09,597 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:09,616 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72281 - For systems using DNS resolution, at least two name servers must be configured.] ***
2025-03-29 23:22:09,683 p=36074 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Two or more nameservers must be configured in /etc/resolv.conf.\nNameservers found: 1\n"
}
2025-03-29 23:22:09,704 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for interfaces in promiscuous mode] ************
2025-03-29 23:22:10,076 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:10,094 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72295 - Network interfaces must not be in promiscuous mode.] ***
2025-03-29 23:22:10,120 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:10,137 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for postfix configuration file] ****************
2025-03-29 23:22:10,544 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:10,568 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72297 - Prevent unrestricted mail relaying] ********
2025-03-29 23:22:10,957 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:10,975 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check for TFTP server configuration file] ************
2025-03-29 23:22:11,344 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:11,363 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check TFTP configuration mode] ***********************
2025-03-29 23:22:11,389 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:11,409 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72305 - TFTP must be configured to operate in secure mode] ***
2025-03-29 23:22:11,436 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:11,453 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if snmpd config contains public/private] ***
2025-03-29 23:22:11,859 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:11,879 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : V-72313 - Change SNMP community strings from default.] ***
2025-03-29 23:22:11,907 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:11,928 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Copy login warning banner] ***************************
2025-03-29 23:22:12,785 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:12,804 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Drop options from SSH config that we manage] *********
2025-03-29 23:22:13,231 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitEmptyPasswords', 'value': 'no', 'enabled': True, 'stig_id': 'V-71939 / RHEL-07-010440'})
2025-03-29 23:22:13,595 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitUserEnvironment', 'value': 'no', 'enabled': True, 'stig_id': 'V-71957'})
2025-03-29 23:22:13,954 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'HostbasedAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-71959'})
2025-03-29 23:22:14,303 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Ciphers', 'value': 'aes128-ctr,aes192-ctr,aes256-ctr', 'enabled': True, 'stig_id': 'V-72221'})
2025-03-29 23:22:14,655 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveInterval', 'value': 600, 'enabled': True, 'stig_id': 'V-72237'})
2025-03-29 23:22:15,014 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveCountMax', 'value': 0, 'enabled': True, 'stig_id': 'V-72241'})
2025-03-29 23:22:15,358 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintLastLog', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72245'})
2025-03-29 23:22:15,713 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitRootLogin', 'value': 'without-password', 'enabled': True, 'stig_id': 'V-72247'})
2025-03-29 23:22:16,061 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreUserKnownHosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72249 / V-72239'})
2025-03-29 23:22:16,412 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreRhosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72243'})
2025-03-29 23:22:16,767 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'X11Forwarding', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72303'})
2025-03-29 23:22:17,124 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Protocol', 'value': 2, 'enabled': True, 'stig_id': 'V-72251'})
2025-03-29 23:22:17,474 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'MACs', 'value': 'hmac-sha2-256,hmac-sha2-512', 'enabled': True, 'stig_id': 'V-72253'})
2025-03-29 23:22:17,837 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Compression', 'value': 'delayed', 'enabled': True, 'stig_id': 'V-72267'})
2025-03-29 23:22:18,192 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'KerberosAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-72261'})
2025-03-29 23:22:18,532 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'GSSAPIAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-204598'})
2025-03-29 23:22:18,894 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'StrictModes', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72263'})
2025-03-29 23:22:19,267 p=36074 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintMotd', 'value': 'yes', 'enabled': True, 'stig_id': 'V-71861'})
2025-03-29 23:22:19,301 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Adjust ssh server configuration based on STIG requirements] ***
2025-03-29 23:22:19,762 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:19,786 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Ensure sshd is enabled at boot time] *****************
2025-03-29 23:22:20,513 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:20,534 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing public ssh host keys] *************
2025-03-29 23:22:20,912 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:20,934 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Public host key files must have mode 0644 or less] ***
2025-03-29 23:22:21,385 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key.pub)
2025-03-29 23:22:21,746 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key.pub)
2025-03-29 23:22:22,132 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key.pub)
2025-03-29 23:22:22,161 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing private ssh host keys] ************
2025-03-29 23:22:22,541 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:22,560 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Private host key files must have mode 0600 or less] ***
2025-03-29 23:22:22,979 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key)
2025-03-29 23:22:23,348 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key)
2025-03-29 23:22:23,721 p=36074 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key)
2025-03-29 23:22:23,745 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Manage motd in pam.d] ********************************
2025-03-29 23:22:24,453 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:24,474 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Remove the temporary directory] **********************
2025-03-29 23:22:24,862 p=36074 u=vagrant n=ansible | ok: [controller]
2025-03-29 23:22:24,882 p=36074 u=vagrant n=ansible | TASK [ansible-hardening : Including contrib tasks] *****************************
2025-03-29 23:22:24,909 p=36074 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:22:24,996 p=36074 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-29 23:22:25,047 p=36074 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-29 23:22:25,047 p=36074 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | controller                 : ok=173  changed=4    unreachable=0    failed=0    skipped=120  rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=96   changed=7    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=93   changed=6    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=93   changed=6    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | controller-repo-container-79f4553f : ok=104  changed=50   unreachable=0    failed=0    skipped=34   rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=93   changed=6    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-29 23:22:25,048 p=36074 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-29 23:52:26,037 p=39027 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-29 23:52:26,844 p=39027 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-29 23:52:28,678 p=39027 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-29 23:52:28,746 p=39027 u=vagrant n=ansible | PLAY [Gather unbound facts] ****************************************************
2025-03-29 23:52:28,746 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:52:28,752 p=39027 u=vagrant n=ansible | PLAY [Install unbound DNS resolvers] *******************************************
2025-03-29 23:52:28,753 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:52:28,760 p=39027 u=vagrant n=ansible | PLAY [Install unbound DNS resolver client configurations] **********************
2025-03-29 23:52:28,789 p=39027 u=vagrant n=ansible | TASK [Gathering Facts] *********************************************************
2025-03-29 23:52:56,172 p=39027 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).", "unreachable": true}
2025-03-29 23:52:56,242 p=39027 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-29 23:52:56,288 p=39027 u=vagrant n=ansible | skipping: [controller]
2025-03-29 23:52:56,427 p=39027 u=vagrant n=ansible | PLAY [Gather haproxy facts] ****************************************************
2025-03-29 23:52:56,428 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:52:56,434 p=39027 u=vagrant n=ansible | PLAY [HAProxy base config] *****************************************************
2025-03-29 23:52:56,434 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:52:56,441 p=39027 u=vagrant n=ansible | PLAY [Gather repo facts] *******************************************************
2025-03-29 23:52:56,504 p=39027 u=vagrant n=ansible | PLAY [Setup repo servers] ******************************************************
2025-03-29 23:52:56,512 p=39027 u=vagrant n=ansible | TASK [End playbook] ************************************************************
2025-03-29 23:52:56,520 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:52:56,525 p=39027 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-29 23:52:56,610 p=39027 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-repo-container-79f4553f
2025-03-29 23:52:56,617 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-29 23:52:56,675 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:52:56,682 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-29 23:52:57,773 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-repo-container-79f4553f'})
2025-03-29 23:52:58,166 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/glusterd', 'mount_path': '/openstack/glusterd/controller-repo-container-79f4553f'})
2025-03-29 23:52:58,177 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-29 23:52:58,849 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-repo-container-79f4553f'})
2025-03-29 23:52:59,256 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/glusterd', 'mount_path': '/openstack/glusterd/controller-repo-container-79f4553f'})
2025-03-29 23:52:59,267 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-29 23:52:59,293 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:52:59,301 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-29 23:52:59,756 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 23:52:59,770 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-29 23:53:00,397 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:53:00,407 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-29 23:53:01,727 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:53:01,735 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-29 23:53:02,819 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-29 23:53:02,828 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-29 23:53:03,343 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:03,354 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-29 23:53:07,275 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,287 p=39027 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-29 23:53:07,337 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,378 p=39027 u=vagrant n=ansible | PLAY [Setup repo server gluster cluster] ***************************************
2025-03-29 23:53:07,400 p=39027 u=vagrant n=ansible | TASK [Create gluster cluster] **************************************************
2025-03-29 23:53:07,588 p=39027 u=vagrant n=ansible | included: openstack.osa.glusterfs for controller-repo-container-79f4553f
2025-03-29 23:53:07,595 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Gather variables for each operating system] ****
2025-03-29 23:53:07,675 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,682 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Enable extra repositories] *********************
2025-03-29 23:53:07,710 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,719 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Install gluster repo packages] *****************
2025-03-29 23:53:07,744 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,751 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-29 23:53:07,793 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"path": "/run/system", "owner": "root", "group": "root"}) 
2025-03-29 23:53:07,796 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,805 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-29 23:53:07,848 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"}) 
2025-03-29 23:53:07,851 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,860 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-29 23:53:07,916 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/systemd-tmpfiles-setup-dev.service.d", "owner": "root", "group": "root"}) 
2025-03-29 23:53:07,917 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:07,928 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-29 23:53:07,966 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-tmpfiles-setup-dev.conf"}) 
2025-03-29 23:53:07,968 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,082 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-29 23:53:08,118 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,127 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-29 23:53:08,179 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-tmpfiles-setup-dev.service.d/override.conf"}) 
2025-03-29 23:53:08,181 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,190 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-29 23:53:08,226 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,234 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-29 23:53:08,258 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,269 p=39027 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-29 23:53:08,292 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,300 p=39027 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-29 23:53:08,341 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-tmpfiles-setup-dev"}) 
2025-03-29 23:53:08,343 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,350 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-29 23:53:08,393 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:08,405 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Install glusterfs server packages] *************
2025-03-29 23:53:21,120 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:21,129 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Drop glusterfs-wait.sh script] *****************
2025-03-29 23:53:23,249 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:23,257 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-29 23:53:23,769 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 23:53:23,779 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-29 23:53:24,352 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 23:53:24,362 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-29 23:53:24,975 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/glusterd.service.d", "owner": "root", "group": "root"})
2025-03-29 23:53:24,988 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-29 23:53:26,262 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-glusterd.conf"})
2025-03-29 23:53:26,271 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-29 23:53:26,308 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:26,317 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-29 23:53:27,640 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/glusterd.service.d/override.conf"})
2025-03-29 23:53:27,653 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-29 23:53:27,694 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:27,702 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-29 23:53:27,727 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:27,735 p=39027 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-29 23:53:29,219 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:29,229 p=39027 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-29 23:53:29,282 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-repo-container-79f4553f => (item={"service_name": "glusterd"})
2025-03-29 23:53:29,304 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load service glusterd] *********************************
2025-03-29 23:53:30,372 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"service_name": "glusterd"})
2025-03-29 23:53:30,391 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load timer glusterd] ***********************************
2025-03-29 23:53:30,445 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "glusterd"}) 
2025-03-29 23:53:30,450 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:30,457 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-29 23:53:30,500 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:30,513 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Configure systemd-tmpfiles to create /dev/fuse at boot] ***
2025-03-29 23:53:31,744 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:31,753 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Restart systemd-tmpfiles-setup-dev] ************
2025-03-29 23:53:32,665 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:32,673 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Start glusterfs server] ************************
2025-03-29 23:53:37,480 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:37,488 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Create gluster peers] **************************
2025-03-29 23:53:38,686 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:38,695 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Ensure glusterfs backing directory exists] *****
2025-03-29 23:53:39,174 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:39,182 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Check brick status] ****************************
2025-03-29 23:53:39,775 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:39,782 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Reset brick for a replaced node] ***************
2025-03-29 23:53:39,828 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=gluster volume reset-brick gfs-repo controller-repo-container-79f4553f:/gluster/bricks/1 start) 
2025-03-29 23:53:39,836 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=gluster volume reset-brick gfs-repo controller-repo-container-79f4553f:/gluster/bricks/1 controller-repo-container-79f4553f:/gluster/bricks/1 commit force) 
2025-03-29 23:53:39,837 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:39,847 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Find existing peers' runtime hostnames] ********
2025-03-29 23:53:39,895 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:39,904 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Restart glusterfs server] **********************
2025-03-29 23:53:39,948 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:39,956 p=39027 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Create gluster volume] *************************
2025-03-29 23:53:41,880 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:41,898 p=39027 u=vagrant n=ansible | RUNNING HANDLER [systemd_service : Restart changed services] *******************
2025-03-29 23:53:41,918 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:41,942 p=39027 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-29 23:53:41,942 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:53:41,951 p=39027 u=vagrant n=ansible | PLAY [Setup repo servers] ******************************************************
2025-03-29 23:53:41,982 p=39027 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:53:42,021 p=39027 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-repo-container-79f4553f
2025-03-29 23:53:42,040 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:53:42,076 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:42,083 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:53:42,109 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:42,120 p=39027 u=vagrant n=ansible | TASK [repo_server : Gather variables for each operating system] ****************
2025-03-29 23:53:42,192 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:42,202 p=39027 u=vagrant n=ansible | TASK [repo_server : Create the system group] ***********************************
2025-03-29 23:53:42,942 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:42,950 p=39027 u=vagrant n=ansible | TASK [repo_server : Create the nginx system user] ******************************
2025-03-29 23:53:43,851 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:43,860 p=39027 u=vagrant n=ansible | TASK [Mount any remote volumes] ************************************************
2025-03-29 23:53:43,929 p=39027 u=vagrant n=ansible | included: systemd_mount for controller-repo-container-79f4553f
2025-03-29 23:53:43,941 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Gather variables for each operating system] **************
2025-03-29 23:53:44,020 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:44,028 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Including systemd_install tasks] *************************
2025-03-29 23:53:44,082 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_mount/tasks/systemd_install.yml for controller-repo-container-79f4553f
2025-03-29 23:53:44,092 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Download EPEL gpg keys] **********************************
2025-03-29 23:53:44,131 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:44,140 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Install EPEL gpg keys] ***********************************
2025-03-29 23:53:44,176 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:44,185 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Install the EPEL repository] *****************************
2025-03-29 23:53:44,229 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:44,239 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Install required distro packages for mounts] *************
2025-03-29 23:53:45,959 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:45,967 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Make boolean flag for setting up glusterfs] **************
2025-03-29 23:53:46,030 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:46,040 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Configure systemd-tmpfiles to create /dev/fuse at boot] ***
2025-03-29 23:53:47,215 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:47,225 p=39027 u=vagrant n=ansible | TASK [Apply systemctl overrides] ***********************************************
2025-03-29 23:53:47,253 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:47,261 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Restart systemd-tmpfiles-setup-dev] **********************
2025-03-29 23:53:48,099 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:48,113 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Including systemd_mounts tasks] **************************
2025-03-29 23:53:48,182 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_mount/tasks/systemd_mounts.yml for controller-repo-container-79f4553f => (item={'what': 'controller-repo-container-79f4553f:gfs-repo', 'where': '/var/www/repo', 'type': 'glusterfs', 'state': 'started', 'enabled': True})
2025-03-29 23:53:48,210 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Set mount facts] *****************************************
2025-03-29 23:53:48,265 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:48,273 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Escape mount service file name] **************************
2025-03-29 23:53:48,739 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:48,747 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Create mount target(s)] **********************************
2025-03-29 23:53:49,228 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:49,241 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Place mount credentials when required] *******************
2025-03-29 23:53:49,271 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:49,281 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Create systemd mount services(s)] ************************
2025-03-29 23:53:50,053 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:50,062 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Load or Unload mount(s)] *********************************
2025-03-29 23:53:51,307 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:53:51,316 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Set the state of the mount] ******************************
2025-03-29 23:53:51,962 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:51,970 p=39027 u=vagrant n=ansible | TASK [systemd_mount : Unload mount(s)] *****************************************
2025-03-29 23:53:52,002 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:53:52,030 p=39027 u=vagrant n=ansible | TASK [repo_server : Wait until mount will finish for /var/www] *****************
2025-03-29 23:53:52,527 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:53:52,535 p=39027 u=vagrant n=ansible | TASK [repo_server : File and directory setup (non-root user)] ******************
2025-03-29 23:53:53,030 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www'})
2025-03-29 23:53:53,508 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/.ssh', 'mode': '2700'})
2025-03-29 23:53:53,974 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo', 'mode': '0755'})
2025-03-29 23:53:54,444 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/links'})
2025-03-29 23:53:54,899 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/os-releases'})
2025-03-29 23:53:55,366 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/os-releases/30.0.2'})
2025-03-29 23:53:55,876 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/pools'})
2025-03-29 23:53:56,342 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/venvs'})
2025-03-29 23:53:56,867 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/constraints'})
2025-03-29 23:53:57,363 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'path': '/etc/apache2/sites-available'})
2025-03-29 23:53:57,806 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/lib/nginx', 'state': 'absent'})
2025-03-29 23:53:58,257 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/log/nginx', 'state': 'absent'})
2025-03-29 23:53:58,277 p=39027 u=vagrant n=ansible | TASK [repo_server : File and directory setup (root user)] **********************
2025-03-29 23:53:58,781 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/nginx/conf.d', 'state': 'absent'})
2025-03-29 23:53:59,226 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/nginx/sites-available', 'state': 'absent'})
2025-03-29 23:53:59,670 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/nginx/sites-enabled', 'state': 'absent'})
2025-03-29 23:53:59,680 p=39027 u=vagrant n=ansible | TASK [repo_server : Remove nginx web server] ***********************************
2025-03-29 23:54:01,962 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:54:01,970 p=39027 u=vagrant n=ansible | TASK [repo_server : Install distro packages] ***********************************
2025-03-29 23:54:16,919 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:54:16,930 p=39027 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-29 23:54:16,964 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:54:16,972 p=39027 u=vagrant n=ansible | TASK [repo_server : Enable git automatic thread count detection] ***************
2025-03-29 23:54:17,809 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:54:17,819 p=39027 u=vagrant n=ansible | TASK [repo_server : Ensure apache2 MPM for Debian/Ubuntu] **********************
2025-03-29 23:54:18,770 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'mpm_worker', 'state': 'absent'})
2025-03-29 23:54:19,269 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'mpm_prefork', 'state': 'absent'})
2025-03-29 23:54:19,755 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'mpm_event', 'state': 'present'})
2025-03-29 23:54:19,766 p=39027 u=vagrant n=ansible | TASK [repo_server : Ensure apache2 MPM for EL] *********************************
2025-03-29 23:54:19,792 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:54:19,800 p=39027 u=vagrant n=ansible | TASK [repo_server : Enable apache2 modules] ************************************
2025-03-29 23:54:20,476 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'name': 'ssl', 'state': 'present'})
2025-03-29 23:54:21,078 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'name': 'rewrite', 'state': 'present'})
2025-03-29 23:54:21,697 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'name': 'headers', 'state': 'present'})
2025-03-29 23:54:22,181 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'deflate', 'state': 'present'})
2025-03-29 23:54:22,197 p=39027 u=vagrant n=ansible | TASK [repo_server : Disable default apache site] *******************************
2025-03-29 23:54:22,699 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=/etc/apache2/sites-enabled/000-default.conf)
2025-03-29 23:54:23,151 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=/etc/apache2/conf-enabled/other-vhosts-access-log.conf)
2025-03-29 23:54:23,160 p=39027 u=vagrant n=ansible | TASK [repo_server : Ensure Apache configuration] *******************************
2025-03-29 23:54:23,647 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=ServerName openstack-slushee)
2025-03-29 23:54:24,085 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item=ErrorLog syslog:daemon)
2025-03-29 23:54:24,101 p=39027 u=vagrant n=ansible | TASK [repo_server : Create Apache config] **************************************
2025-03-29 23:54:25,443 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'src': 'apache_ports.conf.j2', 'dest': '/etc/apache2/ports.conf', 'owner': 'root', 'group': 'root'})
2025-03-29 23:54:26,764 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'src': 'openstack_slushee.vhost.j2', 'dest': '/etc/apache2/sites-available/openstack_slushee.conf', 'owner': 'root', 'group': 'root'})
2025-03-29 23:54:28,037 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={'src': 'apache_mpm.conf.j2', 'dest': '/etc/apache2/mods-available/mpm_event.conf', 'owner': 'root', 'group': 'root'})
2025-03-29 23:54:28,049 p=39027 u=vagrant n=ansible | TASK [repo_server : Enable repo site] ******************************************
2025-03-29 23:54:28,952 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:54:28,964 p=39027 u=vagrant n=ansible | TASK [repo_server : Remove Listen from Apache config] **************************
2025-03-29 23:54:29,528 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:54:29,538 p=39027 u=vagrant n=ansible | TASK [repo_server : Remove legacy authorized keys file] ************************
2025-03-29 23:54:30,050 p=39027 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-29 23:54:30,060 p=39027 u=vagrant n=ansible | TASK [repo_server : Including repo_install_constraints tasks] ******************
2025-03-29 23:54:30,115 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/repo_server/tasks/repo_install_constraints.yml for controller-repo-container-79f4553f
2025-03-29 23:54:30,134 p=39027 u=vagrant n=ansible | TASK [repo_server : Ensure deploy host u-c directory exists] *******************
2025-03-29 23:54:30,576 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> localhost]
2025-03-29 23:54:30,589 p=39027 u=vagrant n=ansible | TASK [repo_server : Retrieve upper constraints using https] ********************
2025-03-29 23:54:33,460 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f -> localhost]
2025-03-29 23:54:33,469 p=39027 u=vagrant n=ansible | TASK [repo_server : Retrieve local filesystem upper constraints in CI] *********
2025-03-29 23:54:33,519 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:54:33,529 p=39027 u=vagrant n=ansible | TASK [repo_server : Copy local upper constraints content to a file in CI] ******
2025-03-29 23:54:33,583 p=39027 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-29 23:54:33,593 p=39027 u=vagrant n=ansible | TASK [repo_server : Copy all constraints files from the deploy host to the first repo server] ***
2025-03-29 23:54:34,878 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:54:34,887 p=39027 u=vagrant n=ansible | TASK [repo_server : Create a symlink for constraints file] *********************
2025-03-29 23:54:35,420 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:54:35,428 p=39027 u=vagrant n=ansible | TASK [repo_server : Flush handlers] ********************************************
2025-03-29 23:54:35,437 p=39027 u=vagrant n=ansible | RUNNING HANDLER [repo_server : Restart web server] *****************************
2025-03-29 23:54:36,687 p=39027 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-29 23:54:36,727 p=39027 u=vagrant n=ansible | PLAY [Gather memcached facts] **************************************************
2025-03-29 23:54:36,780 p=39027 u=vagrant n=ansible | PLAY [Install memcached] *******************************************************
2025-03-29 23:54:36,807 p=39027 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-29 23:54:36,903 p=39027 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-memcached-container-71b4149f
2025-03-29 23:54:36,910 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-29 23:54:36,971 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:36,980 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-29 23:54:37,568 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 23:54:37,579 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-29 23:54:38,122 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-29 23:54:38,133 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-29 23:54:38,165 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:38,175 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-29 23:54:38,732 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 23:54:38,743 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-29 23:54:38,796 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:38,804 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-29 23:54:38,859 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:38,866 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-29 23:54:38,916 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:38,924 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-29 23:54:39,164 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:39,173 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-29 23:54:39,215 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:39,231 p=39027 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-29 23:54:39,282 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:39,302 p=39027 u=vagrant n=ansible | TASK [memcached_server : Gather variables for each operating system] ***********
2025-03-29 23:54:39,376 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:39,384 p=39027 u=vagrant n=ansible | TASK [memcached_server : Install distro packages] ******************************
2025-03-29 23:54:45,976 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:45,989 p=39027 u=vagrant n=ansible | TASK [memcached_server : Apply memcached config] *******************************
2025-03-29 23:54:47,159 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:47,170 p=39027 u=vagrant n=ansible | TASK [memcached_server : Override systemd service file] ************************
2025-03-29 23:54:47,216 p=39027 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-29 23:54:47,226 p=39027 u=vagrant n=ansible | TASK [memcached_server : Create memcached systemd service config dir] **********
2025-03-29 23:54:47,748 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:47,757 p=39027 u=vagrant n=ansible | TASK [memcached_server : Apply systemd options] ********************************
2025-03-29 23:54:49,012 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.limits.conf.j2', 'dest': 'limits.conf'})
2025-03-29 23:54:50,295 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.restart.conf.j2', 'dest': 'restart.conf'})
2025-03-29 23:54:51,446 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.slice.conf.j2', 'dest': 'slice.conf'})
2025-03-29 23:54:52,584 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.without-privatedevices.conf.j2', 'dest': 'without-privatedevices.conf'})
2025-03-29 23:54:52,600 p=39027 u=vagrant n=ansible | TASK [memcached_server : Configure soft file limits] ***************************
2025-03-29 23:54:53,098 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:53,108 p=39027 u=vagrant n=ansible | TASK [memcached_server : Configure hard file limits] ***************************
2025-03-29 23:54:53,600 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:53,610 p=39027 u=vagrant n=ansible | TASK [memcached_server : Flush handlers] ***************************************
2025-03-29 23:54:53,626 p=39027 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] **************
2025-03-29 23:54:54,850 p=39027 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-29 23:54:54,887 p=39027 u=vagrant n=ansible | PLAY [Gather galera facts] *****************************************************
2025-03-29 23:54:54,911 p=39027 u=vagrant n=ansible | TASK [Gather additional facts] *************************************************
2025-03-29 23:54:54,956 p=39027 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller-galera-container-f800b10b
2025-03-29 23:54:54,961 p=39027 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] **************
2025-03-29 23:54:56,630 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:54:56,673 p=39027 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-29 23:54:56,673 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:54:56,686 p=39027 u=vagrant n=ansible | PLAY [Install galera server] ***************************************************
2025-03-29 23:54:56,708 p=39027 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-29 23:54:56,800 p=39027 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-galera-container-f800b10b
2025-03-29 23:54:56,807 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-29 23:54:56,864 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:54:56,875 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-29 23:54:57,458 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 23:54:57,924 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 23:54:57,935 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-29 23:54:58,585 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-29 23:54:59,002 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-29 23:54:59,014 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-29 23:54:59,049 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:54:59,062 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-29 23:54:59,612 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.order=10)
2025-03-29 23:54:59,622 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-29 23:54:59,681 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:54:59,692 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-29 23:54:59,765 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:54:59,778 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-29 23:54:59,838 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:54:59,847 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-29 23:55:00,109 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:00,117 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-29 23:55:00,159 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:00,174 p=39027 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-29 23:55:00,234 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:00,244 p=39027 u=vagrant n=ansible | TASK [Disabling haproxy backends] **********************************************
2025-03-29 23:55:00,279 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:00,297 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:55:01,795 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:01,804 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:55:01,870 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:01,899 p=39027 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] **************
2025-03-29 23:55:02,115 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:02,211 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] ****************************
2025-03-29 23:55:02,251 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:02,263 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] *****************************
2025-03-29 23:55:02,299 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:02,311 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] ****************************
2025-03-29 23:55:02,387 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_main.yml for controller-galera-container-f800b10b
2025-03-29 23:55:02,396 p=39027 u=vagrant n=ansible | TASK [galera_server : Fail when the host is not in galera_cluster_members] *****
2025-03-29 23:55:02,428 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:02,438 p=39027 u=vagrant n=ansible | TASK [galera_server : Fail if the galera root password is not provided] ********
2025-03-29 23:55:02,481 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:02,492 p=39027 u=vagrant n=ansible | TASK [galera_server : Initialize local facts] **********************************
2025-03-29 23:55:03,273 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:03,283 p=39027 u=vagrant n=ansible | TASK [galera_server : Refresh local facts] *************************************
2025-03-29 23:55:04,336 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:04,345 p=39027 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ********************
2025-03-29 23:55:04,411 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:04,427 p=39027 u=vagrant n=ansible | TASK [galera_server : Cluster state notice] ************************************
2025-03-29 23:55:04,458 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:04,468 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_cluster_state] *******************
2025-03-29 23:55:04,518 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_cluster_state.yml for controller-galera-container-f800b10b
2025-03-29 23:55:04,534 p=39027 u=vagrant n=ansible | TASK [galera_server : Check node status] ***************************************
2025-03-29 23:55:05,156 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:05,164 p=39027 u=vagrant n=ansible | TASK [galera_server : Fail if cluster is out of sync] **************************
2025-03-29 23:55:05,198 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:05,210 p=39027 u=vagrant n=ansible | TASK [galera_server : Check cluster name] **************************************
2025-03-29 23:55:05,763 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:05,772 p=39027 u=vagrant n=ansible | TASK [galera_server : Fail if galera_cluster_name doesnt match provided value] ***
2025-03-29 23:55:05,810 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:05,821 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade] *************************
2025-03-29 23:55:05,865 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_upgrade.yml for controller-galera-container-f800b10b
2025-03-29 23:55:05,884 p=39027 u=vagrant n=ansible | TASK [galera_server : Check mysql version] *************************************
2025-03-29 23:55:06,440 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:06,448 p=39027 u=vagrant n=ansible | TASK [galera_server : Check if major version of Galera is installed] ***********
2025-03-29 23:55:06,479 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:06,488 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade_pre] *********************
2025-03-29 23:55:06,516 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:06,526 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_install] *************************
2025-03-29 23:55:06,576 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_install.yml for controller-galera-container-f800b10b
2025-03-29 23:55:06,602 p=39027 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ********************************
2025-03-29 23:55:06,672 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:06,684 p=39027 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ************
2025-03-29 23:55:06,760 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-galera-container-f800b10b
2025-03-29 23:55:06,773 p=39027 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] *******************
2025-03-29 23:55:06,895 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:55:06,904 p=39027 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] **********************
2025-03-29 23:55:08,510 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:08,519 p=39027 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] ***
2025-03-29 23:55:09,071 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=MariaDB.list)
2025-03-29 23:55:09,083 p=39027 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] **************
2025-03-29 23:55:11,351 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:11,361 p=39027 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] *********************************
2025-03-29 23:55:12,522 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:55:12,537 p=39027 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] **********
2025-03-29 23:55:12,583 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:12,592 p=39027 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] ******************************
2025-03-29 23:55:13,449 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 23:55:14,031 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 23:55:14,039 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:14,051 p=39027 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ***************
2025-03-29 23:55:23,312 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:23,322 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_encryption] **********************
2025-03-29 23:55:23,352 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:23,365 p=39027 u=vagrant n=ansible | TASK [galera_server : Record galera has been deployed] *************************
2025-03-29 23:55:23,929 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:23,938 p=39027 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ********************
2025-03-29 23:55:24,007 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:24,017 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_post_install] ********************
2025-03-29 23:55:24,179 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_post_install.yml for controller-galera-container-f800b10b
2025-03-29 23:55:24,217 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-29 23:55:24,949 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 23:55:25,460 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-29 23:55:25,475 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-29 23:55:26,043 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 23:55:26,549 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-29 23:55:26,562 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-29 23:55:27,162 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/mariadb.service.d", "owner": "root", "group": "root"})
2025-03-29 23:55:27,172 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-29 23:55:28,618 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadb.conf"})
2025-03-29 23:55:29,878 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadbcheck@.conf"})
2025-03-29 23:55:29,894 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-29 23:55:30,916 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/mariadbcheck@.service", "config_overrides": {}, "config_type": "ini"})
2025-03-29 23:55:30,931 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-29 23:55:32,277 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/mariadb.service.d/override.conf"})
2025-03-29 23:55:32,298 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-29 23:55:32,379 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:32,387 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-29 23:55:33,705 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-socket.j2", "dest": "/etc/systemd/system/mariadbcheck.socket"})
2025-03-29 23:55:33,720 p=39027 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-29 23:55:33,771 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:33,782 p=39027 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-29 23:55:33,898 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadb"})
2025-03-29 23:55:33,907 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadbcheck@"})
2025-03-29 23:55:33,932 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load service mariadb] **********************************
2025-03-29 23:55:34,839 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"})
2025-03-29 23:55:34,858 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadb] ************************************
2025-03-29 23:55:34,915 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"}) 
2025-03-29 23:55:34,917 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:34,933 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load service mariadbcheck@] ****************************
2025-03-29 23:55:34,985 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-29 23:55:34,987 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:35,004 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadbcheck@] ******************************
2025-03-29 23:55:35,063 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-29 23:55:35,066 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:35,077 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-29 23:55:36,083 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"name": "mariadbcheck.socket", "enabled": true, "state": "__omit_place_holder__2002e71c95ebe343df8915cff86f089be7bc824f"})
2025-03-29 23:55:36,111 p=39027 u=vagrant n=ansible | TASK [galera_server : Create galera initial secure tool] ***********************
2025-03-29 23:55:36,150 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:36,161 p=39027 u=vagrant n=ansible | TASK [galera_server : Run galera secure] ***************************************
2025-03-29 23:55:36,191 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:36,204 p=39027 u=vagrant n=ansible | TASK [galera_server : Create the local directories] ****************************
2025-03-29 23:55:36,722 p=39027 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql', 'owner': 'mysql', 'mode': '02755'})
2025-03-29 23:55:37,187 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql/#tmp', 'owner': 'mysql', 'mode': '02755'})
2025-03-29 23:55:37,645 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/etc/mysql/conf.d'})
2025-03-29 23:55:37,659 p=39027 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-29 23:55:37,783 p=39027 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b
2025-03-29 23:55:37,826 p=39027 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-29 23:55:38,041 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-galera-container-f800b10b => (item={'name': 'galera_controller-galera-container-f800b10b', 'provider': 'ownca', 'cn': 'controller-galera-container-f800b10b', 'san': 'DNS:controller-galera-container-f800b10b,IP:192.168.56.254,IP:192.168.56.180', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-29 23:55:38,057 p=39027 u=vagrant n=ansible | TASK [pki : Generate certificate private key for galera_controller-galera-container-f800b10b] ***
2025-03-29 23:55:44,177 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 23:55:44,188 p=39027 u=vagrant n=ansible | TASK [pki : Create the CSR for galera_controller-galera-container-f800b10b] ****
2025-03-29 23:55:46,372 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 23:55:46,382 p=39027 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for galera_controller-galera-container-f800b10b] ***
2025-03-29 23:55:46,427 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:46,438 p=39027 u=vagrant n=ansible | TASK [pki : Get certificate info for galera_controller-galera-container-f800b10b] ***
2025-03-29 23:55:46,478 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:46,490 p=39027 u=vagrant n=ansible | TASK [pki : Save certificate info for galera_controller-galera-container-f800b10b] ***
2025-03-29 23:55:46,532 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:46,544 p=39027 u=vagrant n=ansible | TASK [pki : Create certificate chain for galera_controller-galera-container-f800b10b] ***
2025-03-29 23:55:46,999 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-29 23:55:47,019 p=39027 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-29 23:55:47,861 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/galera_controller-galera-container-f800b10b-chain.crt', 'dest': '/etc/ssl/certs/galera.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-29 23:55:48,284 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/galera_controller-galera-container-f800b10b.key.pem', 'dest': '/etc/mysql/ssl/galera.key', 'owner': 'mysql', 'group': 'root', 'mode': '0600'})
2025-03-29 23:55:49,154 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/ssl/certs/galera-ca.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-29 23:55:49,166 p=39027 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-29 23:55:49,895 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/ssl/certs", "state": "directory", "mode": "0755"})
2025-03-29 23:55:50,333 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/mysql/ssl", "state": "directory", "mode": "0755"})
2025-03-29 23:55:50,342 p=39027 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-29 23:55:51,667 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-29 23:55:52,987 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/mysql/ssl/galera.key", "owner": "mysql", "group": "root", "mode": "0600"})
2025-03-29 23:55:54,192 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera-ca.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-29 23:55:54,216 p=39027 u=vagrant n=ansible | TASK [galera_server : Remove existing mariadb configuration files] *************
2025-03-29 23:55:54,253 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:55:54,264 p=39027 u=vagrant n=ansible | TASK [galera_server : Drop mariadb config(s)] **********************************
2025-03-29 23:55:55,235 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'src': 'my.cnf.j2', 'dest': '/etc/mysql/my.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-29 23:55:56,066 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'src': 'cluster.cnf.j2', 'dest': '/etc/mysql/conf.d/cluster.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-29 23:55:56,080 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'debian.cnf.j2', 'dest': '/etc/mysql/debian.cnf', 'config_overrides': {}, 'config_type': 'ini', 'condition': False}) 
2025-03-29 23:55:56,092 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'client.my.cnf.j2', 'dest': '/root/.my.cnf', 'config_overrides': {}, 'config_type': 'ini', 'mode': '0600', 'condition': False}) 
2025-03-29 23:55:56,104 p=39027 u=vagrant n=ansible | TASK [galera_server : Apply service defaults] **********************************
2025-03-29 23:55:57,374 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:57,383 p=39027 u=vagrant n=ansible | TASK [galera_server : Link mysql and mariadb config files] *********************
2025-03-29 23:55:57,891 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:57,899 p=39027 u=vagrant n=ansible | TASK [galera_server : Remove default mysql_safe_syslog] ************************
2025-03-29 23:55:58,427 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:58,436 p=39027 u=vagrant n=ansible | TASK [galera_server : Create new cluster tool] *********************************
2025-03-29 23:55:59,611 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:55:59,622 p=39027 u=vagrant n=ansible | TASK [galera_server : Create clustercheck script] ******************************
2025-03-29 23:56:00,946 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:56:00,953 p=39027 u=vagrant n=ansible | TASK [galera_server : Flush handlers] ******************************************
2025-03-29 23:56:00,961 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_setup] ***************************
2025-03-29 23:56:01,016 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_setup.yml for controller-galera-container-f800b10b
2025-03-29 23:56:01,075 p=39027 u=vagrant n=ansible | TASK [galera_server : Fail if upgrade is needed] *******************************
2025-03-29 23:56:01,617 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:56:01,628 p=39027 u=vagrant n=ansible | TASK [galera_server : Create galera users] *************************************
2025-03-29 23:56:02,649 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 23:56:03,219 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 23:56:03,771 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 23:56:04,362 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-29 23:56:04,367 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:56:04,378 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_backups] *************************
2025-03-29 23:56:04,417 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:56:04,440 p=39027 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] **************
2025-03-29 23:56:05,631 p=39027 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-29 23:56:05,666 p=39027 u=vagrant n=ansible | TASK [Enabling haproxy backends] ***********************************************
2025-03-29 23:56:05,708 p=39027 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-29 23:56:05,730 p=39027 u=vagrant n=ansible | PLAY [Gather qdrouterd facts] **************************************************
2025-03-29 23:56:05,730 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:56:05,738 p=39027 u=vagrant n=ansible | PLAY [Create and configure qdrouterd container] ********************************
2025-03-29 23:56:05,739 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:56:05,744 p=39027 u=vagrant n=ansible | PLAY [Install qdrouterd server] ************************************************
2025-03-29 23:56:05,744 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:56:05,753 p=39027 u=vagrant n=ansible | PLAY [Gather etcd facts] *******************************************************
2025-03-29 23:56:05,802 p=39027 u=vagrant n=ansible | PLAY [Create and configure rabbitmq container] *********************************
2025-03-29 23:56:05,811 p=39027 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-29 23:56:05,906 p=39027 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-rabbit-mq-container-6f8ad97c
2025-03-29 23:56:05,910 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-29 23:56:05,966 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:05,978 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-29 23:56:06,437 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-29 23:56:06,450 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-29 23:56:06,872 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-29 23:56:06,892 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-29 23:56:06,925 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:06,933 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-29 23:56:07,347 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.order=19)
2025-03-29 23:56:07,360 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-29 23:56:07,403 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:07,411 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-29 23:56:07,460 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:07,468 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-29 23:56:07,509 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:07,516 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-29 23:56:07,650 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:07,659 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-29 23:56:07,687 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:07,699 p=39027 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-29 23:56:07,739 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:07,753 p=39027 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] **************
2025-03-29 23:56:08,952 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:08,991 p=39027 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-29 23:56:08,991 p=39027 u=vagrant n=ansible | skipping: no hosts matched
2025-03-29 23:56:09,001 p=39027 u=vagrant n=ansible | PLAY [Install rabbitmq server] *************************************************
2025-03-29 23:56:09,053 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Gather variables for each operating system] ************
2025-03-29 23:56:09,127 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:09,137 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Download the RabbitMQ package] *************************
2025-03-29 23:56:09,161 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:09,169 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Fail if hosts file is not managed yet] *****************
2025-03-29 23:56:09,610 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:09,623 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure localhost /etc/hosts entry is correct] **********
2025-03-29 23:56:10,077 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:10,086 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Remove hostname record for 127.0.1.1] ******************
2025-03-29 23:56:10,817 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:10,826 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Create the system group] *******************************
2025-03-29 23:56:11,346 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:11,354 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Create the rabbit system user] *************************
2025-03-29 23:56:11,895 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:11,903 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Create the local directories] **************************
2025-03-29 23:56:12,420 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:12,428 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_install tasks] **********************
2025-03-29 23:56:12,497 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_install.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 23:56:12,522 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (deb)] *******
2025-03-29 23:56:12,969 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:12,979 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (rpm)] *******
2025-03-29 23:56:13,006 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:13,019 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Register a fact for the installed RabbitMQ version] ****
2025-03-29 23:56:13,096 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'stdout': '4.0.3-1', 'stderr': '', 'rc': 0, 'cmd': ['dpkg-query', '-f=${Version}', '-W', 'rabbitmq-server'], 'start': '2025-03-29 23:56:12.912136', 'end': '2025-03-29 23:56:12.921761', 'delta': '0:00:00.009625', 'msg': '', 'stdout_lines': ['4.0.3-1'], 'stderr_lines': [], 'failed': False, 'failed_when_result': False})
2025-03-29 23:56:13,107 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'false_condition': "ansible_facts['pkg_mgr'] == 'dnf'"}) 
2025-03-29 23:56:13,117 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure installed RabbitMQ version is same as expected] ***
2025-03-29 23:56:13,160 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:13,169 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure that RabbitMQ is running minimal required version for upgrade] ***
2025-03-29 23:56:13,196 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:13,205 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] ****************
2025-03-29 23:56:13,231 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:13,240 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_feature_flags tasks] ****************
2025-03-29 23:56:13,273 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:13,289 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_upgrade_prep tasks] *****************
2025-03-29 23:56:13,323 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:13,333 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including install tasks] *******************************
2025-03-29 23:56:13,394 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/install_apt.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 23:56:13,409 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Validate repo config is deb822 format] *****************
2025-03-29 23:56:13,581 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:56:13,589 p=39027 u=vagrant n=ansible | TASK [Run the apt package pinning role] ****************************************
2025-03-29 23:56:13,730 p=39027 u=vagrant n=ansible | included: apt_package_pinning for controller-rabbit-mq-container-6f8ad97c
2025-03-29 23:56:13,749 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:56:14,947 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:14,956 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:56:14,987 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:15,004 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Clean up legacy repository config not in deb822 format] ***
2025-03-29 23:56:15,504 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=RabbitMQ.list)
2025-03-29 23:56:16,038 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=els_erlang.list)
2025-03-29 23:56:16,048 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure python3-debian package is available] ************
2025-03-29 23:56:18,247 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:18,256 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Manage apt repositories] *******************************
2025-03-29 23:56:18,964 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'RabbitMQ', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGAyemoBDADMwGfwPLzN0G0TOoiJdboRZOHUk51mtkBemD+JX2XiTvykjj4p\nM5MyRfGKV5YFRw5IkFXqYaNP/dqCAbWkfQG1aNpzPVIqlwwOkNEnNR2dKpiEpiq9\nQ53HbAjMa9eHxvWN65MtvDIXGUIoupVMZAbycsYD9+fZWJrQgRlSb/Lk9cCvYKoy\ndXsfS1TOmglI3yFRgSvr+CM54gIOKpqWJVE+u2ZFq2rw9yh0GQzcOLXmrMStfbla\nakgqe3jpdXKIlI4tSoRaOsIFUjc1DeyZcEJGZyKlo4h1cgVNha8HDiMB9a7bdTCm\nW06ZbUrEz1vTmyFN6WFsLuZ4MRiWkuz0RAA9ePGMYz8DsQoMqusaoFAoQkgJQH4d\nMF+/3MFnK6CXMtkDYqwstcSDqtzbgvW+sOCzA/WGUzw37nwoh+mxIctVPxYsuipT\naX8O9T449mQ61AOFw9MoTRSnf0XNfFUlkh9fQlUK/BWxM0X7A4UUtdMcZC54LsMF\nKHDCC4WHeOpDy1sAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1zZXJ2ZXIpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgMnpqAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEJ9Fh/ImIINCM+4M\nAJmb/bXlShUTN4J1XCSOoUk4rBe0jBb6YbvB0YJrD1FZr/nfwV08sqCxfBvXR41W\n9PwCCPYKUXo1K4TxehfOR4RpiHou+YxnqMiZjLKB9nSTnGj7kSJ8OLEcqUrgV/Uv\nFk0w2IGQf25u6D6NumKuk6CElFxBG5OzBXtBAxUSLzQ7Xz/3IuqaPuA8KPRD25s8\nyDjj2auyZxlfaD+wUNkqaLQ9quXd8IJuUqvz9wNbOItooWypEk2tX48w5i+wd1pP\nAW+NjKuwd0G88nO6J+7oFYXcsh7n3nblJZT0bmUZC9M6kL9llt8Vy/FBkHnP3dX3\n+6EfEXeXPhVJTI7nkNP64XssO4zHg9vQd3rLd6RCfUnA/NjEXvpR6pjoEsPMlD99\n8hsK1c0AhAntSsB2sky7E5p7Rzq8X/SM8aZGDmkitkN2VdnAQsJP0UVq7FnpqBFS\npMxOxGveS5d5sjU3LoHPTg1uOcARcsOH245szVBPtklXOzg7Fazcc+BHmjYmrgeu\nQQ==\n=CfXb\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:56:19,528 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'els_erlang', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGBJAVUBDADBhHZA6wqZcmWMALb5Q+H/99kuI1xXGSBTm3/sNU21kMzHL+Tm\nAJrZbSVHflkNdwjQM+xi2Z04xRYZlmE8VI9v788gKm3ojZ4l089aoMW85R0RLxnl\nMy9KyUbpNkayOAVWIHj/AG/OMSrF7G3OcQCcDYLyD9PvIpt2vPgn9TunMkqD1G5o\nhMUOdBBBnzGrgWco2zbORwPM8O8ETtkcZioSp4AWCj7oA/SaugzBQ/3RzSby+1PT\n3cBRJei8RWGK97C9ILzY34SMYa0jj8x183gRRzGlGycyVQhLrHmhozLZFaqBCc5a\n0JtEYJy/yWeVvz+JEbx4VXFENQbWc77Qe9JO9iaPNO43HtOxpuxIOFajFHWnk2e7\nQSnYlZGZQ/7JRHtRu/GcCuqVf+M6jAVx+7rwjCdJ9ROhHYaCmXXODABUPwO0bWIr\nrnJChjSDnQ+aQJgQpcQfITO8FjvVcrQowjMCeIq58nIqq8aBKOEk7xHckQ6BnQSB\nKrHjzkM+6k8ccVMAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1lcmxhbmcpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgSQFVAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEOSVu0nMS75bjV4L\n/1lbtAK4qtksPZRoZQJl+s9U7zj7Sqo7Gz9ke90sqt6O96QgKq0/LzACWoeezk9J\nlScTwl1bHg+/TVDdar5pTJf3jOoMxNqpdouF4uhCDhbJkOVYFDUysdYwCvavrF7U\n4zYa01jKuMcF1FJ21qqy9uFqfQsxVrvniIu1+tONbiDqPEVZUcd7ffcndCLBEpA2\nkbFrCj7nD/G3JrO3F6u3/v27lHbpaTbqiL5ovUj5nEA2ACzEgXP69+2MO/2h7mw1\n8kS48QiyTVaZaByN4RwbSmPDDtYXM7Mts59XPaxLrzWEH2wKtpAQdKSaUoTGSwDc\nbJJ/QOvTdHqaOSaEWR6tZnSrjdGElaHzK3xIdaTpipg+y6WKOEfM8WPpBmYrTJ2F\nKGO+mHZY0OdUqdCZohzNtZnbekZUb88UejEvtnOjxmO/22jZxIU7d8ocIV0l7GFf\nGMuKc63PqdMzaztmt+CS0uFscE4kfS3ZyMavW7pRDfB8Y4SqZ17zIdnIfnAucCus\nTg==\n=gGzU\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:56:19,548 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Update apt repositories when config is changed] ********
2025-03-29 23:56:19,579 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:19,590 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ package dependencies] *****************
2025-03-29 23:56:27,750 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:27,760 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Install the RabbitMQ package deb] **********************
2025-03-29 23:56:27,786 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:27,794 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ packages] *****************************
2025-03-29 23:56:30,001 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:30,015 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Reload the systemd daemon] *****************************
2025-03-29 23:56:30,043 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:30,051 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure there are no policy-rc files] *******************
2025-03-29 23:56:30,534 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:30,542 p=39027 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-29 23:56:30,643 p=39027 u=vagrant n=ansible | included: pki for controller-rabbit-mq-container-6f8ad97c
2025-03-29 23:56:30,685 p=39027 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-29 23:56:30,772 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-rabbit-mq-container-6f8ad97c => (item={'name': 'rabbitmq_controller-rabbit-mq-container-6f8ad97c', 'provider': 'ownca', 'cn': 'controller-rabbit-mq-container-6f8ad97c', 'san': 'DNS:controller-rabbit-mq-container-6f8ad97c,IP:192.168.56.214,DNS:controller-rabbit-mq-container-6f8ad97c.openstack.local', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-29 23:56:30,782 p=39027 u=vagrant n=ansible | TASK [pki : Generate certificate private key for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-29 23:56:36,556 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 23:56:36,566 p=39027 u=vagrant n=ansible | TASK [pki : Create the CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-29 23:56:38,416 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 23:56:38,425 p=39027 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-29 23:56:38,462 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:38,471 p=39027 u=vagrant n=ansible | TASK [pki : Get certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-29 23:56:38,509 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:38,519 p=39027 u=vagrant n=ansible | TASK [pki : Save certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-29 23:56:38,555 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:38,564 p=39027 u=vagrant n=ansible | TASK [pki : Create certificate chain for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-29 23:56:39,001 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-29 23:56:39,020 p=39027 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-29 23:56:39,458 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/rabbitmq_controller-rabbit-mq-container-6f8ad97c-chain.crt', 'dest': '/etc/rabbitmq/rabbitmq.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-29 23:56:39,779 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/rabbitmq_controller-rabbit-mq-container-6f8ad97c.key.pem', 'dest': '/etc/rabbitmq/rabbitmq.key', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0600'})
2025-03-29 23:56:40,100 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/rabbitmq/rabbitmq-ca.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-29 23:56:40,110 p=39027 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-29 23:56:40,686 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/rabbitmq", "state": "directory", "mode": "0755"})
2025-03-29 23:56:40,701 p=39027 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-29 23:56:41,757 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-29 23:56:42,768 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.key", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0600"})
2025-03-29 23:56:43,789 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq-ca.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-29 23:56:43,808 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbit cookie] *************************************
2025-03-29 23:56:44,907 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:44,917 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Create rabbitmq config] ********************************
2025-03-29 23:56:46,071 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq.conf.j2', 'dest': '/etc/rabbitmq/rabbitmq.conf'})
2025-03-29 23:56:47,102 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'advanced.config.j2', 'dest': '/etc/rabbitmq/advanced.config'})
2025-03-29 23:56:48,135 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq-server.j2', 'dest': '/etc/default/rabbitmq-server', 'mode': '0644'})
2025-03-29 23:56:49,206 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq-env.j2', 'dest': '/etc/rabbitmq/rabbitmq-env.conf'})
2025-03-29 23:56:49,221 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-29 23:56:49,688 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/system", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-29 23:56:49,699 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-29 23:56:50,179 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/system", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-29 23:56:50,194 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-29 23:56:50,662 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/rabbitmq-server.service.d", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-29 23:56:50,677 p=39027 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-29 23:56:51,804 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-rabbitmq-server.conf"})
2025-03-29 23:56:51,820 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-29 23:56:51,859 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:51,872 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-29 23:56:53,068 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/rabbitmq-server.service.d/override.conf"})
2025-03-29 23:56:53,079 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-29 23:56:53,114 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:53,124 p=39027 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-29 23:56:53,149 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:53,157 p=39027 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-29 23:56:53,193 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:53,202 p=39027 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-29 23:56:53,255 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "rabbitmq-server"})
2025-03-29 23:56:53,282 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load service rabbitmq-server] **************************
2025-03-29 23:56:54,160 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "rabbitmq-server"})
2025-03-29 23:56:54,180 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load timer rabbitmq-server] ****************************
2025-03-29 23:56:54,225 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "rabbitmq-server"}) 
2025-03-29 23:56:54,228 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:54,237 p=39027 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-29 23:56:54,274 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:54,292 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Configure rabbitmq plugins] ****************************
2025-03-29 23:56:57,496 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'rabbitmq_management', 'state': 'enabled'})
2025-03-29 23:56:57,505 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Flush handlers] ****************************************
2025-03-29 23:56:57,514 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Gather cluster status] *********************************
2025-03-29 23:56:59,638 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:59,648 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Define cluster_state fact] *****************************
2025-03-29 23:56:59,824 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:59,835 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbitmq cluster name on primary node] *************
2025-03-29 23:56:59,978 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:56:59,988 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Join cluster on secondary nodes] ***********************
2025-03-29 23:57:00,252 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:57:00,389 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_setup tasks] ************************
2025-03-29 23:57:00,505 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_setup.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-29 23:57:00,578 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Apply rabbitmq policies] *******************************
2025-03-29 23:57:04,405 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'CQv2', 'pattern': '.*', 'priority': 0, 'tags': {'queue-version': 2}, 'state': 'present'})
2025-03-29 23:57:04,421 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure default rabbitmq guest user is removed] *********
2025-03-29 23:57:08,343 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:57:08,350 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure default rabbitmq guest user is removed] *********
2025-03-29 23:57:08,382 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:57:08,389 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] ****************
2025-03-29 23:57:08,435 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:57:08,443 p=39027 u=vagrant n=ansible | TASK [rabbitmq_server : Importing rabbitmq_feature_flags tasks] ****************
2025-03-29 23:57:08,483 p=39027 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:57:08,519 p=39027 u=vagrant n=ansible | PLAY [Ensure rabbitmq user for monitoring GUI] *********************************
2025-03-29 23:57:08,539 p=39027 u=vagrant n=ansible | TASK [Create rabbitmq user for monitoring GUI] *********************************
2025-03-29 23:57:15,947 p=39027 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-29 23:57:15,983 p=39027 u=vagrant n=ansible | PLAY [Gather utility facts] ****************************************************
2025-03-29 23:57:16,043 p=39027 u=vagrant n=ansible | PLAY [Setup the utility location(s)] *******************************************
2025-03-29 23:57:16,061 p=39027 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-29 23:57:16,097 p=39027 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-utility-container-7e5b64c5
2025-03-29 23:57:16,110 p=39027 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-29 23:57:16,192 p=39027 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-utility-container-7e5b64c5
2025-03-29 23:57:16,199 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-29 23:57:16,263 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:16,271 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-29 23:57:16,713 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-utility-container-7e5b64c5'})
2025-03-29 23:57:16,722 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-29 23:57:17,154 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-utility-container-7e5b64c5'})
2025-03-29 23:57:17,166 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-29 23:57:17,196 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:17,204 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-29 23:57:17,625 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-29 23:57:17,634 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-29 23:57:17,687 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:17,698 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-29 23:57:17,752 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:17,762 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-29 23:57:17,807 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:17,816 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-29 23:57:17,947 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:17,955 p=39027 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-29 23:57:17,986 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:18,001 p=39027 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-29 23:57:18,045 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:18,052 p=39027 u=vagrant n=ansible | TASK [Create log directory (not is_metal)] *************************************
2025-03-29 23:57:18,512 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:18,534 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-29 23:57:19,636 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:19,649 p=39027 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-29 23:57:19,704 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:19,719 p=39027 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] **************
2025-03-29 23:57:19,807 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:19,816 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] ****************************
2025-03-29 23:57:19,880 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_client_main.yml for controller-utility-container-7e5b64c5
2025-03-29 23:57:19,889 p=39027 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ********************************
2025-03-29 23:57:19,947 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:19,956 p=39027 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ************
2025-03-29 23:57:20,018 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-utility-container-7e5b64c5
2025-03-29 23:57:20,027 p=39027 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] *******************
2025-03-29 23:57:20,131 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-29 23:57:20,141 p=39027 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] **********************
2025-03-29 23:57:21,523 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:21,533 p=39027 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] ***
2025-03-29 23:57:22,019 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=MariaDB.list)
2025-03-29 23:57:22,036 p=39027 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] **************
2025-03-29 23:57:24,206 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:24,213 p=39027 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] *********************************
2025-03-29 23:57:24,874 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-29 23:57:24,886 p=39027 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] **********
2025-03-29 23:57:24,911 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:24,920 p=39027 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] ******************************
2025-03-29 23:57:25,499 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=None)
2025-03-29 23:57:26,033 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=None)
2025-03-29 23:57:26,038 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:26,048 p=39027 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ***************
2025-03-29 23:57:32,953 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:32,963 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_client_post_install] ********************
2025-03-29 23:57:32,999 p=39027 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_client_post_install.yml for controller-utility-container-7e5b64c5
2025-03-29 23:57:33,018 p=39027 u=vagrant n=ansible | TASK [galera_server : Drop local .my.cnf file] *********************************
2025-03-29 23:57:33,843 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:33,856 p=39027 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-29 23:57:33,941 p=39027 u=vagrant n=ansible | included: pki for controller-utility-container-7e5b64c5
2025-03-29 23:57:33,959 p=39027 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-29 23:57:34,000 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:34,019 p=39027 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-29 23:57:34,061 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:34,073 p=39027 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-29 23:57:34,108 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:34,118 p=39027 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-29 23:57:34,141 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:34,160 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] *****************************
2025-03-29 23:57:34,189 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:34,202 p=39027 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] ****************************
2025-03-29 23:57:34,231 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:34,247 p=39027 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] ***********************************
2025-03-29 23:57:35,413 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/root/openrc'})
2025-03-29 23:57:35,419 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/root/openrc.system_scope', 'condition': False}) 
2025-03-29 23:57:35,429 p=39027 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] ******
2025-03-29 23:57:35,886 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:35,895 p=39027 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] ******************************
2025-03-29 23:57:36,981 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:37,005 p=39027 u=vagrant n=ansible | TASK [Add OpenStack client to distro packages] *********************************
2025-03-29 23:57:37,030 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:37,041 p=39027 u=vagrant n=ansible | TASK [Install distro packages] *************************************************
2025-03-29 23:57:39,187 p=39027 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:39,197 p=39027 u=vagrant n=ansible | TASK [Distribute private ssh key] **********************************************
2025-03-29 23:57:39,224 p=39027 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-29 23:57:39,233 p=39027 u=vagrant n=ansible | TASK [Get list of repo packages] ***********************************************
2025-03-29 23:57:43,385 p=39027 u=vagrant n=ansible | fatal: [controller-utility-container-7e5b64c5]: FAILED! => {"changed": false, "content": "", "elapsed": 3, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 113] No route to host>", "redirected": false, "status": -1, "url": "http://192.168.56.254:8181/constraints/upper_constraints_cached.txt"}
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | controller                 : ok=0    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=62   changed=1    unreachable=0    failed=0    skipped=32   rescued=0    ignored=0   
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=14   changed=0    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=51   changed=0    unreachable=0    failed=0    skipped=31   rescued=0    ignored=0   
2025-03-29 23:57:43,404 p=39027 u=vagrant n=ansible | controller-repo-container-79f4553f : ok=67   changed=37   unreachable=0    failed=0    skipped=36   rescued=0    ignored=0   
2025-03-29 23:57:43,405 p=39027 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=27   changed=0    unreachable=0    failed=1    skipped=16   rescued=0    ignored=0   
2025-03-30 00:43:56,091 p=41190 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 00:43:57,016 p=41190 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 00:44:09,088 p=41190 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 00:44:09,168 p=41190 u=vagrant n=ansible | PLAY [Implement openrc/clouds.yaml on the designated service host] *************
2025-03-30 00:44:09,181 p=41190 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 00:44:09,229 p=41190 u=vagrant n=ansible | included: openstack.osa.install_defaults for localhost
2025-03-30 00:44:09,255 p=41190 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] ***********************************
2025-03-30 00:44:10,856 p=41190 u=vagrant n=ansible | changed: [localhost] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/home/vagrant/openrc'})
2025-03-30 00:44:10,865 p=41190 u=vagrant n=ansible | skipping: [localhost] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/home/vagrant/openrc.system_scope', 'condition': False}) 
2025-03-30 00:44:10,875 p=41190 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] ******
2025-03-30 00:44:11,791 p=41190 u=vagrant n=ansible | changed: [localhost]
2025-03-30 00:44:11,801 p=41190 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] ******************************
2025-03-30 00:44:12,693 p=41190 u=vagrant n=ansible | changed: [localhost]
2025-03-30 00:44:12,733 p=41190 u=vagrant n=ansible | PLAY [Gather keystone facts] ***************************************************
2025-03-30 00:44:12,733 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,734 p=41190 u=vagrant n=ansible | PLAY [Pre-service deployment] **************************************************
2025-03-30 00:44:12,734 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,740 p=41190 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 00:44:12,741 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,747 p=41190 u=vagrant n=ansible | PLAY [Installation and setup of Keystone] **************************************
2025-03-30 00:44:12,747 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,752 p=41190 u=vagrant n=ansible | PLAY [Finalise data migrations if required] ************************************
2025-03-30 00:44:12,752 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,753 p=41190 u=vagrant n=ansible | PLAY [SP/IDP setup] ************************************************************
2025-03-30 00:44:12,753 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,759 p=41190 u=vagrant n=ansible | PLAY [Gather barbican facts] ***************************************************
2025-03-30 00:44:12,759 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,765 p=41190 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 00:44:12,765 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,771 p=41190 u=vagrant n=ansible | PLAY [Installation and setup of barbican] **************************************
2025-03-30 00:44:12,771 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,778 p=41190 u=vagrant n=ansible | PLAY [Gather placement facts] **************************************************
2025-03-30 00:44:12,778 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,784 p=41190 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 00:44:12,785 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,792 p=41190 u=vagrant n=ansible | PLAY [Install placement components] ********************************************
2025-03-30 00:44:12,792 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,799 p=41190 u=vagrant n=ansible | PLAY [Gather glance facts] *****************************************************
2025-03-30 00:44:12,800 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,807 p=41190 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 00:44:12,808 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,816 p=41190 u=vagrant n=ansible | PLAY [Install glance services] *************************************************
2025-03-30 00:44:12,816 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,818 p=41190 u=vagrant n=ansible | PLAY [Gather cinder facts] *****************************************************
2025-03-30 00:44:12,819 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,830 p=41190 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 00:44:12,830 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,841 p=41190 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 00:44:12,841 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,850 p=41190 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 00:44:12,851 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,856 p=41190 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 00:44:12,857 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,869 p=41190 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 00:44:12,869 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:12,873 p=41190 u=vagrant n=ansible | PLAY [Gather nova facts] *******************************************************
2025-03-30 00:44:12,900 p=41190 u=vagrant n=ansible | TASK [Gather minimal facts for nova] *******************************************
2025-03-30 00:44:15,634 p=41190 u=vagrant n=ansible | [WARNING]: Platform linux on host compute is using the discovered Python
interpreter at /usr/bin/python3.10, but future installation of another Python
interpreter could change the meaning of that path. See
https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 00:44:15,635 p=41190 u=vagrant n=ansible | ok: [compute]
2025-03-30 00:44:15,645 p=41190 u=vagrant n=ansible | TASK [Gather additional facts for nova] ****************************************
2025-03-30 00:44:16,963 p=41190 u=vagrant n=ansible | ok: [compute]
2025-03-30 00:44:16,999 p=41190 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 00:44:16,999 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:17,009 p=41190 u=vagrant n=ansible | PLAY [Install nova control-plane services] *************************************
2025-03-30 00:44:17,009 p=41190 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 00:44:17,020 p=41190 u=vagrant n=ansible | PLAY [Install nova compute services] *******************************************
2025-03-30 00:44:17,115 p=41190 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 00:44:17,153 p=41190 u=vagrant n=ansible | included: openstack.osa.install_defaults for compute
2025-03-30 00:44:17,172 p=41190 u=vagrant n=ansible | TASK [Set cinder RBD inuse fact] ***********************************************
2025-03-30 00:44:17,259 p=41190 u=vagrant n=ansible | ok: [compute -> localhost]
2025-03-30 00:44:17,268 p=41190 u=vagrant n=ansible | TASK [Configure container] *****************************************************
2025-03-30 00:44:17,299 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,310 p=41190 u=vagrant n=ansible | TASK [Including unbound-clients tasks] *****************************************
2025-03-30 00:44:17,363 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,372 p=41190 u=vagrant n=ansible | TASK [Add nbd devices to the compute] ******************************************
2025-03-30 00:44:17,415 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,426 p=41190 u=vagrant n=ansible | TASK [Add net/tun device to the compute] ***************************************
2025-03-30 00:44:17,469 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,479 p=41190 u=vagrant n=ansible | TASK [Check if kvm device exists] **********************************************
2025-03-30 00:44:17,518 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,527 p=41190 u=vagrant n=ansible | TASK [Add kvm device to the compute] *******************************************
2025-03-30 00:44:17,568 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,586 p=41190 u=vagrant n=ansible | TASK [os_nova : Gather variables for each operating system] ********************
2025-03-30 00:44:17,671 p=41190 u=vagrant n=ansible | ok: [compute]
2025-03-30 00:44:17,679 p=41190 u=vagrant n=ansible | TASK [os_nova : Fail when virt type is unsupported] ****************************
2025-03-30 00:44:17,727 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,737 p=41190 u=vagrant n=ansible | TASK [os_nova : Fail if service was deployed using a different installation method] ***
2025-03-30 00:44:17,780 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:17,793 p=41190 u=vagrant n=ansible | TASK [os_nova : Gather variables for installation method] **********************
2025-03-30 00:44:17,853 p=41190 u=vagrant n=ansible | ok: [compute]
2025-03-30 00:44:17,865 p=41190 u=vagrant n=ansible | TASK [Including osa.db_setup role] *********************************************
2025-03-30 00:44:18,085 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:18,093 p=41190 u=vagrant n=ansible | TASK [Including osa.mq_setup role] *********************************************
2025-03-30 00:44:18,305 p=41190 u=vagrant n=ansible | skipping: [compute]
2025-03-30 00:44:18,314 p=41190 u=vagrant n=ansible | TASK [os_nova : Including nova_virt_detect tasks] ******************************
2025-03-30 00:44:18,374 p=41190 u=vagrant n=ansible | included: /etc/ansible/roles/os_nova/tasks/nova_virt_detect.yml for compute
2025-03-30 00:44:18,445 p=41190 u=vagrant n=ansible | TASK [os_nova : Get CPU info content and store as var] *************************
2025-03-30 00:44:45,702 p=41190 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Data could not be sent to remote host \"192.168.56.11\". Make sure this host can be reached over ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).\r\n", "unreachable": true}
2025-03-30 00:44:45,704 p=41190 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 00:44:45,705 p=41190 u=vagrant n=ansible | compute                    : ok=7    changed=0    unreachable=1    failed=0    skipped=10   rescued=0    ignored=0   
2025-03-30 00:44:45,705 p=41190 u=vagrant n=ansible | localhost                  : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 00:50:45,605 p=41425 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 00:50:46,430 p=41425 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 00:50:48,152 p=41425 u=vagrant n=ansible | compute | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-03-30 01:01:01,126 p=41538 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 01:01:01,982 p=41538 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 01:01:12,850 p=41538 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 01:01:12,922 p=41538 u=vagrant n=ansible | PLAY [Implement openrc/clouds.yaml on the designated service host] *************
2025-03-30 01:01:12,933 p=41538 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:01:12,971 p=41538 u=vagrant n=ansible | included: openstack.osa.install_defaults for localhost
2025-03-30 01:01:12,992 p=41538 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] ***********************************
2025-03-30 01:01:14,372 p=41538 u=vagrant n=ansible | ok: [localhost] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/home/vagrant/openrc'})
2025-03-30 01:01:14,380 p=41538 u=vagrant n=ansible | skipping: [localhost] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/home/vagrant/openrc.system_scope', 'condition': False}) 
2025-03-30 01:01:14,390 p=41538 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] ******
2025-03-30 01:01:14,795 p=41538 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:01:14,804 p=41538 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] ******************************
2025-03-30 01:01:15,633 p=41538 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:01:15,678 p=41538 u=vagrant n=ansible | PLAY [Gather keystone facts] ***************************************************
2025-03-30 01:01:15,678 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,679 p=41538 u=vagrant n=ansible | PLAY [Pre-service deployment] **************************************************
2025-03-30 01:01:15,680 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,685 p=41538 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:01:15,686 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,692 p=41538 u=vagrant n=ansible | PLAY [Installation and setup of Keystone] **************************************
2025-03-30 01:01:15,693 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,698 p=41538 u=vagrant n=ansible | PLAY [Finalise data migrations if required] ************************************
2025-03-30 01:01:15,699 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,700 p=41538 u=vagrant n=ansible | PLAY [SP/IDP setup] ************************************************************
2025-03-30 01:01:15,700 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,706 p=41538 u=vagrant n=ansible | PLAY [Gather barbican facts] ***************************************************
2025-03-30 01:01:15,706 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,713 p=41538 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:01:15,713 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,721 p=41538 u=vagrant n=ansible | PLAY [Installation and setup of barbican] **************************************
2025-03-30 01:01:15,721 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,729 p=41538 u=vagrant n=ansible | PLAY [Gather placement facts] **************************************************
2025-03-30 01:01:15,729 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,735 p=41538 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:01:15,735 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,740 p=41538 u=vagrant n=ansible | PLAY [Install placement components] ********************************************
2025-03-30 01:01:15,740 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,745 p=41538 u=vagrant n=ansible | PLAY [Gather glance facts] *****************************************************
2025-03-30 01:01:15,746 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,751 p=41538 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:01:15,751 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,757 p=41538 u=vagrant n=ansible | PLAY [Install glance services] *************************************************
2025-03-30 01:01:15,758 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,759 p=41538 u=vagrant n=ansible | PLAY [Gather cinder facts] *****************************************************
2025-03-30 01:01:15,759 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,769 p=41538 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:01:15,769 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,778 p=41538 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:01:15,778 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,788 p=41538 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:01:15,788 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,793 p=41538 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:01:15,794 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,802 p=41538 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:01:15,802 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:15,805 p=41538 u=vagrant n=ansible | PLAY [Gather nova facts] *******************************************************
2025-03-30 01:01:15,834 p=41538 u=vagrant n=ansible | TASK [Gather minimal facts for nova] *******************************************
2025-03-30 01:01:18,271 p=41538 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:01:18,280 p=41538 u=vagrant n=ansible | TASK [Gather additional facts for nova] ****************************************
2025-03-30 01:01:19,482 p=41538 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:01:19,512 p=41538 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:01:19,512 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:19,522 p=41538 u=vagrant n=ansible | PLAY [Install nova control-plane services] *************************************
2025-03-30 01:01:19,522 p=41538 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:01:19,537 p=41538 u=vagrant n=ansible | PLAY [Install nova compute services] *******************************************
2025-03-30 01:01:19,636 p=41538 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:01:19,676 p=41538 u=vagrant n=ansible | included: openstack.osa.install_defaults for compute
2025-03-30 01:01:19,690 p=41538 u=vagrant n=ansible | TASK [Set cinder RBD inuse fact] ***********************************************
2025-03-30 01:01:19,772 p=41538 u=vagrant n=ansible | ok: [compute -> localhost]
2025-03-30 01:01:19,782 p=41538 u=vagrant n=ansible | TASK [Configure container] *****************************************************
2025-03-30 01:01:19,807 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:19,816 p=41538 u=vagrant n=ansible | TASK [Including unbound-clients tasks] *****************************************
2025-03-30 01:01:19,864 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:19,874 p=41538 u=vagrant n=ansible | TASK [Add nbd devices to the compute] ******************************************
2025-03-30 01:01:19,915 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:19,923 p=41538 u=vagrant n=ansible | TASK [Add net/tun device to the compute] ***************************************
2025-03-30 01:01:19,964 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:19,975 p=41538 u=vagrant n=ansible | TASK [Check if kvm device exists] **********************************************
2025-03-30 01:01:20,018 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:20,026 p=41538 u=vagrant n=ansible | TASK [Add kvm device to the compute] *******************************************
2025-03-30 01:01:20,070 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:20,088 p=41538 u=vagrant n=ansible | TASK [os_nova : Gather variables for each operating system] ********************
2025-03-30 01:01:20,171 p=41538 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:01:20,180 p=41538 u=vagrant n=ansible | TASK [os_nova : Fail when virt type is unsupported] ****************************
2025-03-30 01:01:20,218 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:20,229 p=41538 u=vagrant n=ansible | TASK [os_nova : Fail if service was deployed using a different installation method] ***
2025-03-30 01:01:20,269 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:20,276 p=41538 u=vagrant n=ansible | TASK [os_nova : Gather variables for installation method] **********************
2025-03-30 01:01:20,333 p=41538 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:01:20,341 p=41538 u=vagrant n=ansible | TASK [Including osa.db_setup role] *********************************************
2025-03-30 01:01:20,538 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:20,548 p=41538 u=vagrant n=ansible | TASK [Including osa.mq_setup role] *********************************************
2025-03-30 01:01:20,753 p=41538 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:01:20,761 p=41538 u=vagrant n=ansible | TASK [os_nova : Including nova_virt_detect tasks] ******************************
2025-03-30 01:01:20,818 p=41538 u=vagrant n=ansible | included: /etc/ansible/roles/os_nova/tasks/nova_virt_detect.yml for compute
2025-03-30 01:01:20,875 p=41538 u=vagrant n=ansible | TASK [os_nova : Get CPU info content and store as var] *************************
2025-03-30 01:01:48,142 p=41538 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Data could not be sent to remote host \"192.168.56.11\". Make sure this host can be reached over ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).\r\n", "unreachable": true}
2025-03-30 01:01:48,146 p=41538 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 01:01:48,146 p=41538 u=vagrant n=ansible | compute                    : ok=7    changed=0    unreachable=1    failed=0    skipped=10   rescued=0    ignored=0   
2025-03-30 01:01:48,146 p=41538 u=vagrant n=ansible | localhost                  : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 01:21:36,828 p=43188 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 01:21:37,608 p=43188 u=vagrant n=ansible | [WARNING]:  * Failed to parse /opt/openstack-
ansible/inventory/dynamic_inventory.py with script plugin: Inventory script
(/opt/openstack-ansible/inventory/dynamic_inventory.py) had an execution error:
Traceback (most recent call last):   File "/opt/openstack-
ansible/inventory/dynamic_inventory.py", line 85, in <module>     main()   File
"/opt/openstack-ansible/inventory/dynamic_inventory.py", line 80, in main
output = generate.main(**all_args)   File "/opt/openstack-
ansible/osa_toolkit/generate.py", line 1232, in main     container_skel_load(
File "/opt/openstack-ansible/osa_toolkit/generate.py", line 813, in
container_skel_load     _add_additional_networks(   File "/opt/openstack-
ansible/osa_toolkit/generate.py", line 608, in _add_additional_networks
_add_additional_networks(   File "/opt/openstack-
ansible/osa_toolkit/generate.py", line 701, in _add_additional_networks     if
user_config[cphg].get(container_host) is not None: KeyError: 'compute_hosts'

2025-03-30 01:21:37,608 p=43188 u=vagrant n=ansible | [WARNING]:  * Failed to parse /opt/openstack-
ansible/inventory/dynamic_inventory.py with ini plugin: /opt/openstack-
ansible/inventory/dynamic_inventory.py:18: Expected key=value host variable
assignment, got: argparse

2025-03-30 01:21:37,609 p=43188 u=vagrant n=ansible | [WARNING]: Unable to parse /opt/openstack-
ansible/inventory/dynamic_inventory.py as an inventory source

2025-03-30 01:21:37,616 p=43188 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 01:21:38,105 p=43188 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 01:21:38,176 p=43188 u=vagrant n=ansible | PLAY [Create CA certificates] **************************************************
2025-03-30 01:21:38,196 p=43188 u=vagrant n=ansible | TASK [Create CA certificates] **************************************************
2025-03-30 01:21:38,238 p=43188 u=vagrant n=ansible | included: pki for localhost
2025-03-30 01:21:38,246 p=43188 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 01:21:38,280 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:38,286 p=43188 u=vagrant n=ansible | TASK [pki : Create PKI directories] ********************************************
2025-03-30 01:21:39,027 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-30 01:21:39,366 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-30 01:21:39,743 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-30 01:21:40,090 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-30 01:21:40,469 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-30 01:21:40,878 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-30 01:21:41,236 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-30 01:21:41,248 p=43188 u=vagrant n=ansible | TASK [pki : Create certificate authorities] ************************************
2025-03-30 01:21:41,390 p=43188 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-30 01:21:41,423 p=43188 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-30 01:21:41,433 p=43188 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ******
2025-03-30 01:21:41,860 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-30 01:21:42,262 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-30 01:21:42,724 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-30 01:21:43,149 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-30 01:21:43,164 p=43188 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-30 01:21:43,627 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:43,641 p=43188 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ******************
2025-03-30 01:21:44,496 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:44,508 p=43188 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] ***********************
2025-03-30 01:21:50,212 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:50,224 p=43188 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] ************************
2025-03-30 01:21:50,813 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:50,821 p=43188 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *****************************
2025-03-30 01:21:50,863 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:50,873 p=43188 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] ***************
2025-03-30 01:21:50,910 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:50,922 p=43188 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] ***************
2025-03-30 01:21:50,964 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:50,977 p=43188 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ******************
2025-03-30 01:21:51,009 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:51,020 p=43188 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-30 01:21:51,058 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:51,069 p=43188 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] **************************
2025-03-30 01:21:51,119 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:51,133 p=43188 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] *************************
2025-03-30 01:21:51,189 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:51,198 p=43188 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-30 01:21:51,239 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:51,255 p=43188 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-30 01:21:51,300 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:51,312 p=43188 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ***
2025-03-30 01:21:51,800 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-30 01:21:52,179 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-30 01:21:52,546 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-30 01:21:52,932 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-30 01:21:52,944 p=43188 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-30 01:21:53,408 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:53,418 p=43188 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] **********
2025-03-30 01:21:53,860 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:53,870 p=43188 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] ***************
2025-03-30 01:21:59,109 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:59,119 p=43188 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ****************
2025-03-30 01:21:59,508 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:21:59,519 p=43188 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] *********************
2025-03-30 01:21:59,565 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,576 p=43188 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *******
2025-03-30 01:21:59,610 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,620 p=43188 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *******
2025-03-30 01:21:59,664 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,681 p=43188 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] **********
2025-03-30 01:21:59,756 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,770 p=43188 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-30 01:21:59,813 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,824 p=43188 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ******************
2025-03-30 01:21:59,866 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,878 p=43188 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *****************
2025-03-30 01:21:59,920 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:21:59,928 p=43188 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-30 01:22:00,344 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:22:00,353 p=43188 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-30 01:22:00,396 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:00,442 p=43188 u=vagrant n=ansible | PLAY [Create SSHD CA] **********************************************************
2025-03-30 01:22:00,514 p=43188 u=vagrant n=ansible | TASK [Create SSHD certificate authority] ***************************************
2025-03-30 01:22:00,579 p=43188 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-30 01:22:00,587 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] ***
2025-03-30 01:22:00,618 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:22:00,627 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *****************
2025-03-30 01:22:01,049 p=43188 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-30 01:22:01,058 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ****************************
2025-03-30 01:22:01,108 p=43188 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-30 01:22:01,116 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 01:22:06,781 p=43188 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:22:06,791 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 01:22:06,835 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:06,846 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 01:22:06,894 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:06,902 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***
2025-03-30 01:22:06,927 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:06,938 p=43188 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] ***************************
2025-03-30 01:22:06,961 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:07,011 p=43188 u=vagrant n=ansible | PLAY [Generate any extra user certificates] ************************************
2025-03-30 01:22:07,036 p=43188 u=vagrant n=ansible | TASK [Create user certificates] ************************************************
2025-03-30 01:22:07,108 p=43188 u=vagrant n=ansible | included: pki for localhost
2025-03-30 01:22:07,115 p=43188 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-30 01:22:07,151 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:07,166 p=43188 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-30 01:22:07,207 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:07,217 p=43188 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-30 01:22:07,276 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:07,317 p=43188 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-30 01:22:07,347 p=43188 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:22:07,390 p=43188 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *******************************************
2025-03-30 01:22:07,390 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,397 p=43188 u=vagrant n=ansible | PLAY [Gather host facts] *******************************************************
2025-03-30 01:22:07,397 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,402 p=43188 u=vagrant n=ansible | PLAY [Basic host setup] ********************************************************
2025-03-30 01:22:07,402 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,409 p=43188 u=vagrant n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: lxc_hosts

2025-03-30 01:22:07,409 p=43188 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-30 01:22:07,409 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,417 p=43188 u=vagrant n=ansible | PLAY [Basic lxc host setup] ****************************************************
2025-03-30 01:22:07,417 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,422 p=43188 u=vagrant n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: all_containers

2025-03-30 01:22:07,423 p=43188 u=vagrant n=ansible | PLAY [Set lxc containers group] ************************************************
2025-03-30 01:22:07,423 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,429 p=43188 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-30 01:22:07,429 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,430 p=43188 u=vagrant n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: all_lxc_containers

2025-03-30 01:22:07,431 p=43188 u=vagrant n=ansible | PLAY [Create container(s)] *****************************************************
2025-03-30 01:22:07,431 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,433 p=43188 u=vagrant n=ansible | PLAY [Gather lxc containers facts] *********************************************
2025-03-30 01:22:07,433 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,435 p=43188 u=vagrant n=ansible | PLAY [Configure containers default software] ***********************************
2025-03-30 01:22:07,435 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,444 p=43188 u=vagrant n=ansible | PLAY [Gather security hardening facts] *****************************************
2025-03-30 01:22:07,445 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,450 p=43188 u=vagrant n=ansible | PLAY [Apply security hardening configurations] *********************************
2025-03-30 01:22:07,451 p=43188 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:22:07,454 p=43188 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 01:22:07,502 p=43188 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 01:22:07,502 p=43188 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-30 01:25:32,002 p=43507 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 01:25:32,809 p=43507 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 01:25:33,368 p=43507 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 01:25:33,435 p=43507 u=vagrant n=ansible | PLAY [Create CA certificates] **************************************************
2025-03-30 01:25:33,458 p=43507 u=vagrant n=ansible | TASK [Create CA certificates] **************************************************
2025-03-30 01:25:33,507 p=43507 u=vagrant n=ansible | included: pki for localhost
2025-03-30 01:25:33,515 p=43507 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 01:25:33,548 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:33,555 p=43507 u=vagrant n=ansible | TASK [pki : Create PKI directories] ********************************************
2025-03-30 01:25:34,250 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-30 01:25:34,684 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-30 01:25:35,047 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-30 01:25:35,429 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-30 01:25:35,805 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-30 01:25:36,156 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-30 01:25:36,530 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-30 01:25:36,543 p=43507 u=vagrant n=ansible | TASK [pki : Create certificate authorities] ************************************
2025-03-30 01:25:36,673 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-30 01:25:36,707 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-30 01:25:36,717 p=43507 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ******
2025-03-30 01:25:37,150 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-30 01:25:37,517 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-30 01:25:37,894 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-30 01:25:38,270 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-30 01:25:38,282 p=43507 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-30 01:25:38,725 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:38,737 p=43507 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ******************
2025-03-30 01:25:39,405 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:39,414 p=43507 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] ***********************
2025-03-30 01:25:44,839 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:44,851 p=43507 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] ************************
2025-03-30 01:25:45,427 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:45,436 p=43507 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *****************************
2025-03-30 01:25:45,479 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,491 p=43507 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] ***************
2025-03-30 01:25:45,532 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,542 p=43507 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] ***************
2025-03-30 01:25:45,584 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,601 p=43507 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ******************
2025-03-30 01:25:45,633 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,641 p=43507 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-30 01:25:45,678 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,687 p=43507 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] **************************
2025-03-30 01:25:45,724 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,735 p=43507 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] *************************
2025-03-30 01:25:45,772 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,780 p=43507 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-30 01:25:45,808 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,817 p=43507 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-30 01:25:45,857 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:45,867 p=43507 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ***
2025-03-30 01:25:46,305 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-30 01:25:46,691 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-30 01:25:47,049 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-30 01:25:47,416 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-30 01:25:47,427 p=43507 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-30 01:25:47,855 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:47,865 p=43507 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] **********
2025-03-30 01:25:48,291 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:48,301 p=43507 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] ***************
2025-03-30 01:25:53,845 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:53,855 p=43507 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ****************
2025-03-30 01:25:54,231 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:54,243 p=43507 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] *********************
2025-03-30 01:25:54,295 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,306 p=43507 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *******
2025-03-30 01:25:54,343 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,354 p=43507 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *******
2025-03-30 01:25:54,386 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,396 p=43507 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] **********
2025-03-30 01:25:54,437 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,445 p=43507 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-30 01:25:54,487 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,497 p=43507 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ******************
2025-03-30 01:25:54,534 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,545 p=43507 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *****************
2025-03-30 01:25:54,593 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:54,601 p=43507 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-30 01:25:55,102 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:55,114 p=43507 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-30 01:25:55,205 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:25:55,282 p=43507 u=vagrant n=ansible | PLAY [Create SSHD CA] **********************************************************
2025-03-30 01:25:55,304 p=43507 u=vagrant n=ansible | TASK [Create SSHD certificate authority] ***************************************
2025-03-30 01:25:55,360 p=43507 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-30 01:25:55,369 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] ***
2025-03-30 01:25:55,400 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:25:55,409 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *****************
2025-03-30 01:25:55,843 p=43507 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-30 01:25:55,855 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ****************************
2025-03-30 01:25:55,903 p=43507 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-30 01:25:55,915 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 01:26:01,467 p=43507 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:26:01,477 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 01:26:01,527 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,538 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 01:26:01,581 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,590 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***
2025-03-30 01:26:01,614 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,626 p=43507 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] ***************************
2025-03-30 01:26:01,658 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,701 p=43507 u=vagrant n=ansible | PLAY [Generate any extra user certificates] ************************************
2025-03-30 01:26:01,726 p=43507 u=vagrant n=ansible | TASK [Create user certificates] ************************************************
2025-03-30 01:26:01,792 p=43507 u=vagrant n=ansible | included: pki for localhost
2025-03-30 01:26:01,800 p=43507 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-30 01:26:01,844 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,859 p=43507 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-30 01:26:01,902 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,913 p=43507 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-30 01:26:01,938 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:01,949 p=43507 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-30 01:26:01,972 p=43507 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 01:26:02,018 p=43507 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *******************************************
2025-03-30 01:26:02,050 p=43507 u=vagrant n=ansible | TASK [Ensure python is installed] **********************************************
2025-03-30 01:26:02,596 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:28,938 p=43507 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).", "unreachable": true}
2025-03-30 01:26:29,063 p=43507 u=vagrant n=ansible | PLAY [Gather host facts] *******************************************************
2025-03-30 01:26:29,216 p=43507 u=vagrant n=ansible | PLAY [Basic host setup] ********************************************************
2025-03-30 01:26:29,250 p=43507 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:26:29,296 p=43507 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-30 01:26:29,329 p=43507 u=vagrant n=ansible | TASK [Check for a supported Operating System] **********************************
2025-03-30 01:26:29,395 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:26:29,495 p=43507 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 01:26:30,450 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:30,469 p=43507 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 01:26:30,500 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:30,539 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] ************
2025-03-30 01:26:30,645 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:30,665 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] ************************
2025-03-30 01:26:31,079 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:31,095 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] ***************************
2025-03-30 01:26:31,995 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:32,015 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ******************
2025-03-30 01:26:32,043 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:32,059 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ***
2025-03-30 01:26:32,743 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:32,761 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] ************
2025-03-30 01:26:32,798 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:32,818 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] ***********************
2025-03-30 01:26:33,268 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:33,403 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] *********************
2025-03-30 01:26:34,290 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:34,313 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *****************************
2025-03-30 01:26:34,388 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller
2025-03-30 01:26:34,417 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] ***************************
2025-03-30 01:26:34,576 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:34,597 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] *************************************
2025-03-30 01:26:35,039 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:35,059 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] **********************
2025-03-30 01:26:35,468 p=43507 u=vagrant n=ansible | ok: [controller -> localhost]
2025-03-30 01:26:35,488 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] ***********************
2025-03-30 01:26:37,135 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:37,160 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] ***
2025-03-30 01:26:37,231 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller
2025-03-30 01:26:37,258 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *****************
2025-03-30 01:26:37,684 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:37,704 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *****************
2025-03-30 01:26:37,825 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:26:37,845 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] ***
2025-03-30 01:26:38,282 p=43507 u=vagrant n=ansible | ok: [controller] => (item=uca.list)
2025-03-30 01:26:38,670 p=43507 u=vagrant n=ansible | ok: [controller] => (item=osbpo.list)
2025-03-30 01:26:38,693 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] ***
2025-03-30 01:26:50,111 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:50,134 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *******************************
2025-03-30 01:26:51,105 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 01:26:51,138 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] ************************************
2025-03-30 01:26:52,053 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:52,070 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] **************************************
2025-03-30 01:26:52,107 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:52,132 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *****************
2025-03-30 01:26:52,303 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/configure_metal_hosts.yml for controller
2025-03-30 01:26:52,340 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Check Kernel Version] **********************************
2025-03-30 01:26:52,392 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:52,414 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages for bare metal nodes] **********
2025-03-30 01:26:54,443 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:26:54,462 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages for bare metal nodes] ***
2025-03-30 01:26:54,496 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:54,516 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Check how kernel modules are implemented (statically builtin, dynamic, not set)] ***
2025-03-30 01:26:54,549 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:54,579 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Fail fast if we can't load a module] *******************
2025-03-30 01:26:54,606 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:26:54,630 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Load kernel module(s)] *********************************
2025-03-30 01:26:55,296 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': '8021q'})
2025-03-30 01:26:55,705 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'br_netfilter'})
2025-03-30 01:26:56,098 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_multipath'})
2025-03-30 01:26:56,517 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_snapshot'})
2025-03-30 01:26:57,195 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ebtables'})
2025-03-30 01:26:57,607 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6table_filter'})
2025-03-30 01:26:58,082 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6_tables'})
2025-03-30 01:26:58,494 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_tables'})
2025-03-30 01:26:58,901 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'xt_MASQUERADE'})
2025-03-30 01:26:59,288 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ipt_REJECT'})
2025-03-30 01:26:59,694 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_filter'})
2025-03-30 01:27:00,126 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_mangle'})
2025-03-30 01:27:00,521 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_nat'})
2025-03-30 01:27:00,908 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_vs'})
2025-03-30 01:27:01,331 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iscsi_tcp'})
2025-03-30 01:27:01,783 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nbd'})
2025-03-30 01:27:02,201 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_conntrack'})
2025-03-30 01:27:02,607 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_defrag_ipv4'})
2025-03-30 01:27:03,032 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_nat'})
2025-03-30 01:27:03,444 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vhost_net'})
2025-03-30 01:27:03,833 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'x_tables'})
2025-03-30 01:27:03,861 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Write list of modules to load at boot] *****************
2025-03-30 01:27:04,783 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:04,804 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Adding new system tuning] ******************************
2025-03-30 01:27:05,562 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_watches', 'value': 1048576})
2025-03-30 01:27:05,986 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2025-03-30 01:27:06,404 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2025-03-30 01:27:06,813 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.ip_forward', 'value': 1})
2025-03-30 01:27:07,226 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.netfilter.nf_conntrack_max', 'value': 262144})
2025-03-30 01:27:07,602 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_background_ratio', 'value': 5})
2025-03-30 01:27:08,079 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_ratio', 'value': 10})
2025-03-30 01:27:08,491 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.swappiness', 'value': 5})
2025-03-30 01:27:08,913 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2025-03-30 01:27:09,323 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2025-03-30 01:27:09,725 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-arptables', 'value': 1})
2025-03-30 01:27:10,123 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.igmp_max_memberships', 'value': 1024})
2025-03-30 01:27:10,545 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-30 01:27:10,946 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-30 01:27:11,357 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-30 01:27:11,801 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.route.gc_thresh', 'value': '16384'})
2025-03-30 01:27:12,280 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_interval', 'value': 60})
2025-03-30 01:27:12,822 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_stale_time', 'value': 120})
2025-03-30 01:27:13,350 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-30 01:27:13,805 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-30 01:27:14,562 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-30 01:27:15,308 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.route.gc_thresh', 'value': '16384'})
2025-03-30 01:27:15,746 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_interval', 'value': 60})
2025-03-30 01:27:16,182 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_stale_time', 'value': 120})
2025-03-30 01:27:16,620 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.conf.lo.disable_ipv6', 'value': 0})
2025-03-30 01:27:17,123 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.aio-max-nr', 'value': 131072})
2025-03-30 01:27:17,155 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Configure sysstat] *************************************
2025-03-30 01:27:17,228 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_sysstat.yml for controller
2025-03-30 01:27:17,262 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat config] *********************************
2025-03-30 01:27:18,399 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:18,423 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat cron] ***********************************
2025-03-30 01:27:19,459 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:19,482 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Start and enable the sysstat service] ******************
2025-03-30 01:27:19,519 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:19,536 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Create a directory to hold systemd journals on disk] ***
2025-03-30 01:27:20,015 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:20,048 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Create tmpfiles structure in journald directory] *******
2025-03-30 01:27:20,089 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:20,109 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] ************************
2025-03-30 01:27:20,723 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:20,741 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *******************************
2025-03-30 01:27:22,917 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:22,940 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] ************
2025-03-30 01:27:22,979 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:23,002 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] **********************************
2025-03-30 01:27:23,551 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:23,575 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] ***************************************
2025-03-30 01:27:23,621 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:23,648 p=43507 u=vagrant n=ansible | TASK [Including PKI role] ******************************************************
2025-03-30 01:27:23,764 p=43507 u=vagrant n=ansible | included: pki for controller
2025-03-30 01:27:23,814 p=43507 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 01:27:23,883 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:23,906 p=43507 u=vagrant n=ansible | TASK [pki : Install certificate authorities] ***********************************
2025-03-30 01:27:24,001 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller
2025-03-30 01:27:24,030 p=43507 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] **********
2025-03-30 01:27:24,545 p=43507 u=vagrant n=ansible | ok: [controller -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-30 01:27:24,570 p=43507 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *******************************
2025-03-30 01:27:25,807 p=43507 u=vagrant n=ansible | ok: [controller] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 01:27:25,840 p=43507 u=vagrant n=ansible | TASK [pki : Update CA store] ***************************************************
2025-03-30 01:27:25,891 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:25,945 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *******************
2025-03-30 01:27:26,071 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller
2025-03-30 01:27:26,117 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] ***************************************
2025-03-30 01:27:26,878 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:26,900 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ****************
2025-03-30 01:27:27,668 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:27,697 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] ************************
2025-03-30 01:27:27,749 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:27,773 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] ************
2025-03-30 01:27:27,838 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:27,862 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] ***************
2025-03-30 01:27:27,897 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:27,965 p=43507 u=vagrant n=ansible | TASK [Ensure deploy host SSH connection is reset] ******************************
2025-03-30 01:27:28,079 p=43507 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-30 01:27:28,238 p=43507 u=vagrant n=ansible | PLAY [Basic lxc host setup] ****************************************************
2025-03-30 01:27:28,273 p=43507 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:27:28,325 p=43507 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-30 01:27:28,359 p=43507 u=vagrant n=ansible | TASK [Check the state of the default LXC service log directory] ****************
2025-03-30 01:27:29,107 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:29,132 p=43507 u=vagrant n=ansible | TASK [Create the log aggregation parent directory] *****************************
2025-03-30 01:27:29,586 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:29,602 p=43507 u=vagrant n=ansible | TASK [Move the existing folder to the log aggregation parent] ******************
2025-03-30 01:27:29,650 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:29,681 p=43507 u=vagrant n=ansible | TASK [Create the new LXC service log directory] ********************************
2025-03-30 01:27:30,331 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:30,448 p=43507 u=vagrant n=ansible | TASK [Create the LXC service log aggregation link] *****************************
2025-03-30 01:27:31,246 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:31,383 p=43507 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 01:27:31,432 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:31,450 p=43507 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 01:27:31,487 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:31,529 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Gather variables for each operating system] ******************
2025-03-30 01:27:31,625 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:31,646 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Gather container variables] **********************************
2025-03-30 01:27:31,887 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:32,013 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_pre_install tasks] *****************************
2025-03-30 01:27:32,082 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_pre_install.yml for controller
2025-03-30 01:27:32,109 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Create base directories] *************************************
2025-03-30 01:27:32,718 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/lxc)
2025-03-30 01:27:33,185 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/usr/local/bin)
2025-03-30 01:27:33,684 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/network/interfaces.d)
2025-03-30 01:27:34,196 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/apparmor.d/lxc)
2025-03-30 01:27:34,696 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/usr/share/lxc/templates)
2025-03-30 01:27:35,154 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/openstack)
2025-03-30 01:27:35,714 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/openstack/backup)
2025-03-30 01:27:36,163 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/openstack/log)
2025-03-30 01:27:36,666 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/var/lib/lxc)
2025-03-30 01:27:37,116 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/var/cache/lxc/download)
2025-03-30 01:27:37,147 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_install tasks"] ********************************
2025-03-30 01:27:37,229 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_install_apt.yml for controller
2025-03-30 01:27:37,259 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Remove conflicting packages] *********************************
2025-03-30 01:27:38,548 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:38,575 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Install apt packages] ****************************************
2025-03-30 01:27:40,407 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:40,426 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Drop irqbalance config] **************************************
2025-03-30 01:27:41,336 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:41,368 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc-openstack apparmor profile] *************************
2025-03-30 01:27:42,275 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:42,303 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Flush handler to reload apparmor profiles] *******************
2025-03-30 01:27:42,351 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_post_install tasks] ****************************
2025-03-30 01:27:42,422 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_post_install.yml for controller
2025-03-30 01:27:42,444 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Ensure the lxc dnsmasq user exists] **************************
2025-03-30 01:27:43,308 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:43,337 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Drop base config file(s)] ************************************
2025-03-30 01:27:44,237 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-openstack.conf.j2', 'dest': '/etc/lxc/lxc-openstack.conf'})
2025-03-30 01:27:45,066 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-net.default.j2', 'dest': '/etc/default/lxc-net', 'mode': '0644'})
2025-03-30 01:27:45,909 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc.default.j2', 'dest': '/etc/default/lxc', 'mode': '0644'})
2025-03-30 01:27:46,811 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-system-manage.j2', 'dest': '/usr/local/bin/lxc-system-manage', 'mode': '0755'})
2025-03-30 01:27:46,837 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc veth check script] **********************************
2025-03-30 01:27:47,687 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:47,708 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Set systemd DefaultTasksMax value] ***************************
2025-03-30 01:27:48,376 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:48,397 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Set sshd MaxSessions] ****************************************
2025-03-30 01:27:48,785 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:48,803 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Tuning kernel for lxc] ***************************************
2025-03-30 01:27:49,204 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_instances', 'value': 1024})
2025-03-30 01:27:49,231 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_net tasks] *************************************
2025-03-30 01:27:49,312 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_net.yml for controller
2025-03-30 01:27:49,337 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Check if NetworkManager is running] **************************
2025-03-30 01:27:49,748 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:49,778 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Ensure network services wait on networking (if using NetworkManager)] ***
2025-03-30 01:27:49,803 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:49,832 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Disable and stop lxc-net] ************************************
2025-03-30 01:27:51,083 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:51,112 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Setup LXC OVS Bridge] ****************************************
2025-03-30 01:27:51,137 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:51,261 p=43507 u=vagrant n=ansible | TASK [Run the systemd-networkd role] *******************************************
2025-03-30 01:27:51,380 p=43507 u=vagrant n=ansible | included: systemd_networkd for controller
2025-03-30 01:27:51,402 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] ***********
2025-03-30 01:27:51,478 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:51,506 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] ***
2025-03-30 01:27:51,551 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:51,571 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] ***
2025-03-30 01:27:51,603 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:51,623 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] *************************************
2025-03-30 01:27:51,665 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:51,694 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] **************************
2025-03-30 01:27:51,763 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:51,804 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] *********************
2025-03-30 01:27:51,860 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:51,886 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] ********************
2025-03-30 01:27:52,367 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:27:52,387 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] ***********************
2025-03-30 01:27:52,423 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:52,446 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] ***************
2025-03-30 01:27:52,479 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:52,509 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] ************************
2025-03-30 01:27:52,541 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:52,559 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] ************
2025-03-30 01:27:53,679 p=43507 u=vagrant n=ansible | ok: [controller] => (item=[0, {'NetDev': {'Name': 'lxcbr0', 'Kind': 'bridge'}, 'Bridge': {'ForwardDelaySec': 0, 'HelloTimeSec': 2, 'MaxAgeSec': 12, 'STP': False}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-30 01:27:53,705 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] **************
2025-03-30 01:27:54,307 p=43507 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-30 01:27:54,337 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] ***********
2025-03-30 01:27:55,039 p=43507 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-30 01:27:55,060 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] **********
2025-03-30 01:27:55,144 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:55,167 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ****************
2025-03-30 01:27:55,230 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:55,251 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] ********************
2025-03-30 01:27:56,204 p=43507 u=vagrant n=ansible | changed: [controller]
2025-03-30 01:27:56,234 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 01:27:56,283 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] *************************
2025-03-30 01:27:56,369 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}]) 
2025-03-30 01:27:56,372 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:56,405 p=43507 u=vagrant n=ansible | TASK [Run the systemd-service role] ********************************************
2025-03-30 01:27:56,562 p=43507 u=vagrant n=ansible | included: systemd_service for controller
2025-03-30 01:27:56,615 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 01:27:57,084 p=43507 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-30 01:27:57,108 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 01:27:57,559 p=43507 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lock/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-30 01:27:57,580 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 01:27:57,627 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:57,647 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 01:27:58,574 p=43507 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-lxc-dnsmasq.conf"})
2025-03-30 01:27:58,597 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 01:27:59,231 p=43507 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/lxc-dnsmasq.service", "config_overrides": {"Unit": {"Before": "lxc.service"}, "Service": {"PIDFile": "/run/lxc/dnsmasq.pid"}}, "config_type": "ini"})
2025-03-30 01:27:59,256 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 01:27:59,310 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:59,393 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 01:27:59,443 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:59,477 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 01:27:59,512 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:59,531 p=43507 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 01:27:59,587 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:27:59,617 p=43507 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 01:27:59,769 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller => (item={"service_name": "lxc-dnsmasq"})
2025-03-30 01:27:59,813 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load service lxc-dnsmasq] ******************************
2025-03-30 01:28:00,565 p=43507 u=vagrant n=ansible | ok: [controller] => (item={"service_name": "lxc-dnsmasq"})
2025-03-30 01:28:00,596 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load timer lxc-dnsmasq] ********************************
2025-03-30 01:28:00,655 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq"}) 
2025-03-30 01:28:00,659 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:28:00,683 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 01:28:00,739 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:28:00,782 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Check Container Bridge exists] *******************************
2025-03-30 01:28:01,182 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:28:01,221 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] **********************************************
2025-03-30 01:28:01,271 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache tasks] ***********************************
2025-03-30 01:28:01,339 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache.yml for controller
2025-03-30 01:28:01,384 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Set LXC cache fact(s)] ***************************************
2025-03-30 01:28:01,452 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:28:01,483 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Retrieve the expiry object] **********************************
2025-03-30 01:28:01,902 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:28:01,923 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Set cache refresh fact] **************************************
2025-03-30 01:28:01,957 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:28:01,979 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_rootfs tasks] ****************************
2025-03-30 01:28:02,005 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:28:02,027 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_preparation tasks] ***********************
2025-03-30 01:28:02,059 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:28:02,086 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_create tasks] ****************************
2025-03-30 01:28:02,122 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:28:02,159 p=43507 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] **********************************************
2025-03-30 01:28:02,329 p=43507 u=vagrant n=ansible | PLAY [Set lxc containers group] ************************************************
2025-03-30 01:28:02,416 p=43507 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:28:02,555 p=43507 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:28:02,600 p=43507 u=vagrant n=ansible | TASK [Add hosts to dynamic inventory group] ************************************
2025-03-30 01:28:02,656 p=43507 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 01:28:02,699 p=43507 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 01:28:02,825 p=43507 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:02,829 p=43507 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:02,852 p=43507 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 01:28:02,982 p=43507 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-30 01:28:03,110 p=43507 u=vagrant n=ansible | PLAY [Create container(s)] *****************************************************
2025-03-30 01:28:03,128 p=43507 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:28:03,306 p=43507 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:28:03,417 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *******************
2025-03-30 01:28:03,935 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:03,980 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:04,420 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:04,472 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:04,847 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:04,861 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Check the physical_host variable is set] **********
2025-03-30 01:28:04,926 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:28:04,959 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:28:04,987 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:05,001 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:05,027 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:28:05,039 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Read custom facts from previous runs] *************
2025-03-30 01:28:07,950 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:07,981 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:10,234 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:10,259 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:12,309 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:12,321 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Check for lxc volume group] ***********************
2025-03-30 01:28:12,377 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:28:12,413 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:28:12,457 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:12,459 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:12,494 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:28:12,504 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : LXC VG check] *************************************
2025-03-30 01:28:12,548 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:28:12,571 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:28:12,590 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:12,593 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:12,607 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:28:12,616 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_destroy tasks] ************
2025-03-30 01:28:12,661 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:28:12,683 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:28:12,721 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:12,722 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:12,746 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:28:12,755 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks] *************
2025-03-30 01:28:12,901 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:28:12,914 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Container service directories] ********************
2025-03-30 01:28:13,384 p=43507 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/controller-galera-container-f800b10b)
2025-03-30 01:28:13,426 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/controller-memcached-container-71b4149f)
2025-03-30 01:28:13,828 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/backup/controller-galera-container-f800b10b)
2025-03-30 01:28:13,874 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-memcached-container-71b4149f)
2025-03-30 01:28:14,258 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/log/controller-galera-container-f800b10b)
2025-03-30 01:28:14,295 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/log/controller-memcached-container-71b4149f)
2025-03-30 01:28:14,689 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-galera-container-f800b10b)
2025-03-30 01:28:14,752 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-memcached-container-71b4149f)
2025-03-30 01:28:15,140 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/controller-utility-container-7e5b64c5)
2025-03-30 01:28:15,221 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 01:28:15,667 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/backup/controller-utility-container-7e5b64c5)
2025-03-30 01:28:15,813 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/backup/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 01:28:16,105 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/log/controller-utility-container-7e5b64c5)
2025-03-30 01:28:16,237 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/log/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 01:28:16,546 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-utility-container-7e5b64c5)
2025-03-30 01:28:16,664 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 01:28:16,990 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/controller-repo-container-79f4553f)
2025-03-30 01:28:17,386 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-repo-container-79f4553f)
2025-03-30 01:28:17,789 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/log/controller-repo-container-79f4553f)
2025-03-30 01:28:18,171 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-repo-container-79f4553f)
2025-03-30 01:28:18,182 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : LXC autodev setup] ********************************
2025-03-30 01:28:19,131 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:19,161 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:20,085 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:20,136 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:20,973 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:20,986 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks for dir] *****
2025-03-30 01:28:21,125 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create_dir.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:28:21,157 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create container (dir)] ***************************
2025-03-30 01:28:22,002 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:22,029 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:22,546 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:22,602 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:23,095 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:23,104 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Check container state] ****************************
2025-03-30 01:28:23,729 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:23,795 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:24,399 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:24,462 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:24,892 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:24,902 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Start the container if it is not already running] ***
2025-03-30 01:28:24,964 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:28:25,001 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:28:25,037 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:25,058 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:25,085 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:28:25,099 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_config tasks] *************
2025-03-30 01:28:25,430 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_config.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:28:25,460 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Write default container config] *******************
2025-03-30 01:28:25,964 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-galera-container-f800b10b/autodev)
2025-03-30 01:28:26,006 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-memcached-container-71b4149f/autodev)
2025-03-30 01:28:26,420 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 01:28:26,471 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 01:28:26,940 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 01:28:26,992 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 01:28:27,474 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 01:28:27,551 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 01:28:27,932 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 01:28:28,026 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 01:28:28,478 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 01:28:28,567 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 01:28:29,038 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-utility-container-7e5b64c5/autodev)
2025-03-30 01:28:29,128 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/autodev)
2025-03-30 01:28:29,506 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 01:28:29,583 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 01:28:30,048 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 01:28:30,153 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 01:28:30,579 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 01:28:30,701 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 01:28:31,077 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 01:28:31,309 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 01:28:31,693 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 01:28:31,827 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 01:28:32,176 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-repo-container-79f4553f/autodev)
2025-03-30 01:28:32,617 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 01:28:33,018 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 01:28:33,482 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 01:28:34,003 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 01:28:34,430 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 01:28:34,447 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Ensure containers have required auto mounts] ******
2025-03-30 01:28:34,993 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:35,050 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:35,521 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:35,579 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:36,043 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:36,060 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Ensure bind mount host directories exists] ********
2025-03-30 01:28:36,680 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-30 01:28:36,741 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-30 01:28:37,248 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-30 01:28:37,307 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-30 01:28:37,740 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-repo-container-79f4553f', 'container_directory': '/var/backup'})
2025-03-30 01:28:37,760 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] ********
2025-03-30 01:28:38,240 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-30 01:28:38,304 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-30 01:28:38,816 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-30 01:28:38,888 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-30 01:28:39,269 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-repo-container-79f4553f', 'container_directory': '/var/backup'})
2025-03-30 01:28:39,282 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create and start the container] *******************
2025-03-30 01:28:39,811 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:39,852 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:40,362 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:40,427 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:40,830 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:40,839 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Gather container facts] ***************************
2025-03-30 01:28:42,017 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:28:42,308 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:28:42,918 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:43,158 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:43,760 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:28:43,771 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Drop container setup script] **********************
2025-03-30 01:28:45,129 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:28:45,227 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:28:46,435 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:28:46,527 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:28:47,634 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:28:47,641 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Drop container first run script] ******************
2025-03-30 01:28:48,765 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:48,797 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:49,969 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:49,995 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:51,017 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:51,026 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Execute first script] *****************************
2025-03-30 01:28:51,584 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:28:51,718 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:28:52,381 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:28:52,384 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:28:53,166 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:28:53,181 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create container mac script] **********************
2025-03-30 01:28:54,502 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:28:54,652 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:28:55,599 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:28:55,810 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:28:57,117 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:28:57,431 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:28:58,152 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:28:58,480 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:28:59,261 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:00,292 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:00,309 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Cleanup old mac scripts] **************************
2025-03-30 01:29:01,223 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:01,432 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:02,125 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:02,166 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:02,866 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:02,921 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:03,396 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:03,480 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:03,942 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:04,448 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:04,470 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Set define static mac address from an existing interface] ***
2025-03-30 01:29:05,142 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:05,169 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:05,717 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:05,737 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:06,335 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:06,391 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:06,953 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:07,034 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:07,870 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:08,287 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:08,302 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Gather hardware addresses to be used as facts] ****
2025-03-30 01:29:08,803 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:08,889 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:09,253 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:09,352 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:09,756 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:09,874 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:10,212 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:10,305 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:10,704 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:11,158 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:11,173 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Set fixed hardware address fact] ******************
2025-03-30 01:29:11,246 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6M2I6Y2M6ZjEK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,265 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6ZDA6YjM6Y2UK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,313 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ZjA6Njk6ZTQK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,343 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ODM6OWQ6YWYK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,393 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6YWM6ZDQ6ZWQK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,408 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6N2E6ZjU6NzgK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,449 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6ZTE6Mjg6MWMK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,474 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6N2Y6ZDI6ZjYK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,503 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'content': 'MDA6MTY6M2U6ZGI6ZGI6NzEK', 'source': '/var/lib/lxc/controller-repo-container-79f4553f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-repo-container-79f4553f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,530 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'content': 'MDA6MTY6M2U6Mzg6NTM6ODIK', 'source': '/var/lib/lxc/controller-repo-container-79f4553f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-repo-container-79f4553f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 01:29:11,543 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : LXC host config for container networks] ***********
2025-03-30 01:29:12,771 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 01:29:12,819 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 01:29:13,933 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 01:29:13,966 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 01:29:15,207 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 01:29:15,376 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 01:29:16,573 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 01:29:16,644 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 01:29:17,709 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 01:29:18,720 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 01:29:18,741 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Container network includes] ***********************
2025-03-30 01:29:19,693 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:19,753 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:20,304 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:20,343 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:20,893 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:20,954 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:21,451 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:21,523 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:22,012 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 01:29:22,547 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 01:29:22,564 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create wiring script] *****************************
2025-03-30 01:29:23,761 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:29:23,816 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:29:24,872 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:29:24,982 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:29:25,819 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:29:25,829 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Drop veth cleanup script] *************************
2025-03-30 01:29:26,992 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:29:27,117 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:29:28,248 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:29:28,389 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:29:29,211 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:29:29,225 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Defines a pre, post, and haltsignal configs] ******
2025-03-30 01:29:29,785 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-30 01:29:29,811 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-30 01:29:30,188 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-30 01:29:30,232 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-30 01:29:30,621 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 01:29:30,656 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 01:29:31,080 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-30 01:29:31,133 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-30 01:29:31,535 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-30 01:29:31,570 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-30 01:29:32,001 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 01:29:32,031 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 01:29:32,420 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-repo-container-79f4553f/veth-cleanup.sh)
2025-03-30 01:29:32,793 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-repo-container-79f4553f/veth-cleanup.sh)
2025-03-30 01:29:33,161 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 01:29:33,176 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Run veth wiring] **********************************
2025-03-30 01:29:33,225 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:33,290 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:33,311 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:33,326 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:33,352 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:33,361 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Run container veth wiring script] *****************
2025-03-30 01:29:33,427 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 01:29:33,455 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 01:29:33,469 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:33,482 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 01:29:33,505 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 01:29:33,519 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:33,544 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 01:29:33,568 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 01:29:33,581 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:33,593 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 01:29:33,619 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 01:29:33,621 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:33,646 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 01:29:33,666 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 01:29:33,668 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:33,676 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_network tasks] ************
2025-03-30 01:29:33,873 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_network.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:29:34,022 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] ***********
2025-03-30 01:29:34,109 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:29:34,138 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:29:34,186 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:34,216 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:34,260 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:29:34,270 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] ***
2025-03-30 01:29:34,329 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:34,360 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:34,402 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:34,412 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:34,458 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:34,472 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] ***
2025-03-30 01:29:34,508 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:34,536 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:34,562 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:34,590 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:34,612 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:34,621 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] *************************************
2025-03-30 01:29:34,664 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:34,714 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:34,732 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:34,740 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:34,766 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:34,777 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] **************************
2025-03-30 01:29:34,837 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:34,875 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:34,905 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:34,912 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:34,940 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:34,952 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] *********************
2025-03-30 01:29:35,011 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:35,045 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:35,070 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:35,085 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:35,106 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:35,117 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] ********************
2025-03-30 01:29:35,705 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:29:35,780 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:29:36,499 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:36,572 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:36,946 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:29:36,955 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] ***********************
2025-03-30 01:29:37,015 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:37,035 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:37,058 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:37,063 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:37,096 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:37,111 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] ***************
2025-03-30 01:29:37,141 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:37,185 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:37,208 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:37,212 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:37,234 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:37,243 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] ************************
2025-03-30 01:29:37,312 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:37,353 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:37,383 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:37,392 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:37,428 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:37,439 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] ************
2025-03-30 01:29:37,509 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:29:37,541 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:29:37,582 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:29:37,592 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:29:37,625 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:29:37,633 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] **************
2025-03-30 01:29:38,590 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:38,632 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:39,375 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:39,613 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:40,324 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:40,646 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:41,236 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:41,463 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:42,099 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:42,832 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:42,845 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] ***********
2025-03-30 01:29:43,965 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:43,995 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:44,872 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:45,001 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:45,949 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:46,060 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:47,000 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:47,111 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:48,238 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:49,082 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 01:29:49,099 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] **********
2025-03-30 01:29:49,792 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth1)
2025-03-30 01:29:49,801 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth1)
2025-03-30 01:29:50,292 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth0)
2025-03-30 01:29:50,356 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth0)
2025-03-30 01:29:50,969 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth1)
2025-03-30 01:29:51,016 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth1)
2025-03-30 01:29:51,625 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth0)
2025-03-30 01:29:51,687 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth0)
2025-03-30 01:29:52,187 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=eth1)
2025-03-30 01:29:52,687 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=eth0)
2025-03-30 01:29:52,698 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ****************
2025-03-30 01:29:54,273 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:54,486 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:56,187 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:56,400 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:57,640 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:57,844 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:58,802 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:59,043 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:29:59,962 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:30:01,007 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 01:30:01,021 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] ********************
2025-03-30 01:30:02,130 p=43507 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 01:30:02,150 p=43507 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 01:30:03,229 p=43507 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:03,281 p=43507 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:04,240 p=43507 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 01:30:04,257 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 01:30:04,273 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 01:30:04,289 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 01:30:04,301 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 01:30:04,313 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 01:30:04,326 p=43507 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] *************************
2025-03-30 01:30:04,464 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,486 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,507 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:04,519 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,522 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,548 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:04,627 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,639 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,654 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:04,684 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,693 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,700 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:04,768 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,779 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 01:30:04,782 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:04,828 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create resolved link] *****************************
2025-03-30 01:30:05,525 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:05,556 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:06,098 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:06,119 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:06,557 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:06,566 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 01:30:07,145 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:07,184 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:07,675 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:07,767 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:08,611 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:08,679 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:09,447 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:09,469 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:10,088 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:10,650 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:10,663 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 01:30:11,324 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:11,415 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:11,950 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:12,033 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:12,585 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:12,701 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:13,065 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:13,161 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:13,606 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:14,035 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 01:30:14,047 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 01:30:14,621 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 01:30:14,671 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 01:30:15,178 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 01:30:15,260 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 01:30:15,732 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 01:30:15,748 p=43507 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 01:30:17,220 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 01:30:17,269 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 01:30:18,448 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 01:30:18,582 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 01:30:20,002 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 01:30:20,075 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 01:30:21,230 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 01:30:21,295 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 01:30:22,551 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 01:30:23,742 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 01:30:23,753 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 01:30:24,796 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 01:30:24,868 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 01:30:25,946 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 01:30:26,058 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 01:30:26,885 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 01:30:26,900 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 01:30:28,732 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 01:30:28,815 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 01:30:30,191 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 01:30:30,289 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 01:30:31,513 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 01:30:31,532 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 01:30:31,642 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:31,688 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:31,753 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:31,788 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:31,841 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:31,853 p=43507 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 01:30:31,948 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:31,998 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:32,076 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:32,108 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:32,174 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:32,189 p=43507 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 01:30:32,277 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:32,308 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:32,367 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:32,380 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:32,421 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:32,433 p=43507 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 01:30:32,831 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f => (item={"service_name": "sysctl-container"})
2025-03-30 01:30:32,846 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f => (item={"service_name": "systemd-hostnamed"})
2025-03-30 01:30:32,983 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load service sysctl-container] *************************
2025-03-30 01:30:34,417 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"})
2025-03-30 01:30:34,547 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"})
2025-03-30 01:30:35,718 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"})
2025-03-30 01:30:35,771 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"})
2025-03-30 01:30:36,777 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container"})
2025-03-30 01:30:36,796 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load timer sysctl-container] ***************************
2025-03-30 01:30:36,855 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"}) 
2025-03-30 01:30:36,864 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:36,892 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"}) 
2025-03-30 01:30:36,920 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:36,933 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"}) 
2025-03-30 01:30:36,948 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:36,982 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"}) 
2025-03-30 01:30:36,985 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:37,013 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container"}) 
2025-03-30 01:30:37,015 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:37,030 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load service systemd-hostnamed] ************************
2025-03-30 01:30:38,012 p=43507 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 01:30:38,075 p=43507 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 01:30:39,081 p=43507 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 01:30:39,146 p=43507 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 01:30:40,071 p=43507 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 01:30:40,092 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load timer systemd-hostnamed] **************************
2025-03-30 01:30:40,149 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 01:30:40,157 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:40,188 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 01:30:40,199 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:40,232 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 01:30:40,241 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:40,276 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 01:30:40,278 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:40,305 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 01:30:40,309 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:40,323 p=43507 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 01:30:40,428 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:40,473 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:40,542 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:40,576 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:40,634 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:40,668 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Add global_environment_variables to environment file] ***
2025-03-30 01:30:41,156 p=43507 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 01:30:41,196 p=43507 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 01:30:41,680 p=43507 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:41,768 p=43507 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:42,149 p=43507 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 01:30:42,160 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create localhost config] **************************
2025-03-30 01:30:42,752 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:42,772 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:43,184 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:43,212 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:43,619 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:43,628 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Set hostnamectl name] *****************************
2025-03-30 01:30:43,673 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:30:43,719 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:30:43,738 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:43,762 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:43,771 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:30:43,781 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Generate machine-id] ******************************
2025-03-30 01:30:44,282 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:44,404 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:44,871 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:44,943 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:45,333 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:45,342 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Ensure the dbus directory exists] *****************
2025-03-30 01:30:45,983 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:46,007 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:46,591 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:46,600 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:47,070 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:47,082 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Create dbus machine-id] ***************************
2025-03-30 01:30:47,941 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:47,969 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:48,841 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:48,862 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:49,552 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:49,568 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Retrieve the machine-id] **************************
2025-03-30 01:30:50,086 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:50,128 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:50,600 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:50,661 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:50,992 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:51,000 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Set bind mount for journal linking] ***************
2025-03-30 01:30:51,068 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:51,109 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:51,140 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:51,167 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:51,183 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:51,192 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Ensure journal directory exists] ******************
2025-03-30 01:30:51,618 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=controller)
2025-03-30 01:30:51,655 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=controller)
2025-03-30 01:30:52,055 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=controller-galera-container-f800b10b)
2025-03-30 01:30:52,104 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=controller-memcached-container-71b4149f)
2025-03-30 01:30:52,594 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=controller)
2025-03-30 01:30:52,701 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=controller)
2025-03-30 01:30:53,187 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=controller-utility-container-7e5b64c5)
2025-03-30 01:30:53,253 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=controller-rabbit-mq-container-6f8ad97c)
2025-03-30 01:30:53,713 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=controller)
2025-03-30 01:30:54,178 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=controller-repo-container-79f4553f)
2025-03-30 01:30:54,191 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] ********
2025-03-30 01:30:54,680 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 01:30:54,746 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 01:30:55,184 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 01:30:55,276 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 01:30:55,635 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 01:30:55,645 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *******************
2025-03-30 01:30:56,171 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:56,223 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:56,859 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:56,934 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:57,294 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:57,302 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Record the container variant deployed] ************
2025-03-30 01:30:58,013 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:30:58,037 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:30:58,452 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:30:58,487 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:30:58,958 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:30:58,971 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 01:30:58,983 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 01:30:58,995 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 01:30:59,004 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 01:30:59,017 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 01:30:59,032 p=43507 u=vagrant n=ansible | TASK [lxc_container_create : (RE)Gather facts post setup] **********************
2025-03-30 01:31:00,257 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:00,490 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:01,587 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:01,759 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:02,903 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:03,166 p=43507 u=vagrant n=ansible | TASK [Wait for container connectivity] *****************************************
2025-03-30 01:31:07,193 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:07,220 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:10,875 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:10,917 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:14,626 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:14,638 p=43507 u=vagrant n=ansible | TASK [Clear facts for new container(s)] ****************************************
2025-03-30 01:31:14,695 p=43507 u=vagrant n=ansible | PLAY [Gather lxc containers facts] *********************************************
2025-03-30 01:31:14,708 p=43507 u=vagrant n=ansible | TASK [Gathering Facts] *********************************************************
2025-03-30 01:31:16,445 p=43507 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-memcached-container-71b4149f is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 01:31:16,446 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:16,726 p=43507 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-galera-container-f800b10b is using
the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 01:31:16,727 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:17,588 p=43507 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-utility-container-7e5b64c5 is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 01:31:17,591 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:17,834 p=43507 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-rabbit-mq-container-6f8ad97c is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 01:31:17,834 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:18,594 p=43507 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-repo-container-79f4553f is using
the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 01:31:18,594 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:18,772 p=43507 u=vagrant n=ansible | PLAY [Configure containers default software] ***********************************
2025-03-30 01:31:18,796 p=43507 u=vagrant n=ansible | TASK [Check for a supported Operating System] **********************************
2025-03-30 01:31:18,873 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:18,891 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:18,935 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:18,941 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:18,986 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:18,993 p=43507 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:31:19,122 p=43507 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:31:19,193 p=43507 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 01:31:20,442 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:20,548 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:21,612 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:21,740 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:22,736 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:22,747 p=43507 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 01:31:22,797 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:31:22,824 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:31:22,851 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:22,858 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:22,888 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:31:22,931 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] ************
2025-03-30 01:31:23,036 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:23,058 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:23,134 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:23,140 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:23,206 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:23,216 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] ************************
2025-03-30 01:31:23,726 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:23,765 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:24,251 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:24,294 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:24,714 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:24,721 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] ***************************
2025-03-30 01:31:25,917 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:25,964 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:27,071 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:27,173 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:28,306 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:28,318 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ******************
2025-03-30 01:31:28,363 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:31:28,391 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:31:28,411 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:28,416 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:28,433 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:31:28,442 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ***
2025-03-30 01:31:28,959 p=43507 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 01:31:28,992 p=43507 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 01:31:29,502 p=43507 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:29,563 p=43507 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:29,979 p=43507 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 01:31:29,991 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] ************
2025-03-30 01:31:30,045 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:31:30,074 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:31:30,103 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:30,115 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:30,132 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:31:30,142 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] ***********************
2025-03-30 01:31:30,611 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:30,664 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:31,102 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:31,151 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:31,545 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:31,553 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] *********************
2025-03-30 01:31:32,386 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:32,432 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:33,186 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:33,215 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:33,898 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:33,909 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *****************************
2025-03-30 01:31:34,108 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:31:34,155 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] ***************************
2025-03-30 01:31:34,289 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:34,299 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] *************************************
2025-03-30 01:31:34,785 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:34,820 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:35,310 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:35,355 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:35,870 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:35,880 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] **********************
2025-03-30 01:31:36,325 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-30 01:31:36,337 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] ***********************
2025-03-30 01:31:37,974 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:38,211 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:39,557 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:39,820 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:41,095 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:41,103 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] ***
2025-03-30 01:31:41,320 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:31:41,384 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *****************
2025-03-30 01:31:42,235 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:42,286 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:31:42,908 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:31:42,943 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:31:43,350 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:31:43,357 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *****************
2025-03-30 01:31:43,472 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:43,530 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:43,573 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:43,642 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:43,673 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 01:31:43,682 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] ***
2025-03-30 01:31:44,149 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=uca.list)
2025-03-30 01:31:44,177 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=uca.list)
2025-03-30 01:31:44,577 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=osbpo.list)
2025-03-30 01:31:44,612 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=osbpo.list)
2025-03-30 01:31:45,121 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=uca.list)
2025-03-30 01:31:45,173 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=uca.list)
2025-03-30 01:31:45,595 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=osbpo.list)
2025-03-30 01:31:45,662 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=osbpo.list)
2025-03-30 01:31:46,124 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=uca.list)
2025-03-30 01:31:46,635 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=osbpo.list)
2025-03-30 01:31:46,662 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] ***
2025-03-30 01:31:55,721 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:31:56,710 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:04,678 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:05,563 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:12,016 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:12,027 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *******************************
2025-03-30 01:32:12,846 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 01:32:12,968 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 01:32:13,628 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 01:32:13,809 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 01:32:14,369 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 01:32:14,381 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] ************************************
2025-03-30 01:32:15,606 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:15,632 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:16,874 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:16,909 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:17,980 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:17,988 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] **************************************
2025-03-30 01:32:18,036 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:18,090 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:18,110 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:18,119 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:18,145 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:18,153 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *****************
2025-03-30 01:32:18,204 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:18,237 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:18,266 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:18,287 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:18,312 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:18,323 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] ************************
2025-03-30 01:32:18,817 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:18,859 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:19,285 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:19,334 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:19,739 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:19,748 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *******************************
2025-03-30 01:32:21,709 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:22,255 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:24,151 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:24,655 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:25,938 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:25,951 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] ************
2025-03-30 01:32:25,997 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:26,023 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:26,051 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:26,057 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:26,078 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:26,086 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] **********************************
2025-03-30 01:32:26,545 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:26,604 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:27,025 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:27,100 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:27,443 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:27,451 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] ***************************************
2025-03-30 01:32:27,500 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:27,533 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:27,562 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:27,582 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:27,605 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:27,615 p=43507 u=vagrant n=ansible | TASK [Including PKI role] ******************************************************
2025-03-30 01:32:27,820 p=43507 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:32:27,889 p=43507 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 01:32:27,977 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:28,013 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:28,048 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:28,065 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:28,099 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:28,107 p=43507 u=vagrant n=ansible | TASK [pki : Install certificate authorities] ***********************************
2025-03-30 01:32:28,377 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:32:28,390 p=43507 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] **********
2025-03-30 01:32:28,793 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-30 01:32:28,810 p=43507 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *******************************
2025-03-30 01:32:30,011 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 01:32:30,016 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 01:32:31,322 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 01:32:31,352 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 01:32:32,485 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 01:32:32,500 p=43507 u=vagrant n=ansible | TASK [pki : Update CA store] ***************************************************
2025-03-30 01:32:32,577 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:32,606 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:32,633 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:32,642 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:32,667 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:32,699 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *******************
2025-03-30 01:32:32,827 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 01:32:32,921 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] ***************************************
2025-03-30 01:32:33,403 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:33,423 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:33,830 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:33,864 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:34,261 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:34,270 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ****************
2025-03-30 01:32:34,722 p=43507 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 01:32:34,774 p=43507 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 01:32:35,213 p=43507 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:35,276 p=43507 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:35,645 p=43507 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 01:32:35,654 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] ************************
2025-03-30 01:32:35,712 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:35,755 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:35,771 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:35,794 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:35,821 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:35,831 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] ************
2025-03-30 01:32:35,874 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:35,902 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:35,922 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:35,926 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:35,951 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:35,962 p=43507 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] ***************
2025-03-30 01:32:36,009 p=43507 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 01:32:36,035 p=43507 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 01:32:36,057 p=43507 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 01:32:36,063 p=43507 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 01:32:36,082 p=43507 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 01:32:36,220 p=43507 u=vagrant n=ansible | PLAY [Gather security hardening facts] *****************************************
2025-03-30 01:32:36,280 p=43507 u=vagrant n=ansible | TASK [Gather additional facts] *************************************************
2025-03-30 01:32:36,335 p=43507 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller
2025-03-30 01:32:36,352 p=43507 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] **************
2025-03-30 01:32:37,926 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:38,092 p=43507 u=vagrant n=ansible | PLAY [Apply security hardening configurations] *********************************
2025-03-30 01:32:38,148 p=43507 u=vagrant n=ansible | TASK [Include security hardening role] *****************************************
2025-03-30 01:32:38,746 p=43507 u=vagrant n=ansible | included: ansible-hardening for controller
2025-03-30 01:32:38,759 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Gather variables for each operating system] **********
2025-03-30 01:32:38,851 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:38,869 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for check/audit mode] **************************
2025-03-30 01:32:39,270 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:39,296 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if we are booting with EFI or UEFI] *****
2025-03-30 01:32:39,412 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:39,431 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set facts] *******************************************
2025-03-30 01:32:39,488 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:39,509 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if grub is present on the remote node] *********
2025-03-30 01:32:39,894 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:39,918 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Create temporary directory to hold any temporary files] ***
2025-03-30 01:32:40,563 p=43507 u=vagrant n=ansible | changed: [controller]
2025-03-30 01:32:40,583 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set a fact for the temporary directory] **************
2025-03-30 01:32:40,625 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:40,647 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Verify all installed RPM packages] *******************
2025-03-30 01:32:40,685 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:40,787 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Locate top level directories to check for .shosts] ***
2025-03-30 01:32:40,820 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:40,839 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for .shosts or shosts.equiv files] *************
2025-03-30 01:32:40,870 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:40,888 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all users on the system] ***********
2025-03-30 01:32:41,471 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:41,494 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all interactive users on the system] ***
2025-03-30 01:32:41,867 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:41,889 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Install EPEL repository] *****************************
2025-03-30 01:32:41,925 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:41,948 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Add packages based on STIG requirements] *************
2025-03-30 01:32:43,808 p=43507 u=vagrant n=ansible | ok: [controller] => (item=present)
2025-03-30 01:32:43,832 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove packages based on STIG requirements] **********
2025-03-30 01:32:45,153 p=43507 u=vagrant n=ansible | ok: [controller] => (item=absent)
2025-03-30 01:32:45,176 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Including OS-specific tasks] *************************
2025-03-30 01:32:45,254 p=43507 u=vagrant n=ansible | included: /etc/ansible/roles/ansible-hardening/tasks/rhel7stig/apt.yml for controller
2025-03-30 01:32:45,429 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure debsums is installed] *************************
2025-03-30 01:32:45,458 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:45,478 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Gather debsums report] *******************************
2025-03-30 01:32:45,505 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:45,527 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Get files with invalid checksums (apt)] ****
2025-03-30 01:32:45,555 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:45,574 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Create comma-separated list] ***************
2025-03-30 01:32:45,602 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:45,623 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - The cryptographic hash of system files and commands must match vendor values (apt)] ***
2025-03-30 01:32:45,653 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:45,677 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Search for AllowUnauthenticated in /etc/apt/apt.conf.d/] ***
2025-03-30 01:32:46,051 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:46,073 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71977 - Package management tool must verify authenticity of packages] ***
2025-03-30 01:32:46,103 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:46,123 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71979 - Package management tool must verify authenticity of locally-installed packages] ***
2025-03-30 01:32:46,507 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:46,531 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71987 - Clean requirements/dependencies when removing packages (dpkg)] ***
2025-03-30 01:32:46,561 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:46,581 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Enable automatic package updates (apt)] **************
2025-03-30 01:32:46,621 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:46,641 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/security/pwquality.conf exists] ********
2025-03-30 01:32:47,036 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:47,056 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set password quality requirements] *******************
2025-03-30 01:32:47,526 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:47,548 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for SHA512 password storage in PAM] ************
2025-03-30 01:32:47,931 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:47,951 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Print warning if PAM is not using SHA512 for password storage] ***
2025-03-30 01:32:48,007 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "PAM is not using SHA512 for password storage. This is a security issue.\n"
}
2025-03-30 01:32:48,028 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure libuser is storing passwords using SHA512] ****
2025-03-30 01:32:48,083 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:48,106 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set minimum password lifetime limit to 24 hours for interactive accounts] ***
2025-03-30 01:32:48,163 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,177 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,191 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,205 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,209 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:48,229 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set maximum password lifetime limit to 60 days for interactive accounts] ***
2025-03-30 01:32:48,287 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,299 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,311 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,324 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:32:48,328 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:48,350 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure that users cannot reuse one of their last 5 passwords] ***
2025-03-30 01:32:48,400 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:48,423 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure accounts are disabled if the password expires] ***
2025-03-30 01:32:48,452 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:48,472 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Apply shadow-utils configurations] *******************
2025-03-30 01:32:48,905 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'ENCRYPT_METHOD', 'value': 'SHA512', 'stig_id': 'V-71921', 'os_family': 'all'})
2025-03-30 01:32:48,912 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MIN_DAYS', 'value': '', 'stig_id': 'V-71925', 'os_family': 'all'}) 
2025-03-30 01:32:48,922 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MAX_DAYS', 'value': '', 'stig_id': 'V-71929', 'os_family': 'all'}) 
2025-03-30 01:32:48,938 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'FAIL_DELAY', 'value': '4', 'stig_id': 'V-71951', 'os_family': 'RedHat'}) 
2025-03-30 01:32:48,944 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'UMASK', 'value': '', 'stig_id': 'V-71995', 'os_family': 'all'}) 
2025-03-30 01:32:49,302 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'CREATE_HOME', 'value': 'yes', 'stig_id': 'V-72013', 'os_family': 'all'})
2025-03-30 01:32:49,324 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for groups in /etc/passwd that are not in /etc/group] ***
2025-03-30 01:32:49,384 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:49,407 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Get all accounts with UID 0] *************************
2025-03-30 01:32:49,811 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:32:49,832 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Print warnings for non-root users with UID 0] ********
2025-03-30 01:32:49,859 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:49,878 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for local interactive users without a home directory assigned] ***
2025-03-30 01:32:49,941 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:32:49,965 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check each user to see if its home directory exists on the filesystem] ***
2025-03-30 01:32:50,485 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'root', 'uid': 0, 'gid': 0, 'gecos': 'root', 'dir': '/root', 'shell': '/bin/bash', 'group': {'name': 'root', 'passwd': 'x', 'gid': 0}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:50,863 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'daemon', 'uid': 1, 'gid': 1, 'gecos': 'daemon', 'dir': '/usr/sbin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:51,251 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'bin', 'uid': 2, 'gid': 2, 'gecos': 'bin', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'bin', 'passwd': 'x', 'gid': 2}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:51,623 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sys', 'uid': 3, 'gid': 3, 'gecos': 'sys', 'dir': '/dev', 'shell': '/usr/sbin/nologin', 'group': {'name': 'sys', 'passwd': 'x', 'gid': 3}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:51,995 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sync', 'uid': 4, 'gid': 65534, 'gecos': 'sync', 'dir': '/bin', 'shell': '/bin/sync', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:52,443 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'games', 'uid': 5, 'gid': 60, 'gecos': 'games', 'dir': '/usr/games', 'shell': '/usr/sbin/nologin', 'group': {'name': 'games', 'passwd': 'x', 'gid': 60}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:52,827 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'man', 'uid': 6, 'gid': 12, 'gecos': 'man', 'dir': '/var/cache/man', 'shell': '/usr/sbin/nologin', 'group': {'name': 'man', 'passwd': 'x', 'gid': 12}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:53,178 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lp', 'uid': 7, 'gid': 7, 'gecos': 'lp', 'dir': '/var/spool/lpd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'lp', 'passwd': 'x', 'gid': 7}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:53,552 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'mail', 'uid': 8, 'gid': 8, 'gecos': 'mail', 'dir': '/var/mail', 'shell': '/usr/sbin/nologin', 'group': {'name': 'mail', 'passwd': 'x', 'gid': 8}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:53,910 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'news', 'uid': 9, 'gid': 9, 'gecos': 'news', 'dir': '/var/spool/news', 'shell': '/usr/sbin/nologin', 'group': {'name': 'news', 'passwd': 'x', 'gid': 9}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:54,262 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uucp', 'uid': 10, 'gid': 10, 'gecos': 'uucp', 'dir': '/var/spool/uucp', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uucp', 'passwd': 'x', 'gid': 10}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:54,624 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'proxy', 'uid': 13, 'gid': 13, 'gecos': 'proxy', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'proxy', 'passwd': 'x', 'gid': 13}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:54,975 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'www-data', 'uid': 33, 'gid': 33, 'gecos': 'www-data', 'dir': '/var/www', 'shell': '/usr/sbin/nologin', 'group': {'name': 'www-data', 'passwd': 'x', 'gid': 33}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:55,343 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'backup', 'uid': 34, 'gid': 34, 'gecos': 'backup', 'dir': '/var/backups', 'shell': '/usr/sbin/nologin', 'group': {'name': 'backup', 'passwd': 'x', 'gid': 34}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:55,702 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'list', 'uid': 38, 'gid': 38, 'gecos': 'Mailing List Manager', 'dir': '/var/list', 'shell': '/usr/sbin/nologin', 'group': {'name': 'list', 'passwd': 'x', 'gid': 38}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:56,057 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'irc', 'uid': 39, 'gid': 39, 'gecos': 'ircd', 'dir': '/run/ircd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'irc', 'passwd': 'x', 'gid': 39}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:56,401 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'gnats', 'uid': 41, 'gid': 41, 'gecos': 'Gnats Bug-Reporting System (admin)', 'dir': '/var/lib/gnats', 'shell': '/usr/sbin/nologin', 'group': {'name': 'gnats', 'passwd': 'x', 'gid': 41}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:56,762 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:57,143 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-network', 'uid': 100, 'gid': 102, 'gecos': 'systemd Network Management,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-network', 'passwd': 'x', 'gid': 102}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:57,529 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-resolve', 'uid': 101, 'gid': 103, 'gecos': 'systemd Resolver,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-resolve', 'passwd': 'x', 'gid': 103}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:57,918 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'messagebus', 'uid': 102, 'gid': 105, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'messagebus', 'passwd': 'x', 'gid': 105}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:58,301 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-timesync', 'uid': 103, 'gid': 106, 'gecos': 'systemd Time Synchronization,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-timesync', 'passwd': 'x', 'gid': 106}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:58,658 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'syslog', 'uid': 104, 'gid': 111, 'gecos': '', 'dir': '/home/syslog', 'shell': '/usr/sbin/nologin', 'group': {'name': 'syslog', 'passwd': 'x', 'gid': 111}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:59,017 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': '_apt', 'uid': 105, 'gid': 65534, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:59,397 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tss', 'uid': 106, 'gid': 112, 'gecos': 'TPM software stack,,,', 'dir': '/var/lib/tpm', 'shell': '/bin/false', 'group': {'name': 'tss', 'passwd': 'x', 'gid': 112}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:32:59,772 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uuidd', 'uid': 107, 'gid': 113, 'gecos': '', 'dir': '/run/uuidd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uuidd', 'passwd': 'x', 'gid': 113}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:00,130 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tcpdump', 'uid': 108, 'gid': 114, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'tcpdump', 'passwd': 'x', 'gid': 114}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:00,538 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sshd', 'uid': 109, 'gid': 65534, 'gecos': '', 'dir': '/run/sshd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:00,939 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'pollinate', 'uid': 110, 'gid': 1, 'gecos': '', 'dir': '/var/cache/pollinate', 'shell': '/bin/false', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:01,311 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'landscape', 'uid': 111, 'gid': 116, 'gecos': '', 'dir': '/var/lib/landscape', 'shell': '/usr/sbin/nologin', 'group': {'name': 'landscape', 'passwd': 'x', 'gid': 116}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:01,679 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'fwupd-refresh', 'uid': 112, 'gid': 117, 'gecos': 'fwupd-refresh user,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'fwupd-refresh', 'passwd': 'x', 'gid': 117}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:02,087 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:02,459 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:02,835 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:03,233 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dnsmasq', 'uid': 113, 'gid': 65534, 'gecos': 'dnsmasq,,,', 'dir': '/var/lib/misc', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:03,607 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxc-dnsmasq', 'uid': 114, 'gid': 121, 'gecos': 'LXC dnsmasq', 'dir': '/var/lib/lxc', 'shell': '/bin/false', 'group': {'name': 'lxc-dnsmasq', 'passwd': 'x', 'gid': 121}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:03,991 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': '_chrony', 'uid': 115, 'gid': 122, 'gecos': 'Chrony daemon,,,', 'dir': '/var/lib/chrony', 'shell': '/usr/sbin/nologin', 'group': {'name': '_chrony', 'passwd': 'x', 'gid': 122}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:04,356 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'postfix', 'uid': 116, 'gid': 124, 'gecos': '', 'dir': '/var/spool/postfix', 'shell': '/usr/sbin/nologin', 'group': {'name': 'postfix', 'passwd': 'x', 'gid': 124}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 01:33:04,493 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for users with an assigned home directory that does not exist] ***
2025-03-30 01:33:04,579 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "These users have a home directory assigned, but the directory does not exist:\nlp (/var/spool/lpd does not exist)\nnews (/var/spool/news does not exist)\nuucp (/var/spool/uucp does not exist)\nwww-data (/var/www does not exist)\nlist (/var/list does not exist)\nirc (/run/ircd does not exist)\ngnats (/var/lib/gnats does not exist)\nnobody (/nonexistent does not exist)\nmessagebus (/nonexistent does not exist)\nsyslog (/home/syslog does not exist)\n_apt (/nonexistent does not exist)\ntcpdump (/nonexistent does not exist)\n"
}
2025-03-30 01:33:04,604 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Use pwquality when passwords are changed or created] ***
2025-03-30 01:33:04,653 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:04,692 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Verify that AIDE configuration directory exists] *****
2025-03-30 01:33:05,108 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide/aide.conf.d)
2025-03-30 01:33:05,441 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide.conf)
2025-03-30 01:33:05,469 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Exclude certain directories from AIDE] ***************
2025-03-30 01:33:06,323 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:06,342 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (Ubuntu)] ***
2025-03-30 01:33:06,729 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:06,748 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (SUSE)] ***
2025-03-30 01:33:06,785 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:06,806 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if AIDE database is already in place] ***
2025-03-30 01:33:07,202 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:07,225 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Initialize AIDE (this will take a few minutes)] ******
2025-03-30 01:33:07,267 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:07,284 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Move AIDE database into place] ***********************
2025-03-30 01:33:07,326 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:07,345 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Create AIDE cron job] ********************************
2025-03-30 01:33:07,382 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:07,404 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Verify that auditd.conf exists] **********************
2025-03-30 01:33:07,798 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:07,818 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Verify that audisp-remote.conf exists] ***************
2025-03-30 01:33:08,199 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:08,220 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72083 - The operating system must off-load audit records onto a different system or media from the system being audited] ***
2025-03-30 01:33:08,270 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:08,292 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72085 - The operating system must encrypt the transfer of audit records off-loaded onto a different system or media from the system being audited] ***
2025-03-30 01:33:08,333 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:08,353 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Get valid system architectures for audit rules] ******
2025-03-30 01:33:08,403 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:08,421 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove system default audit.rules file] **************
2025-03-30 01:33:08,818 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:08,841 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove old RHEL 6 audit rules file] ******************
2025-03-30 01:33:09,243 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:09,264 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Deploy rules for auditd based on STIG requirements] ***
2025-03-30 01:33:10,334 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:10,354 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Adjust auditd/audispd configurations] ****************
2025-03-30 01:33:10,429 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'disk_full_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-30 01:33:10,441 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'network_failure_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-30 01:33:10,450 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left', 'value': '9907', 'config': '/etc/audit/auditd.conf'}) 
2025-03-30 01:33:10,463 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left_action', 'value': 'email', 'config': '/etc/audit/auditd.conf'}) 
2025-03-30 01:33:10,472 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'action_mail_acct', 'value': 'root', 'config': '/etc/audit/auditd.conf'}) 
2025-03-30 01:33:10,477 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:10,503 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure auditd is running and enabled at boot time] ***
2025-03-30 01:33:11,220 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:11,244 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set pam_faildelay configuration on Ubuntu] ***********
2025-03-30 01:33:11,648 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:11,666 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Debian/Ubuntu)] ***
2025-03-30 01:33:12,062 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:12,084 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Red Hat)] ***
2025-03-30 01:33:12,134 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-auth']) 
2025-03-30 01:33:12,148 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-password']) 
2025-03-30 01:33:12,167 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-auth']) 
2025-03-30 01:33:12,183 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-password']) 
2025-03-30 01:33:12,185 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:12,212 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (SUSE)] ***
2025-03-30 01:33:12,264 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-auth) 
2025-03-30 01:33:12,272 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-password) 
2025-03-30 01:33:12,274 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:12,296 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Lock accounts after three failed login attempts a 15 minute period] ***
2025-03-30 01:33:12,330 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:12,349 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for 'nopasswd' in sudoers files] ***************
2025-03-30 01:33:12,731 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:12,752 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71947 - Users must provide a password for privilege escalation.] ***
2025-03-30 01:33:12,811 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The 'NOPASSWD' directive was found in the sudoers configuration files. Remove the directive to ensure that all users must provide a password to run commands as the root user.\n"
}
2025-03-30 01:33:12,832 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for '!authenticate' in sudoers files] **********
2025-03-30 01:33:13,250 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:13,276 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71949 - Users must re-authenticate for privilege escalation.] ***
2025-03-30 01:33:13,340 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:13,382 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if sssd.conf exists] ***************************
2025-03-30 01:33:13,787 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:13,808 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if GRUB2 custom file exists] *******************
2025-03-30 01:33:14,196 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:14,216 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Define password options for grub] ********************
2025-03-30 01:33:14,254 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:14,362 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set CLASS for grub file] *****************************
2025-03-30 01:33:14,395 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:14,413 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72217 - The operating system must limit the number of concurrent sessions to 10 for all accounts and/or account types.] ***
2025-03-30 01:33:14,454 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:14,472 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for pam_lastlog in PAM configuration] **********
2025-03-30 01:33:14,854 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:14,877 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72275 - Display date/time of last logon after logon] ***
2025-03-30 01:33:14,905 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:14,925 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure .shosts find has finished] ********************
2025-03-30 01:33:14,966 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:14,985 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove .shosts or shosts.equiv files] ****************
2025-03-30 01:33:15,029 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,053 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Get packages with incorrect file permissions or ownership] ***
2025-03-30 01:33:15,091 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,110 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Reset file permissions/ownership to vendor values] ***
2025-03-30 01:33:15,143 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,160 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid owner] ***
2025-03-30 01:33:15,188 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,208 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72007 - All files and directories must have a valid owner.] ***
2025-03-30 01:33:15,259 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,286 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid group owner] ***
2025-03-30 01:33:15,319 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,341 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72009 - All files and directories must have a valid group owner.] ***
2025-03-30 01:33:15,383 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,403 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set proper owner, group owner, and permissions on home directories] ***
2025-03-30 01:33:15,467 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:33:15,483 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:33:15,495 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 01:33:15,497 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,518 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Find all world-writable directories] *****************
2025-03-30 01:33:15,547 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,567 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72047 - All world-writable directories must be group-owned by root, sys, bin, or an application group.] ***
2025-03-30 01:33:15,613 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:15,633 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/cron.allow exists] *********************
2025-03-30 01:33:16,005 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:16,030 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set owner/group owner on /etc/cron.allow] ************
2025-03-30 01:33:16,072 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:16,091 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if gdm is installed and configured] ************
2025-03-30 01:33:16,478 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:16,499 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71953 - The operating system must not allow an unattended or automatic logon to the system via a graphical user interface] ***
2025-03-30 01:33:16,530 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:16,553 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71955 - The operating system must not allow guest logon to the system.] ***
2025-03-30 01:33:16,589 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:16,613 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for dconf profiles] ****************************
2025-03-30 01:33:16,995 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:17,015 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Create a user profile in dconf] **********************
2025-03-30 01:33:17,048 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:17,067 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Create dconf directories] ****************************
2025-03-30 01:33:17,104 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/) 
2025-03-30 01:33:17,109 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/locks) 
2025-03-30 01:33:17,116 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/) 
2025-03-30 01:33:17,118 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:17,140 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Configure graphical session locking] *****************
2025-03-30 01:33:17,168 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:17,187 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users from changing graphical session locking configurations] ***
2025-03-30 01:33:17,217 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:17,236 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM profile for displaying a login banner] ***
2025-03-30 01:33:17,264 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:17,285 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM keyfile for machine-wide settings] ******
2025-03-30 01:33:17,327 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/01-banner-message) 
2025-03-30 01:33:17,331 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/01-banner-message) 
2025-03-30 01:33:17,332 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:17,353 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71983 - USB mass storage must be disabled.] ********
2025-03-30 01:33:17,722 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:17,743 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set sysctl configurations] ***************************
2025-03-30 01:33:18,167 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-30 01:33:18,561 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_source_route', 'value': 0, 'enabled': True})
2025-03-30 01:33:18,933 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.icmp_echo_ignore_broadcasts', 'value': 1, 'enabled': True})
2025-03-30 01:33:19,295 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.send_redirects', 'value': 0, 'enabled': True})
2025-03-30 01:33:19,665 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.send_redirects', 'value': 0, 'enabled': True})
2025-03-30 01:33:19,670 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv4.ip_forward', 'value': 0, 'enabled': False}) 
2025-03-30 01:33:20,049 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv6.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-30 01:33:20,410 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_redirects', 'value': 0, 'enabled': True})
2025-03-30 01:33:20,785 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'kernel.randomize_va_space', 'value': 2, 'enabled': True})
2025-03-30 01:33:20,790 p=43507 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv6.conf.all.disable_ipv6', 'value': 1, 'enabled': False}) 
2025-03-30 01:33:20,817 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check kdump service] *********************************
2025-03-30 01:33:21,266 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:21,285 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72057 - Kernel core dumps must be disabled unless needed.] ***
2025-03-30 01:33:21,314 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:21,335 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if FIPS is enabled] ****************************
2025-03-30 01:33:21,368 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:21,386 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Print a warning if FIPS isn't enabled] ***************
2025-03-30 01:33:21,420 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:21,444 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled] ***
2025-03-30 01:33:22,266 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:22,285 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check apparmor_status output] ************************
2025-03-30 01:33:22,698 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:22,718 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if apparmor is running] ************************
2025-03-30 01:33:23,146 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:23,253 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is enabled at boot time] *************
2025-03-30 01:33:23,980 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:24,000 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is running] **************************
2025-03-30 01:33:24,707 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:24,728 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure SELinux is in enforcing mode on the next reboot] ***
2025-03-30 01:33:24,763 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:24,784 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Relabel files on next boot if SELinux mode changed] ***
2025-03-30 01:33:24,820 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:24,841 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for unlabeled device files] ********************
2025-03-30 01:33:24,878 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:24,897 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72039 - All system device files must be correctly labeled to prevent unauthorized modification.] ***
2025-03-30 01:33:24,930 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:24,953 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check autofs service] ********************************
2025-03-30 01:33:25,348 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:25,368 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71985 - File system automounter must be disabled unless required.] ***
2025-03-30 01:33:25,399 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:25,418 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***
2025-03-30 01:33:26,151 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:26,174 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***
2025-03-30 01:33:27,247 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:27,266 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for /home on mounted filesystem] ***************
2025-03-30 01:33:27,338 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /home is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 01:33:27,359 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var on mounted filesystem] ****************
2025-03-30 01:33:27,427 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 01:33:27,450 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var/log/audit on mounted filesystem] ******
2025-03-30 01:33:27,520 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var/log/audit is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 01:33:27,542 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for /tmp on mounted filesystem] ****************
2025-03-30 01:33:27,607 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /tmp is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 01:33:27,633 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if syslog output is being sent to another server] ***
2025-03-30 01:33:28,012 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:28,040 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72209 - The system must send rsyslog output to a log aggregation server.] ***
2025-03-30 01:33:28,108 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Output from syslog must be sent to another server."
}
2025-03-30 01:33:28,130 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV is installed] ************************
2025-03-30 01:33:28,501 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:28,520 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove 'Example' line from ClamAV configuration files] ***
2025-03-30 01:33:28,553 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/freshclam.conf) 
2025-03-30 01:33:28,557 p=43507 u=vagrant n=ansible | skipping: [controller] => (item=/etc/clamd.d/scan.conf) 
2025-03-30 01:33:28,558 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:28,585 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Set ClamAV server type as socket] ********************
2025-03-30 01:33:28,619 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:28,643 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV socket directory exists] ***************
2025-03-30 01:33:28,680 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:28,703 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Allow automatic freshclam updates] *******************
2025-03-30 01:33:28,737 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:28,758 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV update process is already running] ***
2025-03-30 01:33:29,135 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:29,155 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Update ClamAV database] ******************************
2025-03-30 01:33:29,186 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:29,205 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV is running] ****************************
2025-03-30 01:33:29,234 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:29,252 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove old config block for V-72223 from openstack-ansible-security] ***
2025-03-30 01:33:29,629 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:29,651 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72223 - Set 10 minute timeout on communication sessions] ***
2025-03-30 01:33:30,047 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:30,063 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Start and enable chrony] *****************************
2025-03-30 01:33:30,756 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:30,782 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check if chrony configuration file exists] ***********
2025-03-30 01:33:31,200 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:31,225 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72269 - Synchronize system clock (configuration file)] ***
2025-03-30 01:33:32,131 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:32,149 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check firewalld status] ******************************
2025-03-30 01:33:32,537 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:32,556 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure firewalld is running and enabled] *************
2025-03-30 01:33:32,586 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:32,608 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Limit new TCP connections to 25/minute and allow bursting to 100] ***
2025-03-30 01:33:32,641 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:32,660 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Count nameserver entries in /etc/resolv.conf] ********
2025-03-30 01:33:33,054 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:33,075 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72281 - For systems using DNS resolution, at least two name servers must be configured.] ***
2025-03-30 01:33:33,146 p=43507 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Two or more nameservers must be configured in /etc/resolv.conf.\nNameservers found: 1\n"
}
2025-03-30 01:33:33,165 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for interfaces in promiscuous mode] ************
2025-03-30 01:33:33,558 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:33,663 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72295 - Network interfaces must not be in promiscuous mode.] ***
2025-03-30 01:33:33,695 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:33,717 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for postfix configuration file] ****************
2025-03-30 01:33:34,127 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:34,146 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72297 - Prevent unrestricted mail relaying] ********
2025-03-30 01:33:34,531 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:34,558 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check for TFTP server configuration file] ************
2025-03-30 01:33:34,938 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:34,958 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check TFTP configuration mode] ***********************
2025-03-30 01:33:34,988 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:35,008 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72305 - TFTP must be configured to operate in secure mode] ***
2025-03-30 01:33:35,040 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:35,063 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if snmpd config contains public/private] ***
2025-03-30 01:33:35,436 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:35,456 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : V-72313 - Change SNMP community strings from default.] ***
2025-03-30 01:33:35,487 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:35,505 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Copy login warning banner] ***************************
2025-03-30 01:33:36,322 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:36,343 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Drop options from SSH config that we manage] *********
2025-03-30 01:33:36,764 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitEmptyPasswords', 'value': 'no', 'enabled': True, 'stig_id': 'V-71939 / RHEL-07-010440'})
2025-03-30 01:33:37,138 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitUserEnvironment', 'value': 'no', 'enabled': True, 'stig_id': 'V-71957'})
2025-03-30 01:33:37,492 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'HostbasedAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-71959'})
2025-03-30 01:33:37,841 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Ciphers', 'value': 'aes128-ctr,aes192-ctr,aes256-ctr', 'enabled': True, 'stig_id': 'V-72221'})
2025-03-30 01:33:38,202 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveInterval', 'value': 600, 'enabled': True, 'stig_id': 'V-72237'})
2025-03-30 01:33:38,558 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveCountMax', 'value': 0, 'enabled': True, 'stig_id': 'V-72241'})
2025-03-30 01:33:38,911 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintLastLog', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72245'})
2025-03-30 01:33:39,277 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitRootLogin', 'value': 'without-password', 'enabled': True, 'stig_id': 'V-72247'})
2025-03-30 01:33:39,635 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreUserKnownHosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72249 / V-72239'})
2025-03-30 01:33:39,991 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreRhosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72243'})
2025-03-30 01:33:40,338 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'X11Forwarding', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72303'})
2025-03-30 01:33:40,687 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Protocol', 'value': 2, 'enabled': True, 'stig_id': 'V-72251'})
2025-03-30 01:33:41,084 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'MACs', 'value': 'hmac-sha2-256,hmac-sha2-512', 'enabled': True, 'stig_id': 'V-72253'})
2025-03-30 01:33:41,436 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Compression', 'value': 'delayed', 'enabled': True, 'stig_id': 'V-72267'})
2025-03-30 01:33:41,790 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'KerberosAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-72261'})
2025-03-30 01:33:42,149 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'GSSAPIAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-204598'})
2025-03-30 01:33:42,502 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'StrictModes', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72263'})
2025-03-30 01:33:42,858 p=43507 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintMotd', 'value': 'yes', 'enabled': True, 'stig_id': 'V-71861'})
2025-03-30 01:33:42,893 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Adjust ssh server configuration based on STIG requirements] ***
2025-03-30 01:33:43,323 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:43,343 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Ensure sshd is enabled at boot time] *****************
2025-03-30 01:33:44,100 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:44,120 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing public ssh host keys] *************
2025-03-30 01:33:44,498 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:44,518 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Public host key files must have mode 0644 or less] ***
2025-03-30 01:33:44,918 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key.pub)
2025-03-30 01:33:45,295 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key.pub)
2025-03-30 01:33:45,653 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key.pub)
2025-03-30 01:33:45,673 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing private ssh host keys] ************
2025-03-30 01:33:46,063 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:46,089 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Private host key files must have mode 0600 or less] ***
2025-03-30 01:33:46,488 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key)
2025-03-30 01:33:46,861 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key)
2025-03-30 01:33:47,233 p=43507 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key)
2025-03-30 01:33:47,258 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Manage motd in pam.d] ********************************
2025-03-30 01:33:47,898 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:47,918 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Remove the temporary directory] **********************
2025-03-30 01:33:48,327 p=43507 u=vagrant n=ansible | ok: [controller]
2025-03-30 01:33:48,350 p=43507 u=vagrant n=ansible | TASK [ansible-hardening : Including contrib tasks] *****************************
2025-03-30 01:33:48,379 p=43507 u=vagrant n=ansible | skipping: [controller]
2025-03-30 01:33:48,468 p=43507 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 01:33:48,513 p=43507 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 01:33:48,514 p=43507 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 01:33:48,514 p=43507 u=vagrant n=ansible | controller                 : ok=173  changed=2    unreachable=0    failed=0    skipped=120  rescued=0    ignored=0   
2025-03-30 01:33:48,514 p=43507 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=96   changed=6    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 01:33:48,514 p=43507 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 01:33:48,514 p=43507 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 01:33:48,514 p=43507 u=vagrant n=ansible | controller-repo-container-79f4553f : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 01:33:48,515 p=43507 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 01:33:48,515 p=43507 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-30 01:46:41,395 p=47751 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 01:46:42,069 p=47751 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 01:46:51,188 p=47751 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 01:46:51,253 p=47751 u=vagrant n=ansible | PLAY [Implement openrc/clouds.yaml on the designated service host] *************
2025-03-30 01:46:51,263 p=47751 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:46:51,300 p=47751 u=vagrant n=ansible | included: openstack.osa.install_defaults for localhost
2025-03-30 01:46:51,324 p=47751 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] ***********************************
2025-03-30 01:46:52,565 p=47751 u=vagrant n=ansible | ok: [localhost] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/home/vagrant/openrc'})
2025-03-30 01:46:52,573 p=47751 u=vagrant n=ansible | skipping: [localhost] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/home/vagrant/openrc.system_scope', 'condition': False}) 
2025-03-30 01:46:52,585 p=47751 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] ******
2025-03-30 01:46:52,933 p=47751 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:46:52,941 p=47751 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] ******************************
2025-03-30 01:46:53,673 p=47751 u=vagrant n=ansible | ok: [localhost]
2025-03-30 01:46:53,706 p=47751 u=vagrant n=ansible | PLAY [Gather keystone facts] ***************************************************
2025-03-30 01:46:53,707 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,708 p=47751 u=vagrant n=ansible | PLAY [Pre-service deployment] **************************************************
2025-03-30 01:46:53,708 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,714 p=47751 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:46:53,714 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,723 p=47751 u=vagrant n=ansible | PLAY [Installation and setup of Keystone] **************************************
2025-03-30 01:46:53,723 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,729 p=47751 u=vagrant n=ansible | PLAY [Finalise data migrations if required] ************************************
2025-03-30 01:46:53,729 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,730 p=47751 u=vagrant n=ansible | PLAY [SP/IDP setup] ************************************************************
2025-03-30 01:46:53,731 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,736 p=47751 u=vagrant n=ansible | PLAY [Gather barbican facts] ***************************************************
2025-03-30 01:46:53,736 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,741 p=47751 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:46:53,742 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,747 p=47751 u=vagrant n=ansible | PLAY [Installation and setup of barbican] **************************************
2025-03-30 01:46:53,747 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,753 p=47751 u=vagrant n=ansible | PLAY [Gather placement facts] **************************************************
2025-03-30 01:46:53,753 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,758 p=47751 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:46:53,758 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,764 p=47751 u=vagrant n=ansible | PLAY [Install placement components] ********************************************
2025-03-30 01:46:53,764 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,769 p=47751 u=vagrant n=ansible | PLAY [Gather glance facts] *****************************************************
2025-03-30 01:46:53,769 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,774 p=47751 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:46:53,774 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,784 p=47751 u=vagrant n=ansible | PLAY [Install glance services] *************************************************
2025-03-30 01:46:53,785 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,786 p=47751 u=vagrant n=ansible | PLAY [Gather cinder facts] *****************************************************
2025-03-30 01:46:53,787 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,796 p=47751 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:46:53,796 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,805 p=47751 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:46:53,805 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,813 p=47751 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:46:53,814 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,818 p=47751 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:46:53,819 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,829 p=47751 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 01:46:53,829 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:53,832 p=47751 u=vagrant n=ansible | PLAY [Gather nova facts] *******************************************************
2025-03-30 01:46:53,861 p=47751 u=vagrant n=ansible | TASK [Gather minimal facts for nova] *******************************************
2025-03-30 01:46:56,253 p=47751 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:46:56,259 p=47751 u=vagrant n=ansible | TASK [Gather additional facts for nova] ****************************************
2025-03-30 01:46:57,329 p=47751 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:46:57,360 p=47751 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 01:46:57,360 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:57,368 p=47751 u=vagrant n=ansible | PLAY [Install nova control-plane services] *************************************
2025-03-30 01:46:57,369 p=47751 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 01:46:57,379 p=47751 u=vagrant n=ansible | PLAY [Install nova compute services] *******************************************
2025-03-30 01:46:57,464 p=47751 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 01:46:57,503 p=47751 u=vagrant n=ansible | included: openstack.osa.install_defaults for compute
2025-03-30 01:46:57,520 p=47751 u=vagrant n=ansible | TASK [Set cinder RBD inuse fact] ***********************************************
2025-03-30 01:46:57,592 p=47751 u=vagrant n=ansible | ok: [compute -> localhost]
2025-03-30 01:46:57,601 p=47751 u=vagrant n=ansible | TASK [Configure container] *****************************************************
2025-03-30 01:46:57,627 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:57,635 p=47751 u=vagrant n=ansible | TASK [Including unbound-clients tasks] *****************************************
2025-03-30 01:46:57,682 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:57,692 p=47751 u=vagrant n=ansible | TASK [Add nbd devices to the compute] ******************************************
2025-03-30 01:46:57,735 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:57,745 p=47751 u=vagrant n=ansible | TASK [Add net/tun device to the compute] ***************************************
2025-03-30 01:46:57,786 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:57,795 p=47751 u=vagrant n=ansible | TASK [Check if kvm device exists] **********************************************
2025-03-30 01:46:57,837 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:57,845 p=47751 u=vagrant n=ansible | TASK [Add kvm device to the compute] *******************************************
2025-03-30 01:46:57,887 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:57,905 p=47751 u=vagrant n=ansible | TASK [os_nova : Gather variables for each operating system] ********************
2025-03-30 01:46:57,977 p=47751 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:46:57,987 p=47751 u=vagrant n=ansible | TASK [os_nova : Fail when virt type is unsupported] ****************************
2025-03-30 01:46:58,027 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:58,036 p=47751 u=vagrant n=ansible | TASK [os_nova : Fail if service was deployed using a different installation method] ***
2025-03-30 01:46:58,076 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:58,085 p=47751 u=vagrant n=ansible | TASK [os_nova : Gather variables for installation method] **********************
2025-03-30 01:46:58,148 p=47751 u=vagrant n=ansible | ok: [compute]
2025-03-30 01:46:58,158 p=47751 u=vagrant n=ansible | TASK [Including osa.db_setup role] *********************************************
2025-03-30 01:46:58,335 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:58,345 p=47751 u=vagrant n=ansible | TASK [Including osa.mq_setup role] *********************************************
2025-03-30 01:46:58,542 p=47751 u=vagrant n=ansible | skipping: [compute]
2025-03-30 01:46:58,552 p=47751 u=vagrant n=ansible | TASK [os_nova : Including nova_virt_detect tasks] ******************************
2025-03-30 01:46:58,610 p=47751 u=vagrant n=ansible | included: /etc/ansible/roles/os_nova/tasks/nova_virt_detect.yml for compute
2025-03-30 01:46:58,665 p=47751 u=vagrant n=ansible | TASK [os_nova : Get CPU info content and store as var] *************************
2025-03-30 01:47:25,864 p=47751 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Data could not be sent to remote host \"192.168.56.11\". Make sure this host can be reached over ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).\r\n", "unreachable": true}
2025-03-30 01:47:25,867 p=47751 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 01:47:25,868 p=47751 u=vagrant n=ansible | compute                    : ok=7    changed=0    unreachable=1    failed=0    skipped=10   rescued=0    ignored=0   
2025-03-30 01:47:25,868 p=47751 u=vagrant n=ansible | localhost                  : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 12:36:00,416 p=57568 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 12:36:01,215 p=57568 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 12:36:02,925 p=57568 u=vagrant n=ansible | compute | SUCCESS => {
    "changed": false,
    "ping": "pong"
}
2025-03-30 12:36:20,081 p=57668 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 12:36:20,840 p=57668 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 12:36:21,377 p=57668 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 12:36:21,378 p=57668 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 12:36:21,385 p=57668 u=vagrant n=ansible | PLAY [Create CA certificates] **************************************************
2025-03-30 12:36:21,385 p=57668 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 12:36:21,392 p=57668 u=vagrant n=ansible | PLAY [Create SSHD CA] **********************************************************
2025-03-30 12:36:21,392 p=57668 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 12:36:21,399 p=57668 u=vagrant n=ansible | PLAY [Generate any extra user certificates] ************************************
2025-03-30 12:36:21,400 p=57668 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 12:36:21,407 p=57668 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *******************************************
2025-03-30 12:36:21,444 p=57668 u=vagrant n=ansible | TASK [Ensure python is installed] **********************************************
2025-03-30 12:36:48,241 p=57668 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).", "unreachable": true}
2025-03-30 12:36:48,243 p=57668 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 12:36:48,244 p=57668 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 17:53:07,697 p=58125 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 17:53:08,475 p=58125 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 17:53:09,076 p=58125 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 17:53:09,077 p=58125 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 17:53:09,086 p=58125 u=vagrant n=ansible | PLAY [Create CA certificates] **************************************************
2025-03-30 17:53:09,087 p=58125 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 17:53:09,096 p=58125 u=vagrant n=ansible | PLAY [Create SSHD CA] **********************************************************
2025-03-30 17:53:09,096 p=58125 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 17:53:09,109 p=58125 u=vagrant n=ansible | PLAY [Generate any extra user certificates] ************************************
2025-03-30 17:53:09,109 p=58125 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 17:53:09,120 p=58125 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *******************************************
2025-03-30 17:53:09,184 p=58125 u=vagrant n=ansible | TASK [Ensure python is installed] **********************************************
2025-03-30 17:53:36,119 p=58125 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).", "unreachable": true}
2025-03-30 17:53:36,121 p=58125 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 17:53:36,121 p=58125 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 18:09:20,171 p=58294 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 18:09:20,171 p=58294 u=vagrant n=ansible | ERROR! the playbook: playbooks/setup-hosts.yml could not be found
2025-03-30 18:09:42,153 p=58389 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 18:09:42,154 p=58389 u=vagrant n=ansible | ERROR! the playbook: playbooks/setup-infrastructure.yml could not be found
2025-03-30 18:09:42,873 p=58400 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 18:09:42,874 p=58400 u=vagrant n=ansible | ERROR! the playbook: playbooks/setup-openstack.yml could not be found
2025-03-30 18:12:59,795 p=58554 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 18:13:00,601 p=58554 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 18:13:01,181 p=58554 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 18:13:01,279 p=58554 u=vagrant n=ansible | PLAY [Create CA certificates] **************************************************
2025-03-30 18:13:01,303 p=58554 u=vagrant n=ansible | TASK [Create CA certificates] **************************************************
2025-03-30 18:13:01,354 p=58554 u=vagrant n=ansible | included: pki for localhost
2025-03-30 18:13:01,367 p=58554 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 18:13:01,401 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:01,410 p=58554 u=vagrant n=ansible | TASK [pki : Create PKI directories] ********************************************
2025-03-30 18:13:02,192 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-30 18:13:02,599 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots'})
2025-03-30 18:13:02,995 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki'})
2025-03-30 18:13:03,419 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs', 'mode': '0755'})
2025-03-30 18:13:03,811 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/csr', 'mode': '0700'})
2025-03-30 18:13:04,182 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/private', 'mode': '0700'})
2025-03-30 18:13:04,580 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/certs/certs', 'mode': '0755'})
2025-03-30 18:13:04,598 p=58554 u=vagrant n=ansible | TASK [pki : Create certificate authorities] ************************************
2025-03-30 18:13:04,743 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpRoot', 'provider': 'selfsigned', 'basic_constraints': 'CA:TRUE', 'cn': 'Example Corp Root CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d'})
2025-03-30 18:13:04,783 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_ca.yml for localhost => (item={'name': 'ExampleCorpIntermediate', 'provider': 'ownca', 'basic_constraints': 'CA:TRUE,pathlen:0', 'cn': 'Example Corp Openstack Infrastructure Intermediate CA', 'email_address': 'pki@example.com', 'country_name': 'GB', 'state_or_province_name': 'England', 'organization_name': 'Example Corporation', 'organizational_unit_name': 'IT Security', 'key_usage': ['digitalSignature', 'cRLSign', 'keyCertSign'], 'not_after': '+3650d', 'signed_by': 'ExampleCorpRoot'})
2025-03-30 18:13:04,795 p=58554 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpRoot] ******
2025-03-30 18:13:05,261 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot'})
2025-03-30 18:13:05,680 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/csr', 'mode': '0700'})
2025-03-30 18:13:06,122 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/private', 'mode': '0700'})
2025-03-30 18:13:06,548 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpRoot/certs', 'mode': '0755'})
2025-03-30 18:13:06,562 p=58554 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-30 18:13:06,997 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:07,010 p=58554 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpRoot] ******************
2025-03-30 18:13:07,731 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:07,741 p=58554 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpRoot] ***********************
2025-03-30 18:13:13,746 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:13,757 p=58554 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpRoot] ************************
2025-03-30 18:13:14,408 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:14,418 p=58554 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpRoot] *****************************
2025-03-30 18:13:14,468 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,485 p=58554 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpRoot] ***************
2025-03-30 18:13:14,529 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,539 p=58554 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpRoot] ***************
2025-03-30 18:13:14,585 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,598 p=58554 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpRoot] ******************
2025-03-30 18:13:14,635 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,646 p=58554 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-30 18:13:14,686 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,696 p=58554 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpRoot] **************************
2025-03-30 18:13:14,740 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,752 p=58554 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpRoot] *************************
2025-03-30 18:13:14,795 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,804 p=58554 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-30 18:13:14,836 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,846 p=58554 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-30 18:13:14,890 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:14,900 p=58554 u=vagrant n=ansible | TASK [pki : Create directories for certificate authority ExampleCorpIntermediate] ***
2025-03-30 18:13:15,377 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate'})
2025-03-30 18:13:15,797 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/csr', 'mode': '0700'})
2025-03-30 18:13:16,209 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/private', 'mode': '0700'})
2025-03-30 18:13:16,615 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs', 'mode': '0755'})
2025-03-30 18:13:16,628 p=58554 u=vagrant n=ansible | TASK [pki : Ensure private key has proper ownership] ***************************
2025-03-30 18:13:17,081 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:17,095 p=58554 u=vagrant n=ansible | TASK [pki : Initialise the serial number for ExampleCorpIntermediate] **********
2025-03-30 18:13:17,584 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:17,597 p=58554 u=vagrant n=ansible | TASK [pki : Generate CA private key for ExampleCorpIntermediate] ***************
2025-03-30 18:13:23,206 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:23,218 p=58554 u=vagrant n=ansible | TASK [pki : Read the serial number for ExampleCorpIntermediate] ****************
2025-03-30 18:13:23,637 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:23,650 p=58554 u=vagrant n=ansible | TASK [pki : Create the CA CSR for ExampleCorpIntermediate] *********************
2025-03-30 18:13:23,705 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:23,720 p=58554 u=vagrant n=ansible | TASK [pki : Write out the new serial number for ExampleCorpIntermediate] *******
2025-03-30 18:13:23,768 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:23,781 p=58554 u=vagrant n=ansible | TASK [pki : Sign the selfsigned Root CA CSR for ExampleCorpIntermediate] *******
2025-03-30 18:13:23,817 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:23,833 p=58554 u=vagrant n=ansible | TASK [pki : Sign the intermediate CA CSR for ExampleCorpIntermediate] **********
2025-03-30 18:13:23,883 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:23,895 p=58554 u=vagrant n=ansible | TASK [pki : Symlink the certificate name to the most recently generated] *******
2025-03-30 18:13:23,939 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:23,952 p=58554 u=vagrant n=ansible | TASK [pki : Get certificate info for ExampleCorpIntermediate] ******************
2025-03-30 18:13:24,000 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:24,015 p=58554 u=vagrant n=ansible | TASK [pki : Save certificate info for ExampleCorpIntermediate] *****************
2025-03-30 18:13:24,073 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:24,086 p=58554 u=vagrant n=ansible | TASK [pki : Check if intermediate certificate chain exists] ********************
2025-03-30 18:13:24,604 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:24,618 p=58554 u=vagrant n=ansible | TASK [pki : Create intermediate certificate chain] *****************************
2025-03-30 18:13:24,710 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:24,797 p=58554 u=vagrant n=ansible | PLAY [Create SSHD CA] **********************************************************
2025-03-30 18:13:24,828 p=58554 u=vagrant n=ansible | TASK [Create SSHD certificate authority] ***************************************
2025-03-30 18:13:24,893 p=58554 u=vagrant n=ansible | included: openstack.osa.ssh_keypairs for localhost
2025-03-30 18:13:24,904 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Include keypair variables for standalone] ***
2025-03-30 18:13:24,942 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:24,952 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypair directories] *****************
2025-03-30 18:13:25,398 p=58554 u=vagrant n=ansible | ok: [localhost] => (item={'path': '/etc/openstack_deploy/ssh_keypairs'})
2025-03-30 18:13:25,410 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Create keypairs] ****************************
2025-03-30 18:13:25,463 p=58554 u=vagrant n=ansible | included: /etc/ansible/ansible_collections/openstack/osa/roles/ssh_keypairs/tasks/standalone/create_keypair.yml for localhost => (item={'name': 'OpenStack-Ansible-SSH-Signing-Key'})
2025-03-30 18:13:25,476 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate key pair for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 18:13:31,446 p=58554 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:13:31,457 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Generate an OpenSSH user certificate for OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 18:13:31,513 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,526 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Save certificate info for signed key OpenStack-Ansible-SSH-Signing-Key] ***
2025-03-30 18:13:31,572 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,582 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh server certificate authorities] ***
2025-03-30 18:13:31,605 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,613 p=58554 u=vagrant n=ansible | TASK [openstack.osa.ssh_keypairs : Install ssh keys] ***************************
2025-03-30 18:13:31,638 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,688 p=58554 u=vagrant n=ansible | PLAY [Generate any extra user certificates] ************************************
2025-03-30 18:13:31,714 p=58554 u=vagrant n=ansible | TASK [Create user certificates] ************************************************
2025-03-30 18:13:31,783 p=58554 u=vagrant n=ansible | included: pki for localhost
2025-03-30 18:13:31,794 p=58554 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-30 18:13:31,835 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,854 p=58554 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-30 18:13:31,894 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,908 p=58554 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-30 18:13:31,938 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:31,948 p=58554 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-30 18:13:31,972 p=58554 u=vagrant n=ansible | skipping: [localhost]
2025-03-30 18:13:32,020 p=58554 u=vagrant n=ansible | PLAY [Install Ansible prerequisites] *******************************************
2025-03-30 18:13:32,048 p=58554 u=vagrant n=ansible | TASK [Ensure python is installed] **********************************************
2025-03-30 18:13:32,659 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:13:58,976 p=58554 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).", "unreachable": true}
2025-03-30 18:13:59,139 p=58554 u=vagrant n=ansible | PLAY [Gather host facts] *******************************************************
2025-03-30 18:13:59,257 p=58554 u=vagrant n=ansible | PLAY [Basic host setup] ********************************************************
2025-03-30 18:13:59,286 p=58554 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:13:59,331 p=58554 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-30 18:13:59,360 p=58554 u=vagrant n=ansible | TASK [Check for a supported Operating System] **********************************
2025-03-30 18:13:59,424 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:13:59,560 p=58554 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:14:00,528 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:00,555 p=58554 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:14:00,591 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:00,644 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] ************
2025-03-30 18:14:00,747 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:00,774 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] ************************
2025-03-30 18:14:01,216 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:01,237 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] ***************************
2025-03-30 18:14:02,210 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:02,232 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ******************
2025-03-30 18:14:02,259 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:02,280 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ***
2025-03-30 18:14:03,286 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:03,304 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] ************
2025-03-30 18:14:03,341 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:03,363 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] ***********************
2025-03-30 18:14:03,824 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:03,961 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] *********************
2025-03-30 18:14:04,863 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:04,887 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *****************************
2025-03-30 18:14:04,976 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller
2025-03-30 18:14:05,001 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] ***************************
2025-03-30 18:14:05,191 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:05,214 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] *************************************
2025-03-30 18:14:05,670 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:05,688 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] **********************
2025-03-30 18:14:06,146 p=58554 u=vagrant n=ansible | ok: [controller -> localhost]
2025-03-30 18:14:06,164 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] ***********************
2025-03-30 18:14:07,758 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:07,781 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] ***
2025-03-30 18:14:07,868 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller
2025-03-30 18:14:07,893 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *****************
2025-03-30 18:14:08,283 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:08,305 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *****************
2025-03-30 18:14:08,427 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:14:08,445 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] ***
2025-03-30 18:14:08,849 p=58554 u=vagrant n=ansible | ok: [controller] => (item=uca.list)
2025-03-30 18:14:09,222 p=58554 u=vagrant n=ansible | ok: [controller] => (item=osbpo.list)
2025-03-30 18:14:09,247 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] ***
2025-03-30 18:14:20,611 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:20,639 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *******************************
2025-03-30 18:14:21,632 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:14:21,675 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] ************************************
2025-03-30 18:14:22,689 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:22,713 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] **************************************
2025-03-30 18:14:22,750 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:22,778 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *****************
2025-03-30 18:14:22,939 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/configure_metal_hosts.yml for controller
2025-03-30 18:14:22,976 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Check Kernel Version] **********************************
2025-03-30 18:14:23,028 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:23,057 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages for bare metal nodes] **********
2025-03-30 18:14:25,197 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:25,219 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages for bare metal nodes] ***
2025-03-30 18:14:25,255 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:25,278 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Check how kernel modules are implemented (statically builtin, dynamic, not set)] ***
2025-03-30 18:14:25,310 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:25,333 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Fail fast if we can't load a module] *******************
2025-03-30 18:14:25,363 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:25,385 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Load kernel module(s)] *********************************
2025-03-30 18:14:26,065 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': '8021q'})
2025-03-30 18:14:26,491 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'br_netfilter'})
2025-03-30 18:14:26,957 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_multipath'})
2025-03-30 18:14:27,433 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dm_snapshot'})
2025-03-30 18:14:27,879 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ebtables'})
2025-03-30 18:14:28,285 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6table_filter'})
2025-03-30 18:14:28,693 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip6_tables'})
2025-03-30 18:14:29,107 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_tables'})
2025-03-30 18:14:29,491 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'xt_MASQUERADE'})
2025-03-30 18:14:29,907 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ipt_REJECT'})
2025-03-30 18:14:30,413 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_filter'})
2025-03-30 18:14:30,824 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_mangle'})
2025-03-30 18:14:31,223 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iptable_nat'})
2025-03-30 18:14:31,677 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ip_vs'})
2025-03-30 18:14:32,130 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'iscsi_tcp'})
2025-03-30 18:14:32,565 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nbd'})
2025-03-30 18:14:32,963 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_conntrack'})
2025-03-30 18:14:33,462 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_defrag_ipv4'})
2025-03-30 18:14:33,971 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nf_nat'})
2025-03-30 18:14:34,404 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vhost_net'})
2025-03-30 18:14:34,855 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'x_tables'})
2025-03-30 18:14:34,895 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Write list of modules to load at boot] *****************
2025-03-30 18:14:35,904 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:35,929 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Adding new system tuning] ******************************
2025-03-30 18:14:36,729 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_watches', 'value': 1048576})
2025-03-30 18:14:37,153 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.all.rp_filter', 'value': 0})
2025-03-30 18:14:37,560 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.conf.default.rp_filter', 'value': 0})
2025-03-30 18:14:38,007 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.ip_forward', 'value': 1})
2025-03-30 18:14:38,416 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.netfilter.nf_conntrack_max', 'value': 262144})
2025-03-30 18:14:38,925 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_background_ratio', 'value': 5})
2025-03-30 18:14:39,328 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.dirty_ratio', 'value': 10})
2025-03-30 18:14:39,827 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'vm.swappiness', 'value': 5})
2025-03-30 18:14:40,345 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-ip6tables', 'value': 1})
2025-03-30 18:14:40,746 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-iptables', 'value': 1})
2025-03-30 18:14:41,139 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.bridge.bridge-nf-call-arptables', 'value': 1})
2025-03-30 18:14:41,568 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.igmp_max_memberships', 'value': 1024})
2025-03-30 18:14:41,997 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-30 18:14:42,439 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-30 18:14:42,842 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-30 18:14:43,244 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.route.gc_thresh', 'value': '16384'})
2025-03-30 18:14:43,646 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_interval', 'value': 60})
2025-03-30 18:14:44,055 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv4.neigh.default.gc_stale_time', 'value': 120})
2025-03-30 18:14:44,577 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh1', 'value': '4096'})
2025-03-30 18:14:44,975 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh2', 'value': '8192'})
2025-03-30 18:14:45,379 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_thresh3', 'value': '16384'})
2025-03-30 18:14:45,831 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.route.gc_thresh', 'value': '16384'})
2025-03-30 18:14:46,245 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_interval', 'value': 60})
2025-03-30 18:14:46,650 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.neigh.default.gc_stale_time', 'value': 120})
2025-03-30 18:14:47,080 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'net.ipv6.conf.lo.disable_ipv6', 'value': 0})
2025-03-30 18:14:47,561 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.aio-max-nr', 'value': 131072})
2025-03-30 18:14:47,593 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Configure sysstat] *************************************
2025-03-30 18:14:47,664 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_sysstat.yml for controller
2025-03-30 18:14:47,697 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat config] *********************************
2025-03-30 18:14:48,693 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:48,716 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Enable sysstat cron] ***********************************
2025-03-30 18:14:49,731 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:49,756 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Start and enable the sysstat service] ******************
2025-03-30 18:14:49,797 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:49,824 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Create a directory to hold systemd journals on disk] ***
2025-03-30 18:14:50,307 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:50,329 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Create tmpfiles structure in journald directory] *******
2025-03-30 18:14:50,368 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:50,398 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] ************************
2025-03-30 18:14:50,853 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:50,875 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *******************************
2025-03-30 18:14:52,809 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:52,831 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] ************
2025-03-30 18:14:52,866 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:52,889 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] **********************************
2025-03-30 18:14:53,346 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:53,368 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] ***************************************
2025-03-30 18:14:53,408 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:53,428 p=58554 u=vagrant n=ansible | TASK [Including PKI role] ******************************************************
2025-03-30 18:14:53,536 p=58554 u=vagrant n=ansible | included: pki for controller
2025-03-30 18:14:53,578 p=58554 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 18:14:53,642 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:53,667 p=58554 u=vagrant n=ansible | TASK [pki : Install certificate authorities] ***********************************
2025-03-30 18:14:53,829 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller
2025-03-30 18:14:53,860 p=58554 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] **********
2025-03-30 18:14:54,564 p=58554 u=vagrant n=ansible | ok: [controller -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-30 18:14:54,585 p=58554 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *******************************
2025-03-30 18:14:55,560 p=58554 u=vagrant n=ansible | ok: [controller] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 18:14:55,580 p=58554 u=vagrant n=ansible | TASK [pki : Update CA store] ***************************************************
2025-03-30 18:14:55,618 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:55,660 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *******************
2025-03-30 18:14:55,780 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller
2025-03-30 18:14:55,825 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] ***************************************
2025-03-30 18:14:56,468 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:56,499 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ****************
2025-03-30 18:14:57,211 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:57,232 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] ************************
2025-03-30 18:14:57,290 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:57,309 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] ************
2025-03-30 18:14:57,339 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:57,369 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] ***************
2025-03-30 18:14:57,399 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:57,478 p=58554 u=vagrant n=ansible | TASK [Ensure deploy host SSH connection is reset] ******************************
2025-03-30 18:14:57,598 p=58554 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-30 18:14:57,750 p=58554 u=vagrant n=ansible | PLAY [Basic lxc host setup] ****************************************************
2025-03-30 18:14:57,787 p=58554 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:14:57,836 p=58554 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller
2025-03-30 18:14:57,873 p=58554 u=vagrant n=ansible | TASK [Check the state of the default LXC service log directory] ****************
2025-03-30 18:14:58,837 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:58,858 p=58554 u=vagrant n=ansible | TASK [Create the log aggregation parent directory] *****************************
2025-03-30 18:14:59,324 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:59,345 p=58554 u=vagrant n=ansible | TASK [Move the existing folder to the log aggregation parent] ******************
2025-03-30 18:14:59,400 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:14:59,434 p=58554 u=vagrant n=ansible | TASK [Create the new LXC service log directory] ********************************
2025-03-30 18:14:59,889 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:14:59,917 p=58554 u=vagrant n=ansible | TASK [Create the LXC service log aggregation link] *****************************
2025-03-30 18:15:00,417 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:00,578 p=58554 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:15:00,711 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:00,797 p=58554 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:15:00,874 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:00,915 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Gather variables for each operating system] ******************
2025-03-30 18:15:01,026 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:01,043 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Gather container variables] **********************************
2025-03-30 18:15:01,152 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:01,176 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_pre_install tasks] *****************************
2025-03-30 18:15:01,226 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_pre_install.yml for controller
2025-03-30 18:15:01,244 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Create base directories] *************************************
2025-03-30 18:15:01,720 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/lxc)
2025-03-30 18:15:02,148 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/usr/local/bin)
2025-03-30 18:15:02,570 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/network/interfaces.d)
2025-03-30 18:15:02,982 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/apparmor.d/lxc)
2025-03-30 18:15:03,394 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/usr/share/lxc/templates)
2025-03-30 18:15:03,803 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/openstack)
2025-03-30 18:15:04,219 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/openstack/backup)
2025-03-30 18:15:04,650 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/openstack/log)
2025-03-30 18:15:05,047 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/var/lib/lxc)
2025-03-30 18:15:05,467 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/var/cache/lxc/download)
2025-03-30 18:15:05,506 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_install tasks"] ********************************
2025-03-30 18:15:05,568 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_install_apt.yml for controller
2025-03-30 18:15:05,590 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Remove conflicting packages] *********************************
2025-03-30 18:15:06,966 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:06,987 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Install apt packages] ****************************************
2025-03-30 18:15:09,099 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:09,198 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Drop irqbalance config] **************************************
2025-03-30 18:15:10,311 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:10,337 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc-openstack apparmor profile] *************************
2025-03-30 18:15:11,274 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:11,299 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Flush handler to reload apparmor profiles] *******************
2025-03-30 18:15:11,330 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_post_install tasks] ****************************
2025-03-30 18:15:11,396 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_post_install.yml for controller
2025-03-30 18:15:11,422 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Ensure the lxc dnsmasq user exists] **************************
2025-03-30 18:15:12,328 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:12,350 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Drop base config file(s)] ************************************
2025-03-30 18:15:13,309 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-openstack.conf.j2', 'dest': '/etc/lxc/lxc-openstack.conf'})
2025-03-30 18:15:14,257 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-net.default.j2', 'dest': '/etc/default/lxc-net', 'mode': '0644'})
2025-03-30 18:15:15,222 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc.default.j2', 'dest': '/etc/default/lxc', 'mode': '0644'})
2025-03-30 18:15:16,186 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'src': 'lxc-system-manage.j2', 'dest': '/usr/local/bin/lxc-system-manage', 'mode': '0755'})
2025-03-30 18:15:16,209 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Drop lxc veth check script] **********************************
2025-03-30 18:15:17,115 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:17,143 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Set systemd DefaultTasksMax value] ***************************
2025-03-30 18:15:17,856 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:17,880 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Set sshd MaxSessions] ****************************************
2025-03-30 18:15:18,296 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:18,316 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Tuning kernel for lxc] ***************************************
2025-03-30 18:15:19,043 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'key': 'fs.inotify.max_user_instances', 'value': 1024})
2025-03-30 18:15:19,075 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_net tasks] *************************************
2025-03-30 18:15:19,212 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_net.yml for controller
2025-03-30 18:15:19,243 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Check if NetworkManager is running] **************************
2025-03-30 18:15:19,689 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:19,709 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Ensure network services wait on networking (if using NetworkManager)] ***
2025-03-30 18:15:19,736 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:19,757 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Disable and stop lxc-net] ************************************
2025-03-30 18:15:21,112 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:21,136 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Setup LXC OVS Bridge] ****************************************
2025-03-30 18:15:21,165 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:21,256 p=58554 u=vagrant n=ansible | TASK [Run the systemd-networkd role] *******************************************
2025-03-30 18:15:21,392 p=58554 u=vagrant n=ansible | included: systemd_networkd for controller
2025-03-30 18:15:21,416 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] ***********
2025-03-30 18:15:21,502 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:21,524 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] ***
2025-03-30 18:15:21,575 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:21,599 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] ***
2025-03-30 18:15:21,648 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:21,677 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] *************************************
2025-03-30 18:15:21,728 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:21,753 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] **************************
2025-03-30 18:15:21,791 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:21,823 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] *********************
2025-03-30 18:15:21,929 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:21,966 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] ********************
2025-03-30 18:15:22,599 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:22,619 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] ***********************
2025-03-30 18:15:22,653 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:22,675 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] ***************
2025-03-30 18:15:22,706 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:22,725 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] ************************
2025-03-30 18:15:22,759 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:22,782 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] ************
2025-03-30 18:15:23,727 p=58554 u=vagrant n=ansible | ok: [controller] => (item=[0, {'NetDev': {'Name': 'lxcbr0', 'Kind': 'bridge'}, 'Bridge': {'ForwardDelaySec': 0, 'HelloTimeSec': 2, 'MaxAgeSec': 12, 'STP': False}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-30 18:15:23,753 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] **************
2025-03-30 18:15:24,366 p=58554 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-30 18:15:24,385 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] ***********
2025-03-30 18:15:25,137 p=58554 u=vagrant n=ansible | ok: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}])
2025-03-30 18:15:25,168 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] **********
2025-03-30 18:15:25,235 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:25,259 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ****************
2025-03-30 18:15:25,323 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:25,347 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] ********************
2025-03-30 18:15:26,309 p=58554 u=vagrant n=ansible | changed: [controller]
2025-03-30 18:15:26,338 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 18:15:26,383 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] *************************
2025-03-30 18:15:26,476 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=[0, {'interface': 'lxcbr0', 'address': '10.0.3.1', 'netmask': '255.255.255.0', 'config_overrides': {'Network': {'ConfigureWithoutCarrier': True, 'Gateway': {}}}, 'filename': '0-lxc-net-lxcbr0'}]) 
2025-03-30 18:15:26,478 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:26,523 p=58554 u=vagrant n=ansible | TASK [Run the systemd-service role] ********************************************
2025-03-30 18:15:26,702 p=58554 u=vagrant n=ansible | included: systemd_service for controller
2025-03-30 18:15:26,765 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 18:15:27,366 p=58554 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-30 18:15:27,398 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 18:15:27,895 p=58554 u=vagrant n=ansible | ok: [controller] => (item={"path": "/run/lock/lxc-dnsmasq", "owner": "root", "group": "root"})
2025-03-30 18:15:27,921 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 18:15:27,975 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:27,994 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 18:15:29,063 p=58554 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-lxc-dnsmasq.conf"})
2025-03-30 18:15:29,087 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 18:15:30,074 p=58554 u=vagrant n=ansible | ok: [controller] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/lxc-dnsmasq.service", "config_overrides": {"Unit": {"Before": "lxc.service"}, "Service": {"PIDFile": "/run/lxc/dnsmasq.pid"}}, "config_type": "ini"})
2025-03-30 18:15:30,101 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 18:15:30,159 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:30,261 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 18:15:30,317 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:30,341 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 18:15:30,385 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:30,410 p=58554 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 18:15:30,471 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:30,496 p=58554 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 18:15:30,590 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller => (item={"service_name": "lxc-dnsmasq"})
2025-03-30 18:15:30,636 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load service lxc-dnsmasq] ******************************
2025-03-30 18:15:31,489 p=58554 u=vagrant n=ansible | ok: [controller] => (item={"service_name": "lxc-dnsmasq"})
2025-03-30 18:15:31,525 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load timer lxc-dnsmasq] ********************************
2025-03-30 18:15:31,595 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={"service_name": "lxc-dnsmasq"}) 
2025-03-30 18:15:31,597 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:31,617 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 18:15:31,669 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:31,711 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Check Container Bridge exists] *******************************
2025-03-30 18:15:32,164 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:32,191 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] **********************************************
2025-03-30 18:15:32,233 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache tasks] ***********************************
2025-03-30 18:15:32,293 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_hosts/tasks/lxc_cache.yml for controller
2025-03-30 18:15:32,329 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Set LXC cache fact(s)] ***************************************
2025-03-30 18:15:32,388 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:32,409 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Retrieve the expiry object] **********************************
2025-03-30 18:15:32,873 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:15:32,893 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Set cache refresh fact] **************************************
2025-03-30 18:15:32,937 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:32,962 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_rootfs tasks] ****************************
2025-03-30 18:15:32,992 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:33,011 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_preparation tasks] ***********************
2025-03-30 18:15:33,041 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:33,062 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Including lxc_cache_create tasks] ****************************
2025-03-30 18:15:33,095 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:15:33,124 p=58554 u=vagrant n=ansible | TASK [lxc_hosts : Flush handlers] **********************************************
2025-03-30 18:15:33,250 p=58554 u=vagrant n=ansible | PLAY [Set lxc containers group] ************************************************
2025-03-30 18:15:33,341 p=58554 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:15:33,480 p=58554 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-memcached-container-71b4149f, controller-utility-container-7e5b64c5, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:15:33,522 p=58554 u=vagrant n=ansible | TASK [Add hosts to dynamic inventory group] ************************************
2025-03-30 18:15:33,594 p=58554 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 18:15:33,626 p=58554 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 18:15:33,657 p=58554 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 18:15:33,673 p=58554 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:15:33,797 p=58554 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 18:15:33,994 p=58554 u=vagrant n=ansible | PLAY [Gather lxc hosts facts] **************************************************
2025-03-30 18:15:34,155 p=58554 u=vagrant n=ansible | PLAY [Create container(s)] *****************************************************
2025-03-30 18:15:34,176 p=58554 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:15:34,339 p=58554 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:15:34,423 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *******************
2025-03-30 18:15:34,978 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:15:35,005 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:15:35,482 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:15:35,604 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:15:36,038 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:15:36,048 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Check the physical_host variable is set] **********
2025-03-30 18:15:36,105 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:15:36,140 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:15:36,169 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:15:36,194 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:15:36,222 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:15:36,232 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Read custom facts from previous runs] *************
2025-03-30 18:15:39,592 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:15:39,631 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:15:43,078 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:15:43,135 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:15:46,455 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:15:46,462 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Check for lxc volume group] ***********************
2025-03-30 18:15:46,522 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:15:46,560 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:15:46,602 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:15:46,633 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:15:46,661 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:15:46,675 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : LXC VG check] *************************************
2025-03-30 18:15:46,738 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:15:46,764 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:15:46,791 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:15:46,796 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:15:46,819 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:15:46,833 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_destroy tasks] ************
2025-03-30 18:15:46,934 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:15:46,977 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:15:47,005 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:15:47,010 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:15:47,040 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:15:47,053 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks] *************
2025-03-30 18:15:47,215 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:15:47,232 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Container service directories] ********************
2025-03-30 18:15:47,777 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/controller-utility-container-7e5b64c5)
2025-03-30 18:15:47,797 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/controller-galera-container-f800b10b)
2025-03-30 18:15:48,207 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/backup/controller-utility-container-7e5b64c5)
2025-03-30 18:15:48,307 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/backup/controller-galera-container-f800b10b)
2025-03-30 18:15:48,694 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/openstack/log/controller-utility-container-7e5b64c5)
2025-03-30 18:15:48,837 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/openstack/log/controller-galera-container-f800b10b)
2025-03-30 18:15:49,262 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-utility-container-7e5b64c5)
2025-03-30 18:15:49,376 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-galera-container-f800b10b)
2025-03-30 18:15:49,854 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/controller-memcached-container-71b4149f)
2025-03-30 18:15:49,921 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 18:15:50,428 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-memcached-container-71b4149f)
2025-03-30 18:15:50,432 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/backup/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 18:15:50,836 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/openstack/log/controller-memcached-container-71b4149f)
2025-03-30 18:15:50,887 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/openstack/log/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 18:15:51,293 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-memcached-container-71b4149f)
2025-03-30 18:15:51,356 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c)
2025-03-30 18:15:51,767 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/controller-repo-container-79f4553f)
2025-03-30 18:15:52,311 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/backup/controller-repo-container-79f4553f)
2025-03-30 18:15:52,720 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/openstack/log/controller-repo-container-79f4553f)
2025-03-30 18:15:53,107 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=/var/lib/lxc/controller-repo-container-79f4553f)
2025-03-30 18:15:53,118 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : LXC autodev setup] ********************************
2025-03-30 18:15:54,150 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:15:54,211 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:15:55,237 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:15:55,369 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:15:56,218 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:15:56,232 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_create tasks for dir] *****
2025-03-30 18:15:56,396 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_create_dir.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:15:56,424 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create container (dir)] ***************************
2025-03-30 18:15:57,341 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:15:57,360 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:15:57,959 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:15:57,985 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:15:58,547 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:15:58,557 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Check container state] ****************************
2025-03-30 18:15:59,042 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:15:59,091 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:15:59,598 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:15:59,675 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:16:00,079 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:16:00,091 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Start the container if it is not already running] ***
2025-03-30 18:16:00,167 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:16:00,218 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:16:00,244 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:16:00,274 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:16:00,298 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:16:00,309 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_config tasks] *************
2025-03-30 18:16:00,582 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_config.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:16:00,610 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Write default container config] *******************
2025-03-30 18:16:01,228 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 18:16:01,248 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 18:16:01,679 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-galera-container-f800b10b/autodev)
2025-03-30 18:16:01,693 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-utility-container-7e5b64c5/autodev)
2025-03-30 18:16:02,195 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 18:16:02,236 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 18:16:02,776 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 18:16:02,862 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 18:16:03,345 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 18:16:03,435 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 18:16:03,932 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 18:16:04,092 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 18:16:04,500 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 18:16:04,621 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 18:16:05,028 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 18:16:05,110 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 18:16:05,527 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 18:16:05,671 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/autodev)
2025-03-30 18:16:05,996 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 18:16:06,174 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 18:16:06,525 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 18:16:06,662 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 18:16:07,093 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-memcached-container-71b4149f/autodev)
2025-03-30 18:16:07,244 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 18:16:07,607 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.group=onboot)
2025-03-30 18:16:08,064 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.autodev=/var/lib/lxc/controller-repo-container-79f4553f/autodev)
2025-03-30 18:16:08,546 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.delay=15)
2025-03-30 18:16:08,982 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.autodev=1)
2025-03-30 18:16:09,423 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.auto=1)
2025-03-30 18:16:09,978 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.group=openstack)
2025-03-30 18:16:09,997 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Ensure containers have required auto mounts] ******
2025-03-30 18:16:10,552 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:16:10,629 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:16:11,016 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:16:11,085 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:16:11,474 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:16:11,484 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Ensure bind mount host directories exists] ********
2025-03-30 18:16:12,062 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-30 18:16:12,113 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-30 18:16:12,810 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-30 18:16:12,976 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-30 18:16:13,733 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-repo-container-79f4553f', 'container_directory': '/var/backup'})
2025-03-30 18:16:13,747 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] ********
2025-03-30 18:16:14,374 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-utility-container-7e5b64c5', 'container_directory': '/var/backup'})
2025-03-30 18:16:14,421 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-galera-container-f800b10b', 'container_directory': '/var/backup'})
2025-03-30 18:16:14,850 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-memcached-container-71b4149f', 'container_directory': '/var/backup'})
2025-03-30 18:16:14,911 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-rabbit-mq-container-6f8ad97c', 'container_directory': '/var/backup'})
2025-03-30 18:16:15,401 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'host_directory': '/openstack/backup/controller-repo-container-79f4553f', 'container_directory': '/var/backup'})
2025-03-30 18:16:15,419 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create and start the container] *******************
2025-03-30 18:16:16,078 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:16:16,113 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:16:16,857 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:16:16,903 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:16:17,522 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:16:17,536 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Gather container facts] ***************************
2025-03-30 18:16:19,190 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:16:19,818 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:16:20,713 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:16:21,261 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:16:21,771 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:16:21,782 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Drop container setup script] **********************
2025-03-30 18:16:23,446 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:16:23,528 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:16:24,971 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:16:24,980 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:16:26,235 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:16:26,244 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Drop container first run script] ******************
2025-03-30 18:16:27,433 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:16:27,454 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:16:28,542 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:16:28,596 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:16:29,600 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:16:29,609 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Execute first script] *****************************
2025-03-30 18:16:30,129 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:16:30,274 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:16:30,725 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:16:30,921 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:16:31,264 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:16:31,273 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create container mac script] **********************
2025-03-30 18:16:32,408 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:32,492 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:33,608 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:33,635 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:34,855 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:35,029 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:35,980 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:36,242 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:37,399 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:38,306 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:38,324 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Cleanup old mac scripts] **************************
2025-03-30 18:16:38,878 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:38,925 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:39,370 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:39,435 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:39,947 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:40,070 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:40,418 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:40,551 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:40,958 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:41,492 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:41,505 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Set define static mac address from an existing interface] ***
2025-03-30 18:16:41,988 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:42,026 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:42,504 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:42,552 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:43,036 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:43,155 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:43,541 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:43,622 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:44,000 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:44,428 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:44,441 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Gather hardware addresses to be used as facts] ****
2025-03-30 18:16:44,933 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:45,101 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:45,367 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:45,595 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:45,835 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:46,098 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:46,290 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:46,538 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:46,742 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:47,148 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:47,161 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Set fixed hardware address fact] ******************
2025-03-30 18:16:47,219 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6M2I6Y2M6ZjEK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,238 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'content': 'MDA6MTY6M2U6ZDA6YjM6Y2UK', 'source': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-galera-container-f800b10b/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,274 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6YWM6ZDQ6ZWQK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,290 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'content': 'MDA6MTY6M2U6N2E6ZjU6NzgK', 'source': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-utility-container-7e5b64c5/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,351 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ZjA6Njk6ZTQK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,358 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6ZTE6Mjg6MWMK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,385 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'content': 'MDA6MTY6M2U6N2Y6ZDI6ZjYK', 'source': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,390 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'content': 'MDA6MTY6M2U6ODM6OWQ6YWYK', 'source': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-memcached-container-71b4149f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,452 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'content': 'MDA6MTY6M2U6ZGI6ZGI6NzEK', 'source': '/var/lib/lxc/controller-repo-container-79f4553f/eth1.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-repo-container-79f4553f/eth1.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,473 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'content': 'MDA6MTY6M2U6Mzg6NTM6ODIK', 'source': '/var/lib/lxc/controller-repo-container-79f4553f/eth0.hwaddr', 'encoding': 'base64', 'invocation': {'module_args': {'src': '/var/lib/lxc/controller-repo-container-79f4553f/eth0.hwaddr'}}, 'failed': False, 'changed': False, 'item': {'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}, 'ansible_loop_var': 'item'})
2025-03-30 18:16:47,485 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : LXC host config for container networks] ***********
2025-03-30 18:16:48,679 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 18:16:48,724 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 18:16:49,794 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 18:16:49,839 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 18:16:50,918 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 18:16:50,960 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 18:16:51,975 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 18:16:52,002 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 18:16:53,130 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=[0, {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}])
2025-03-30 18:16:54,224 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=[1, {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}])
2025-03-30 18:16:54,237 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Container network includes] ***********************
2025-03-30 18:16:54,802 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:54,846 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:55,394 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:55,439 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:55,963 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:56,051 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:56,447 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:56,566 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:57,276 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}})
2025-03-30 18:16:57,787 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}})
2025-03-30 18:16:57,804 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create wiring script] *****************************
2025-03-30 18:16:58,993 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:16:59,030 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:17:00,082 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:17:00,154 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:17:00,993 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:17:01,003 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Drop veth cleanup script] *************************
2025-03-30 18:17:02,083 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:17:02,157 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:17:03,289 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:17:03,343 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:17:04,339 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:17:04,349 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Defines a pre, post, and haltsignal configs] ******
2025-03-30 18:17:04,811 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-30 18:17:04,857 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-30 18:17:05,323 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-galera-container-f800b10b/veth-cleanup.sh)
2025-03-30 18:17:05,341 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-utility-container-7e5b64c5/veth-cleanup.sh)
2025-03-30 18:17:05,800 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 18:17:05,823 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 18:17:06,349 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-30 18:17:06,412 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-30 18:17:06,918 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-rabbit-mq-container-6f8ad97c/veth-cleanup.sh)
2025-03-30 18:17:06,921 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-memcached-container-71b4149f/veth-cleanup.sh)
2025-03-30 18:17:07,376 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 18:17:07,403 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 18:17:07,880 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.pre-start = /var/lib/lxc/controller-repo-container-79f4553f/veth-cleanup.sh)
2025-03-30 18:17:08,326 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.hook.post-stop = /var/lib/lxc/controller-repo-container-79f4553f/veth-cleanup.sh)
2025-03-30 18:17:08,823 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.signal.halt = SIGRTMIN+4)
2025-03-30 18:17:08,834 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Run veth wiring] **********************************
2025-03-30 18:17:08,886 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:08,923 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:08,963 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:08,988 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:09,018 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:09,030 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Run container veth wiring script] *****************
2025-03-30 18:17:09,111 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'container_address', 'value': {'address': '192.168.56.180', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 18:17:09,136 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 18:17:09,149 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:09,177 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'container_address', 'value': {'address': '192.168.56.92', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 18:17:09,189 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 18:17:09,205 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:09,248 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.251', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 18:17:09,272 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 18:17:09,287 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:09,308 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'container_address', 'value': {'address': '192.168.56.214', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 18:17:09,331 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 18:17:09,334 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:09,372 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={'key': 'container_address', 'value': {'address': '192.168.56.3', 'bridge': 'br-mgmt', 'interface': 'eth1', 'netmask': '255.255.255.0', 'type': 'veth'}}) 
2025-03-30 18:17:09,397 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={'key': 'lxcbr0_address', 'value': {'bridge': 'lxcbr0', 'bridge_type': 'linuxbridge', 'interface': 'eth0', 'type': 'veth'}}) 
2025-03-30 18:17:09,400 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:09,413 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Including lxc_container_network tasks] ************
2025-03-30 18:17:09,635 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/lxc_container_create/tasks/lxc_container_network.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:17:09,778 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Gather variables for each operating system] ***********
2025-03-30 18:17:09,866 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:17:09,898 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:09,957 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:17:09,990 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:10,032 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:17:10,042 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : If a keyfile is provided, copy the gpg keyfile to the key location] ***
2025-03-30 18:17:10,105 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:10,142 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:10,184 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:10,198 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:10,232 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:10,242 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Ensure GPG keys have the correct SELinux contexts applied] ***
2025-03-30 18:17:10,318 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:10,383 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:10,412 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:10,426 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:10,454 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:10,467 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Install gpg keys] *************************************
2025-03-30 18:17:10,531 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:10,566 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:10,586 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:10,603 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:10,626 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:10,637 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Install the EPEL repository] **************************
2025-03-30 18:17:10,689 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:10,720 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:10,748 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:10,763 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:10,780 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:10,791 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Install networkd distro packages] *********************
2025-03-30 18:17:10,842 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:10,875 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:10,906 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:10,911 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:10,937 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:10,952 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd directory] ********************
2025-03-30 18:17:11,844 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:11,983 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:17:12,357 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:17:12,504 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:12,823 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:17:12,832 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-resolved config] ***********************
2025-03-30 18:17:12,879 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:12,906 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:12,936 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:12,943 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:12,967 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:12,979 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Find prefixed netdev and network files] ***************
2025-03-30 18:17:13,027 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:13,053 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:13,080 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:13,085 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:13,109 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:13,120 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Remove prefixed network files] ************************
2025-03-30 18:17:13,171 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:13,197 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:13,221 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:13,235 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:13,256 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:13,269 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network device(s)] ************
2025-03-30 18:17:13,322 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:13,361 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:13,392 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:13,412 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:13,439 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:13,450 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network link(s)] **************
2025-03-30 18:17:14,472 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:14,570 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:15,416 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:15,609 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:16,436 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:16,591 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:17,309 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:17,495 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:18,175 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:18,927 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:18,942 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd network network(s)] ***********
2025-03-30 18:17:20,232 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:20,353 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:21,174 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:21,383 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:22,286 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:22,386 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:23,283 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:23,388 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:24,236 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:24,986 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}])
2025-03-30 18:17:25,001 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Create systemd-networkd extra config folder] **********
2025-03-30 18:17:25,548 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth1)
2025-03-30 18:17:25,603 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth1)
2025-03-30 18:17:26,026 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=eth0)
2025-03-30 18:17:26,076 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=eth0)
2025-03-30 18:17:26,697 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth1)
2025-03-30 18:17:26,744 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth1)
2025-03-30 18:17:27,263 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=eth0)
2025-03-30 18:17:27,347 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=eth0)
2025-03-30 18:17:27,937 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=eth1)
2025-03-30 18:17:28,363 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=eth0)
2025-03-30 18:17:28,372 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Place systemd-networkd network routes] ****************
2025-03-30 18:17:29,811 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:29,848 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:31,230 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:31,263 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:32,553 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:32,741 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:33,753 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:33,955 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:34,900 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:35,953 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}})
2025-03-30 18:17:35,969 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Enable and start systemd-networkd] ********************
2025-03-30 18:17:37,123 p=58554 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:37,299 p=58554 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 18:17:38,404 p=58554 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 18:17:38,559 p=58554 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:39,470 p=58554 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 18:17:39,480 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 18:17:39,492 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 18:17:39,503 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 18:17:39,513 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 18:17:39,522 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Restart systemd_networkd prior to applying sysctl changes] ***
2025-03-30 18:17:39,535 p=58554 u=vagrant n=ansible | TASK [systemd_networkd : Add IP Forward for interface] *************************
2025-03-30 18:17:39,667 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.180', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,676 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.92', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,684 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,687 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,704 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:39,727 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:17:39,816 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.251', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,836 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,855 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:17:39,872 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.214', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,895 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,900 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:39,971 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=[0, {'filename': 'eth1', 'interface': 'eth1', 'address': '192.168.56.3', 'netmask': '255.255.255.0', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,982 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=[1, {'filename': 'eth0', 'interface': 'eth0', 'address': 'dhcp', 'netmask': '', 'gateway': '', 'mtu': '', 'static_routes': [], 'usedns': True, 'config_overrides': {}}]) 
2025-03-30 18:17:39,984 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:17:40,025 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create resolved link] *****************************
2025-03-30 18:17:40,689 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:17:40,752 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:17:41,463 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:17:41,467 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:17:41,895 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:17:41,910 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 18:17:42,506 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:42,550 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:43,246 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:43,403 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:43,936 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:44,028 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:44,503 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:44,604 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:45,206 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:45,653 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:45,665 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 18:17:46,263 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:46,321 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:46,834 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:46,889 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:47,413 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:47,515 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:48,007 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:48,045 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:48,552 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:48,993 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/lxc-system", "owner": "root", "group": "root"})
2025-03-30 18:17:49,009 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 18:17:49,564 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 18:17:49,624 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 18:17:50,177 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 18:17:50,272 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 18:17:50,729 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/systemd-hostnamed.service.d", "owner": "root", "group": "root"})
2025-03-30 18:17:50,746 p=58554 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 18:17:52,174 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 18:17:52,268 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 18:17:53,463 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 18:17:53,637 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 18:17:54,837 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 18:17:55,017 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 18:17:56,102 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 18:17:56,277 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 18:17:57,233 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-sysctl-container.conf"})
2025-03-30 18:17:58,301 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-hostnamed.conf"})
2025-03-30 18:17:58,311 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 18:17:59,343 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 18:17:59,437 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 18:18:00,347 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 18:18:00,444 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 18:18:01,263 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/sysctl-container.service", "config_overrides": {"Unit": {"DefaultDependencies": "no", "Conflicts": "shutdown.target", "Before": "sysinit.target shutdown.target"}, "Service": {"RemainAfterExit": "yes"}}, "config_type": "ini"})
2025-03-30 18:18:01,274 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 18:18:02,600 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 18:18:02,658 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 18:18:04,032 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 18:18:04,175 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 18:18:05,249 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-hostnamed.service.d/override.conf"})
2025-03-30 18:18:05,266 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 18:18:05,359 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:05,403 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:05,460 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:05,499 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:05,545 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:05,553 p=58554 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 18:18:05,664 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:05,707 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:05,790 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:05,794 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:05,849 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:05,862 p=58554 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 18:18:05,926 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:05,960 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:05,999 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:06,018 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:06,062 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:06,074 p=58554 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 18:18:06,558 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f => (item={"service_name": "sysctl-container"})
2025-03-30 18:18:06,565 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f => (item={"service_name": "systemd-hostnamed"})
2025-03-30 18:18:06,630 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load service sysctl-container] *************************
2025-03-30 18:18:07,537 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"})
2025-03-30 18:18:07,575 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"})
2025-03-30 18:18:08,384 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"})
2025-03-30 18:18:08,486 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"})
2025-03-30 18:18:09,200 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container"})
2025-03-30 18:18:09,219 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load timer sysctl-container] ***************************
2025-03-30 18:18:09,290 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "sysctl-container"}) 
2025-03-30 18:18:09,301 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:09,339 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "sysctl-container"}) 
2025-03-30 18:18:09,352 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:09,393 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "sysctl-container"}) 
2025-03-30 18:18:09,406 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:09,446 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "sysctl-container"}) 
2025-03-30 18:18:09,448 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:09,477 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "sysctl-container"}) 
2025-03-30 18:18:09,480 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:09,499 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load service systemd-hostnamed] ************************
2025-03-30 18:18:10,509 p=58554 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 18:18:10,767 p=58554 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 18:18:11,697 p=58554 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 18:18:11,837 p=58554 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 18:18:12,729 p=58554 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-hostnamed"})
2025-03-30 18:18:12,752 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load timer systemd-hostnamed] **************************
2025-03-30 18:18:12,810 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 18:18:12,821 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:12,842 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 18:18:12,858 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:12,902 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 18:18:12,920 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:12,933 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 18:18:12,935 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:12,979 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-hostnamed"}) 
2025-03-30 18:18:12,981 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:12,989 p=58554 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 18:18:13,081 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:13,140 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:13,179 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:13,240 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:13,265 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:13,299 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Add global_environment_variables to environment file] ***
2025-03-30 18:18:13,843 p=58554 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:13,979 p=58554 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 18:18:14,380 p=58554 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 18:18:14,513 p=58554 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:14,882 p=58554 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 18:18:14,891 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create localhost config] **************************
2025-03-30 18:18:15,516 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:15,545 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:15,972 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:16,127 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:16,434 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:16,444 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Set hostnamectl name] *****************************
2025-03-30 18:18:16,492 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:16,519 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:16,546 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:16,565 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:16,577 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:16,586 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Generate machine-id] ******************************
2025-03-30 18:18:17,053 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:17,151 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:17,504 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:17,591 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:17,921 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:17,930 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Ensure the dbus directory exists] *****************
2025-03-30 18:18:18,398 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:18,434 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:18,878 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:18,950 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:19,322 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:19,330 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Create dbus machine-id] ***************************
2025-03-30 18:18:20,107 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:20,177 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:20,929 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:20,955 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:21,594 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:21,604 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Retrieve the machine-id] **************************
2025-03-30 18:18:22,051 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:22,096 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:22,577 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:22,612 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:23,031 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:23,040 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Set bind mount for journal linking] ***************
2025-03-30 18:18:23,105 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:23,161 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:23,200 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:23,212 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:23,252 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:23,264 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Ensure journal directory exists] ******************
2025-03-30 18:18:23,755 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=controller)
2025-03-30 18:18:23,804 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=controller)
2025-03-30 18:18:24,257 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=controller-galera-container-f800b10b)
2025-03-30 18:18:24,310 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=controller-utility-container-7e5b64c5)
2025-03-30 18:18:24,808 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=controller)
2025-03-30 18:18:24,821 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=controller)
2025-03-30 18:18:25,303 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=controller-memcached-container-71b4149f)
2025-03-30 18:18:25,331 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=controller-rabbit-mq-container-6f8ad97c)
2025-03-30 18:18:25,731 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=controller)
2025-03-30 18:18:26,153 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=controller-repo-container-79f4553f)
2025-03-30 18:18:26,169 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Add bind mount configuration to container] ********
2025-03-30 18:18:26,603 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)]
2025-03-30 18:18:26,682 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)]
2025-03-30 18:18:27,125 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)]
2025-03-30 18:18:27,145 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)]
2025-03-30 18:18:27,517 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)]
2025-03-30 18:18:27,525 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Allow the usage of local facts] *******************
2025-03-30 18:18:27,999 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:28,046 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:28,481 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:28,528 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:28,972 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:28,981 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Record the container variant deployed] ************
2025-03-30 18:18:29,682 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:29,724 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:30,153 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:30,211 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:30,631 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:30,642 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 18:18:30,657 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 18:18:30,671 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 18:18:30,683 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 18:18:30,695 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : Force all notified handlers now] ******************
2025-03-30 18:18:30,710 p=58554 u=vagrant n=ansible | TASK [lxc_container_create : (RE)Gather facts post setup] **********************
2025-03-30 18:18:31,998 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:32,108 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:33,273 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:33,469 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:34,420 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:34,587 p=58554 u=vagrant n=ansible | TASK [Wait for container connectivity] *****************************************
2025-03-30 18:18:38,967 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:38,994 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:42,738 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:42,781 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:46,419 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:46,432 p=58554 u=vagrant n=ansible | TASK [Clear facts for new container(s)] ****************************************
2025-03-30 18:18:46,477 p=58554 u=vagrant n=ansible | PLAY [Gather lxc containers facts] *********************************************
2025-03-30 18:18:46,487 p=58554 u=vagrant n=ansible | TASK [Gathering Facts] *********************************************************
2025-03-30 18:18:48,008 p=58554 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-utility-container-7e5b64c5 is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 18:18:48,009 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:48,267 p=58554 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-galera-container-f800b10b is using
the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 18:18:48,268 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:49,052 p=58554 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-memcached-container-71b4149f is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 18:18:49,053 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:49,475 p=58554 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-rabbit-mq-container-6f8ad97c is
using the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 18:18:49,475 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:50,001 p=58554 u=vagrant n=ansible | [WARNING]: Platform linux on host controller-repo-container-79f4553f is using
the discovered Python interpreter at /usr/bin/python3.10, but future
installation of another Python interpreter could change the meaning of that
path. See https://docs.ansible.com/ansible-
core/2.17/reference_appendices/interpreter_discovery.html for more information.

2025-03-30 18:18:50,001 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:50,160 p=58554 u=vagrant n=ansible | PLAY [Configure containers default software] ***********************************
2025-03-30 18:18:50,181 p=58554 u=vagrant n=ansible | TASK [Check for a supported Operating System] **********************************
2025-03-30 18:18:50,265 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:18:50,295 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:18:50,332 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:18:50,350 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:18:50,380 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:18:50,388 p=58554 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:18:50,532 p=58554 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:18:50,601 p=58554 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:18:51,867 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:51,918 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:53,217 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:53,220 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:54,354 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:54,363 p=58554 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:18:54,407 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:18:54,429 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:54,452 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:18:54,461 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:54,486 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:18:54,518 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Gather variables for each operating system] ************
2025-03-30 18:18:54,596 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:54,635 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:54,689 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:54,719 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:54,772 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:54,784 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Allow the usage of local facts] ************************
2025-03-30 18:18:55,581 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:55,604 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:56,137 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:56,208 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:18:56,678 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:18:56,692 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Drop openstack release file] ***************************
2025-03-30 18:18:57,927 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:18:58,021 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:18:59,142 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:18:59,282 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:00,354 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:00,367 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Remove legacy openstack release file] ******************
2025-03-30 18:19:00,402 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:19:00,428 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:00,470 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:19:00,475 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:00,494 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:19:00,503 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add global_environment_variables to environment file] ***
2025-03-30 18:19:01,253 p=58554 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b]
2025-03-30 18:19:01,291 p=58554 u=vagrant n=ansible | changed: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:01,852 p=58554 u=vagrant n=ansible | changed: [controller-memcached-container-71b4149f]
2025-03-30 18:19:01,866 p=58554 u=vagrant n=ansible | changed: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:02,350 p=58554 u=vagrant n=ansible | changed: [controller-repo-container-79f4553f]
2025-03-30 18:19:02,363 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Ensure environement is applied during sudo] ************
2025-03-30 18:19:02,413 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:19:02,449 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:02,472 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:19:02,480 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:02,505 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:19:02,515 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Create systemd global directory] ***********************
2025-03-30 18:19:03,117 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:03,169 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:03,687 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:03,770 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:04,165 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:04,175 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add DefaultEnvironment to systemd] *********************
2025-03-30 18:19:05,080 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:05,117 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:05,965 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:05,974 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:06,717 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:06,728 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Configure etc hosts files] *****************************
2025-03-30 18:19:06,981 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_update_hosts_file.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:19:07,024 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Generate hosts file records] ***************************
2025-03-30 18:19:07,177 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:07,186 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file] *************************************
2025-03-30 18:19:07,663 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:07,750 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:08,177 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:08,267 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:08,658 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:08,666 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update hosts file on deploy host] **********************
2025-03-30 18:19:09,082 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-30 18:19:09,093 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Remove the blacklisted packages] ***********************
2025-03-30 18:19:10,635 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:10,750 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:12,088 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:12,366 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:13,597 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:13,607 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Apply package management distro specific configuration] ***
2025-03-30 18:19:13,767 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_hosts_configure_apt.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:19:13,823 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Ensure /etc/apt/sources.list.d exists] *****************
2025-03-30 18:19:14,309 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:14,344 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:14,767 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:14,825 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:15,294 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:15,304 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Validate repo config is deb822 format] *****************
2025-03-30 18:19:15,440 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:19:15,480 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:19:15,564 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:19:15,605 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:19:15,679 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:19:15,687 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Clean up legacy repository config not in deb822 format] ***
2025-03-30 18:19:16,224 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=uca.list)
2025-03-30 18:19:16,285 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=uca.list)
2025-03-30 18:19:16,683 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=osbpo.list)
2025-03-30 18:19:16,739 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=osbpo.list)
2025-03-30 18:19:17,224 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=uca.list)
2025-03-30 18:19:17,365 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=uca.list)
2025-03-30 18:19:17,731 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item=osbpo.list)
2025-03-30 18:19:17,837 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=osbpo.list)
2025-03-30 18:19:18,214 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=uca.list)
2025-03-30 18:19:18,644 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=osbpo.list)
2025-03-30 18:19:18,659 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add requirement packages (repositories gpg keys, toolkits...)] ***
2025-03-30 18:19:26,632 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:26,683 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:33,392 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:35,396 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:40,027 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:40,036 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Manage apt repositories] *******************************
2025-03-30 18:19:40,772 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:19:40,961 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:19:41,520 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:19:41,758 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:19:42,360 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'uca', 'suites': 'jammy-updates/caracal', 'uris': 'http://ubuntu-cloud.archive.canonical.com/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBFAqSlgBEADPKwXUwqbgoDYgR20zFypxSZlSbrttOKVPEMb0HSUx9Wj8VvNC\nr+mT4E9wAyq7NTIs5ad2cUhXoyenrjcfGqK6k9R6yRHDbvAxCSWTnJjw7mzsajDN\nocXC6THKVW8BSjrh0aOBLpht6d5QCO2vyWxw65FKM65GOsbX03ZngUPMuOuiOEHQ\nZo97VSH2pSB+L+B3d9B0nw3QnU8qZMne+nVWYLYRXhCIxSv1/h39SXzHRgJoRUFH\nvL2aiiVrn88NjqfDW15HFhVJcGOFuACZnRA0/EqTq0qNo3GziQO4mxuZi3bTVL5s\nGABiYW9uIlokPqcS7Fa0FRVIU9R+bBdHZompcYnKAeGag+uRvuTqC3MMRcLUS9Oi\n/P9I8fPARXUPwzYN3fagCGB8ffYVqMunnFs0L6td08BgvWwer+Buu4fPGsQ5OzMc\nlgZ0TJmXyOlIW49lc1UXnORp4sm7HS6okA7P6URbqyGbaplSsNUVTgVbi+vc8/jY\ndfExt/3HxVqgrPlq9htqYgwhYvGIbBAxmeFQD8Ak/ShSiWb1FdQ+f7Lty+4mZLfN\n8x4zPZ//7fD5d/PETPh9P0msF+lLFlP564+1j75wx+skFO4v1gGlBcDaeipkFzeo\nzndAgpegydKSNTF4QK9iTYobTIwsYfGuS8rV21zE2saLM0CE3T90aHYB/wARAQAB\ntD1DYW5vbmljYWwgQ2xvdWQgQXJjaGl2ZSBTaWduaW5nIEtleSA8ZnRwbWFzdGVy\nQGNhbm9uaWNhbC5jb20+iQI3BBMBCAAhBQJQKkpYAhsDBQsJCAcDBRUKCQgLBRYC\nAwEAAh4BAheAAAoJEF7bG2LsSSbqKxkQAIKtgImrk02YCDldg6tLt3b69ZK0kIVI\n3Xso/zCBZbrYFmgGQEFHAa58mIgpv5GcgHHxWjpX3n4tu2RM9EneKvFjFBstTTgo\nyuCgFr7iblvs/aMW4jFJAiIbmjjXWVc0CVB/JlLqzBJ/MlHdR9OWmojN9ZzoIA+i\n+tWlypgUot8iIxkR6JENxit5v9dN8i6anmnWybQ6PXFMuNi6GzQ0JgZIVs37n0ks\n2wh0N8hBjAKuUgqu4MPMwvNtz8FxEzyKwLNSMnjLAhzml/oje/Nj1GBB8roj5dmw\n7PSul5pAqQ5KTaXzl6gJN5vMEZzO4tEoGtRpA0/GTSXIlcx/SGkUK5+lqdQIMdyS\nn8bImU6V6rDSoOaI9YWHZtpv5WeUsNTdf68jZsFCRD+2+NEmIqBVm11yhmUoasC6\ndYw5l9P/PBdwmFm6NBUSEwxb+ROfpL1ICaZk9Jy++6akxhY//+cYEPLin02r43Z3\no5Piqujrs1R2Hs7kX84gL5SlBzTM4Ed+ob7KVtQHTefpbO35bQllkPNqfBsC8AIC\n8xvTP2S8FicYOPATEuiRWs7Kn31TWC2iwswRKEKVRmN0fdpu/UPdMikyoNu9szBZ\nRxvkRAezh3WheJ6MW6Fmg9d+uTFJohZt5qHdpxYa4beuN4me8LF0TYzgfEbFT6b9\nD6IyTFoT0Leq\n=h9Vs\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:19:42,375 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Add apt extra conf] ************************************
2025-03-30 18:19:43,722 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:44,971 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:44,974 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:45,008 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:46,087 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:46,095 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update Apt cache] **************************************
2025-03-30 18:19:46,144 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:19:46,173 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:46,210 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:19:46,230 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:46,250 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:19:46,260 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Including configure_metal_hosts tasks] *****************
2025-03-30 18:19:46,310 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:19:46,346 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:46,376 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:19:46,398 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:46,425 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:19:46,435 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Decreasing tcp_retries2 sysctl] ************************
2025-03-30 18:19:46,944 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:46,980 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:47,465 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:47,492 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:47,909 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:47,916 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Install distro packages] *******************************
2025-03-30 18:19:50,767 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:50,809 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:52,870 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:53,358 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:54,719 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:54,727 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Install user defined extra distro packages] ************
2025-03-30 18:19:54,767 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:19:54,798 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:54,819 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:19:54,825 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:54,893 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:19:54,904 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Ensure ssh directory] **********************************
2025-03-30 18:19:55,451 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:55,536 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:55,950 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:56,070 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:56,423 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:56,432 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Update SSH keys] ***************************************
2025-03-30 18:19:56,483 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:19:56,514 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:56,544 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:19:56,562 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:56,589 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:19:56,600 p=58554 u=vagrant n=ansible | TASK [Including PKI role] ******************************************************
2025-03-30 18:19:56,823 p=58554 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:19:56,896 p=58554 u=vagrant n=ansible | TASK [pki : Include standalone CA variables] ***********************************
2025-03-30 18:19:56,970 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:19:57,011 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:19:57,052 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:19:57,065 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:19:57,100 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:19:57,111 p=58554 u=vagrant n=ansible | TASK [pki : Install certificate authorities] ***********************************
2025-03-30 18:19:57,357 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/install_ca.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:19:57,374 p=58554 u=vagrant n=ansible | TASK [pki : Slurp up CA certificates from pki setup host (localhost)] **********
2025-03-30 18:19:57,775 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'name': 'ExampleCorpRoot'})
2025-03-30 18:19:57,788 p=58554 u=vagrant n=ansible | TASK [pki : Copy CA certificates to target host] *******************************
2025-03-30 18:19:59,083 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 18:19:59,086 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 18:20:00,317 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 18:20:00,450 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 18:20:01,551 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"dest": "/usr/local/share/ca-certificates//ExampleCorpRoot.crt"})
2025-03-30 18:20:01,564 p=58554 u=vagrant n=ansible | TASK [pki : Update CA store] ***************************************************
2025-03-30 18:20:01,612 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:20:01,643 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:20:01,674 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:20:01,693 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:20:01,711 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:20:01,747 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_gitconfig tasks] *******************
2025-03-30 18:20:01,876 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/openstack_hosts/tasks/openstack_gitconfig.yml for controller-galera-container-f800b10b, controller-utility-container-7e5b64c5, controller-memcached-container-71b4149f, controller-rabbit-mq-container-6f8ad97c, controller-repo-container-79f4553f
2025-03-30 18:20:01,972 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Get git version] ***************************************
2025-03-30 18:20:02,467 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:20:02,494 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:20:02,929 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:20:02,983 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:20:03,426 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:20:03,442 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is installed] ****************
2025-03-30 18:20:04,265 p=58554 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:20:04,300 p=58554 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:20:04,949 p=58554 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:20:04,951 p=58554 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:20:05,444 p=58554 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:20:05,453 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Configure git safe directories] ************************
2025-03-30 18:20:05,516 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:20:05,570 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:20:05,594 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:20:05,611 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:20:05,645 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:20:05,656 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Write git config when git is not installed] ************
2025-03-30 18:20:05,704 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:20:05,732 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:20:05,757 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:20:05,762 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:20:05,781 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:20:05,789 p=58554 u=vagrant n=ansible | TASK [openstack_hosts : Including openstack_hosts_systemd tasks] ***************
2025-03-30 18:20:05,834 p=58554 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:20:05,874 p=58554 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:20:05,895 p=58554 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:20:05,900 p=58554 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:20:05,925 p=58554 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:20:06,059 p=58554 u=vagrant n=ansible | PLAY [Gather security hardening facts] *****************************************
2025-03-30 18:20:06,127 p=58554 u=vagrant n=ansible | TASK [Gather additional facts] *************************************************
2025-03-30 18:20:06,195 p=58554 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller
2025-03-30 18:20:06,213 p=58554 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] **************
2025-03-30 18:20:07,809 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:07,992 p=58554 u=vagrant n=ansible | PLAY [Apply security hardening configurations] *********************************
2025-03-30 18:20:08,053 p=58554 u=vagrant n=ansible | TASK [Include security hardening role] *****************************************
2025-03-30 18:20:08,686 p=58554 u=vagrant n=ansible | included: ansible-hardening for controller
2025-03-30 18:20:08,707 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Gather variables for each operating system] **********
2025-03-30 18:20:08,814 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:08,832 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for check/audit mode] **************************
2025-03-30 18:20:09,244 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:09,263 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if we are booting with EFI or UEFI] *****
2025-03-30 18:20:09,335 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:09,355 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set facts] *******************************************
2025-03-30 18:20:09,423 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:09,452 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if grub is present on the remote node] *********
2025-03-30 18:20:09,860 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:09,877 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Create temporary directory to hold any temporary files] ***
2025-03-30 18:20:10,527 p=58554 u=vagrant n=ansible | changed: [controller]
2025-03-30 18:20:10,546 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set a fact for the temporary directory] **************
2025-03-30 18:20:10,595 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:10,622 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Verify all installed RPM packages] *******************
2025-03-30 18:20:10,661 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:10,679 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Locate top level directories to check for .shosts] ***
2025-03-30 18:20:10,714 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:10,735 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for .shosts or shosts.equiv files] *************
2025-03-30 18:20:10,766 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:10,865 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all users on the system] ***********
2025-03-30 18:20:11,455 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:11,479 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Get user data for all interactive users on the system] ***
2025-03-30 18:20:11,894 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:11,914 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Install EPEL repository] *****************************
2025-03-30 18:20:11,949 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:11,974 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Add packages based on STIG requirements] *************
2025-03-30 18:20:13,936 p=58554 u=vagrant n=ansible | ok: [controller] => (item=present)
2025-03-30 18:20:13,957 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove packages based on STIG requirements] **********
2025-03-30 18:20:15,294 p=58554 u=vagrant n=ansible | ok: [controller] => (item=absent)
2025-03-30 18:20:15,315 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Including OS-specific tasks] *************************
2025-03-30 18:20:15,406 p=58554 u=vagrant n=ansible | included: /etc/ansible/roles/ansible-hardening/tasks/rhel7stig/apt.yml for controller
2025-03-30 18:20:15,582 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure debsums is installed] *************************
2025-03-30 18:20:15,614 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:15,637 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Gather debsums report] *******************************
2025-03-30 18:20:15,667 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:15,691 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Get files with invalid checksums (apt)] ****
2025-03-30 18:20:15,719 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:15,739 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - Create comma-separated list] ***************
2025-03-30 18:20:15,768 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:15,792 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71855 - The cryptographic hash of system files and commands must match vendor values (apt)] ***
2025-03-30 18:20:15,828 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:15,848 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Search for AllowUnauthenticated in /etc/apt/apt.conf.d/] ***
2025-03-30 18:20:16,253 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:16,270 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71977 - Package management tool must verify authenticity of packages] ***
2025-03-30 18:20:16,308 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:16,333 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71979 - Package management tool must verify authenticity of locally-installed packages] ***
2025-03-30 18:20:16,744 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:16,763 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71987 - Clean requirements/dependencies when removing packages (dpkg)] ***
2025-03-30 18:20:16,795 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:16,823 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Enable automatic package updates (apt)] **************
2025-03-30 18:20:16,867 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:16,889 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/security/pwquality.conf exists] ********
2025-03-30 18:20:17,359 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:17,382 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set password quality requirements] *******************
2025-03-30 18:20:17,884 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:17,902 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for SHA512 password storage in PAM] ************
2025-03-30 18:20:18,483 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:18,510 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Print warning if PAM is not using SHA512 for password storage] ***
2025-03-30 18:20:18,574 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "PAM is not using SHA512 for password storage. This is a security issue.\n"
}
2025-03-30 18:20:18,599 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure libuser is storing passwords using SHA512] ****
2025-03-30 18:20:18,641 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:18,660 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set minimum password lifetime limit to 24 hours for interactive accounts] ***
2025-03-30 18:20:18,727 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,741 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,756 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,774 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,781 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:18,803 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set maximum password lifetime limit to 60 days for interactive accounts] ***
2025-03-30 18:20:18,884 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,901 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,920 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,934 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:18,943 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:18,964 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure that users cannot reuse one of their last 5 passwords] ***
2025-03-30 18:20:19,009 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:19,033 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure accounts are disabled if the password expires] ***
2025-03-30 18:20:19,063 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:19,091 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Apply shadow-utils configurations] *******************
2025-03-30 18:20:19,542 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'ENCRYPT_METHOD', 'value': 'SHA512', 'stig_id': 'V-71921', 'os_family': 'all'})
2025-03-30 18:20:19,552 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MIN_DAYS', 'value': '', 'stig_id': 'V-71925', 'os_family': 'all'}) 
2025-03-30 18:20:19,561 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'PASS_MAX_DAYS', 'value': '', 'stig_id': 'V-71929', 'os_family': 'all'}) 
2025-03-30 18:20:19,579 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'FAIL_DELAY', 'value': '4', 'stig_id': 'V-71951', 'os_family': 'RedHat'}) 
2025-03-30 18:20:19,587 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'UMASK', 'value': '', 'stig_id': 'V-71995', 'os_family': 'all'}) 
2025-03-30 18:20:19,967 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'parameter': 'CREATE_HOME', 'value': 'yes', 'stig_id': 'V-72013', 'os_family': 'all'})
2025-03-30 18:20:19,996 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for groups in /etc/passwd that are not in /etc/group] ***
2025-03-30 18:20:20,059 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:20,080 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Get all accounts with UID 0] *************************
2025-03-30 18:20:20,518 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:20,542 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Print warnings for non-root users with UID 0] ********
2025-03-30 18:20:20,571 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:20,594 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for local interactive users without a home directory assigned] ***
2025-03-30 18:20:20,658 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:20,679 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check each user to see if its home directory exists on the filesystem] ***
2025-03-30 18:20:21,158 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'root', 'uid': 0, 'gid': 0, 'gecos': 'root', 'dir': '/root', 'shell': '/bin/bash', 'group': {'name': 'root', 'passwd': 'x', 'gid': 0}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:21,544 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'daemon', 'uid': 1, 'gid': 1, 'gecos': 'daemon', 'dir': '/usr/sbin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:21,935 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'bin', 'uid': 2, 'gid': 2, 'gecos': 'bin', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'bin', 'passwd': 'x', 'gid': 2}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:22,402 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sys', 'uid': 3, 'gid': 3, 'gecos': 'sys', 'dir': '/dev', 'shell': '/usr/sbin/nologin', 'group': {'name': 'sys', 'passwd': 'x', 'gid': 3}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:22,804 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sync', 'uid': 4, 'gid': 65534, 'gecos': 'sync', 'dir': '/bin', 'shell': '/bin/sync', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:23,221 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'games', 'uid': 5, 'gid': 60, 'gecos': 'games', 'dir': '/usr/games', 'shell': '/usr/sbin/nologin', 'group': {'name': 'games', 'passwd': 'x', 'gid': 60}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:23,667 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'man', 'uid': 6, 'gid': 12, 'gecos': 'man', 'dir': '/var/cache/man', 'shell': '/usr/sbin/nologin', 'group': {'name': 'man', 'passwd': 'x', 'gid': 12}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:24,123 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lp', 'uid': 7, 'gid': 7, 'gecos': 'lp', 'dir': '/var/spool/lpd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'lp', 'passwd': 'x', 'gid': 7}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:24,536 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'mail', 'uid': 8, 'gid': 8, 'gecos': 'mail', 'dir': '/var/mail', 'shell': '/usr/sbin/nologin', 'group': {'name': 'mail', 'passwd': 'x', 'gid': 8}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:24,883 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'news', 'uid': 9, 'gid': 9, 'gecos': 'news', 'dir': '/var/spool/news', 'shell': '/usr/sbin/nologin', 'group': {'name': 'news', 'passwd': 'x', 'gid': 9}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:25,271 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uucp', 'uid': 10, 'gid': 10, 'gecos': 'uucp', 'dir': '/var/spool/uucp', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uucp', 'passwd': 'x', 'gid': 10}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:25,640 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'proxy', 'uid': 13, 'gid': 13, 'gecos': 'proxy', 'dir': '/bin', 'shell': '/usr/sbin/nologin', 'group': {'name': 'proxy', 'passwd': 'x', 'gid': 13}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:26,017 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'www-data', 'uid': 33, 'gid': 33, 'gecos': 'www-data', 'dir': '/var/www', 'shell': '/usr/sbin/nologin', 'group': {'name': 'www-data', 'passwd': 'x', 'gid': 33}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:26,406 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'backup', 'uid': 34, 'gid': 34, 'gecos': 'backup', 'dir': '/var/backups', 'shell': '/usr/sbin/nologin', 'group': {'name': 'backup', 'passwd': 'x', 'gid': 34}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:26,816 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'list', 'uid': 38, 'gid': 38, 'gecos': 'Mailing List Manager', 'dir': '/var/list', 'shell': '/usr/sbin/nologin', 'group': {'name': 'list', 'passwd': 'x', 'gid': 38}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:27,192 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'irc', 'uid': 39, 'gid': 39, 'gecos': 'ircd', 'dir': '/run/ircd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'irc', 'passwd': 'x', 'gid': 39}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:27,545 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'gnats', 'uid': 41, 'gid': 41, 'gecos': 'Gnats Bug-Reporting System (admin)', 'dir': '/var/lib/gnats', 'shell': '/usr/sbin/nologin', 'group': {'name': 'gnats', 'passwd': 'x', 'gid': 41}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:27,922 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:28,431 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-network', 'uid': 100, 'gid': 102, 'gecos': 'systemd Network Management,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-network', 'passwd': 'x', 'gid': 102}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:28,818 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-resolve', 'uid': 101, 'gid': 103, 'gecos': 'systemd Resolver,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-resolve', 'passwd': 'x', 'gid': 103}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:29,202 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'messagebus', 'uid': 102, 'gid': 105, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'messagebus', 'passwd': 'x', 'gid': 105}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:29,575 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'systemd-timesync', 'uid': 103, 'gid': 106, 'gecos': 'systemd Time Synchronization,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'systemd-timesync', 'passwd': 'x', 'gid': 106}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:29,981 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'syslog', 'uid': 104, 'gid': 111, 'gecos': '', 'dir': '/home/syslog', 'shell': '/usr/sbin/nologin', 'group': {'name': 'syslog', 'passwd': 'x', 'gid': 111}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:30,359 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': '_apt', 'uid': 105, 'gid': 65534, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:30,740 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tss', 'uid': 106, 'gid': 112, 'gecos': 'TPM software stack,,,', 'dir': '/var/lib/tpm', 'shell': '/bin/false', 'group': {'name': 'tss', 'passwd': 'x', 'gid': 112}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:31,142 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'uuidd', 'uid': 107, 'gid': 113, 'gecos': '', 'dir': '/run/uuidd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'uuidd', 'passwd': 'x', 'gid': 113}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:31,538 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'tcpdump', 'uid': 108, 'gid': 114, 'gecos': '', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'tcpdump', 'passwd': 'x', 'gid': 114}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:31,931 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'sshd', 'uid': 109, 'gid': 65534, 'gecos': '', 'dir': '/run/sshd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:32,319 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'pollinate', 'uid': 110, 'gid': 1, 'gecos': '', 'dir': '/var/cache/pollinate', 'shell': '/bin/false', 'group': {'name': 'daemon', 'passwd': 'x', 'gid': 1}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:32,683 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'landscape', 'uid': 111, 'gid': 116, 'gecos': '', 'dir': '/var/lib/landscape', 'shell': '/usr/sbin/nologin', 'group': {'name': 'landscape', 'passwd': 'x', 'gid': 116}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:33,052 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'fwupd-refresh', 'uid': 112, 'gid': 117, 'gecos': 'fwupd-refresh user,,,', 'dir': '/run/systemd', 'shell': '/usr/sbin/nologin', 'group': {'name': 'fwupd-refresh', 'passwd': 'x', 'gid': 117}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:33,443 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:33,811 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:34,235 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxd', 'uid': 999, 'gid': 100, 'gecos': '', 'dir': '/var/snap/lxd/common/lxd', 'shell': '/bin/false', 'group': {'name': 'users', 'passwd': 'x', 'gid': 100}, 'shadow': {'last_changed': 20176, 'min_days': -1, 'max_days': -1, 'warn_days': -1, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:34,622 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'dnsmasq', 'uid': 113, 'gid': 65534, 'gecos': 'dnsmasq,,,', 'dir': '/var/lib/misc', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:34,995 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'lxc-dnsmasq', 'uid': 114, 'gid': 121, 'gecos': 'LXC dnsmasq', 'dir': '/var/lib/lxc', 'shell': '/bin/false', 'group': {'name': 'lxc-dnsmasq', 'passwd': 'x', 'gid': 121}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:35,412 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': '_chrony', 'uid': 115, 'gid': 122, 'gecos': 'Chrony daemon,,,', 'dir': '/var/lib/chrony', 'shell': '/usr/sbin/nologin', 'group': {'name': '_chrony', 'passwd': 'x', 'gid': 122}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:35,845 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'postfix', 'uid': 116, 'gid': 124, 'gecos': '', 'dir': '/var/spool/postfix', 'shell': '/usr/sbin/nologin', 'group': {'name': 'postfix', 'passwd': 'x', 'gid': 124}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}})
2025-03-30 18:20:36,031 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Print warning for users with an assigned home directory that does not exist] ***
2025-03-30 18:20:36,128 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "These users have a home directory assigned, but the directory does not exist:\nlp (/var/spool/lpd does not exist)\nnews (/var/spool/news does not exist)\nuucp (/var/spool/uucp does not exist)\nwww-data (/var/www does not exist)\nlist (/var/list does not exist)\nirc (/run/ircd does not exist)\ngnats (/var/lib/gnats does not exist)\nnobody (/nonexistent does not exist)\nmessagebus (/nonexistent does not exist)\nsyslog (/home/syslog does not exist)\n_apt (/nonexistent does not exist)\ntcpdump (/nonexistent does not exist)\n"
}
2025-03-30 18:20:36,153 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Use pwquality when passwords are changed or created] ***
2025-03-30 18:20:36,180 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:36,206 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Verify that AIDE configuration directory exists] *****
2025-03-30 18:20:36,602 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide/aide.conf.d)
2025-03-30 18:20:36,953 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/aide.conf)
2025-03-30 18:20:36,975 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Exclude certain directories from AIDE] ***************
2025-03-30 18:20:37,887 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:37,905 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (Ubuntu)] ***
2025-03-30 18:20:38,315 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:38,337 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Configure AIDE to verify additional properties (SUSE)] ***
2025-03-30 18:20:38,370 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:38,389 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if AIDE database is already in place] ***
2025-03-30 18:20:38,767 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:38,786 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Initialize AIDE (this will take a few minutes)] ******
2025-03-30 18:20:38,828 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:38,851 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Move AIDE database into place] ***********************
2025-03-30 18:20:38,893 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:38,913 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Create AIDE cron job] ********************************
2025-03-30 18:20:38,951 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:38,973 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Verify that auditd.conf exists] **********************
2025-03-30 18:20:39,424 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:39,446 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Verify that audisp-remote.conf exists] ***************
2025-03-30 18:20:39,830 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:39,855 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72083 - The operating system must off-load audit records onto a different system or media from the system being audited] ***
2025-03-30 18:20:39,896 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:39,917 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72085 - The operating system must encrypt the transfer of audit records off-loaded onto a different system or media from the system being audited] ***
2025-03-30 18:20:39,957 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:39,977 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Get valid system architectures for audit rules] ******
2025-03-30 18:20:40,028 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:40,055 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove system default audit.rules file] **************
2025-03-30 18:20:40,482 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:40,504 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove old RHEL 6 audit rules file] ******************
2025-03-30 18:20:40,942 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:40,962 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Deploy rules for auditd based on STIG requirements] ***
2025-03-30 18:20:42,055 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:42,080 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Adjust auditd/audispd configurations] ****************
2025-03-30 18:20:42,163 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'disk_full_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-30 18:20:42,174 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'network_failure_action', 'value': 'syslog', 'config': '/etc/audisp/audisp-remote.conf'}) 
2025-03-30 18:20:42,185 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left', 'value': '9907', 'config': '/etc/audit/auditd.conf'}) 
2025-03-30 18:20:42,196 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'space_left_action', 'value': 'email', 'config': '/etc/audit/auditd.conf'}) 
2025-03-30 18:20:42,206 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'parameter': 'action_mail_acct', 'value': 'root', 'config': '/etc/audit/auditd.conf'}) 
2025-03-30 18:20:42,209 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:42,230 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure auditd is running and enabled at boot time] ***
2025-03-30 18:20:43,134 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:43,154 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set pam_faildelay configuration on Ubuntu] ***********
2025-03-30 18:20:43,619 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:43,643 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Debian/Ubuntu)] ***
2025-03-30 18:20:44,088 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:44,110 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (Red Hat)] ***
2025-03-30 18:20:44,159 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-auth']) 
2025-03-30 18:20:44,168 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=['auth', '/etc/pam.d/common-password']) 
2025-03-30 18:20:44,182 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-auth']) 
2025-03-30 18:20:44,195 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=['password', '/etc/pam.d/common-password']) 
2025-03-30 18:20:44,198 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:44,220 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users with blank or null passwords from authenticating (SUSE)] ***
2025-03-30 18:20:44,262 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-auth) 
2025-03-30 18:20:44,272 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/pam.d/common-password) 
2025-03-30 18:20:44,277 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:44,306 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Lock accounts after three failed login attempts a 15 minute period] ***
2025-03-30 18:20:44,342 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:44,361 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for 'nopasswd' in sudoers files] ***************
2025-03-30 18:20:44,766 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:44,784 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71947 - Users must provide a password for privilege escalation.] ***
2025-03-30 18:20:44,842 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The 'NOPASSWD' directive was found in the sudoers configuration files. Remove the directive to ensure that all users must provide a password to run commands as the root user.\n"
}
2025-03-30 18:20:44,859 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for '!authenticate' in sudoers files] **********
2025-03-30 18:20:45,300 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:45,323 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71949 - Users must re-authenticate for privilege escalation.] ***
2025-03-30 18:20:45,364 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:45,384 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if sssd.conf exists] ***************************
2025-03-30 18:20:45,790 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:45,809 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if GRUB2 custom file exists] *******************
2025-03-30 18:20:46,229 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:46,250 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Define password options for grub] ********************
2025-03-30 18:20:46,287 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:46,312 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set CLASS for grub file] *****************************
2025-03-30 18:20:46,348 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:46,369 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72217 - The operating system must limit the number of concurrent sessions to 10 for all accounts and/or account types.] ***
2025-03-30 18:20:46,412 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:46,525 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for pam_lastlog in PAM configuration] **********
2025-03-30 18:20:46,920 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:46,938 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72275 - Display date/time of last logon after logon] ***
2025-03-30 18:20:46,966 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:46,985 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure .shosts find has finished] ********************
2025-03-30 18:20:47,025 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,049 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove .shosts or shosts.equiv files] ****************
2025-03-30 18:20:47,097 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,121 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Get packages with incorrect file permissions or ownership] ***
2025-03-30 18:20:47,162 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,182 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71849 - Reset file permissions/ownership to vendor values] ***
2025-03-30 18:20:47,219 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,241 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid owner] ***
2025-03-30 18:20:47,271 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,294 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72007 - All files and directories must have a valid owner.] ***
2025-03-30 18:20:47,342 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,360 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Search for files/directories with an invalid group owner] ***
2025-03-30 18:20:47,393 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,414 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72009 - All files and directories must have a valid group owner.] ***
2025-03-30 18:20:47,460 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,483 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set proper owner, group owner, and permissions on home directories] ***
2025-03-30 18:20:47,552 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'nobody', 'uid': 65534, 'gid': 65534, 'gecos': 'nobody', 'dir': '/nonexistent', 'shell': '/usr/sbin/nologin', 'group': {'name': 'nogroup', 'passwd': 'x', 'gid': 65534}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:47,562 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'vagrant', 'uid': 1000, 'gid': 1000, 'gecos': ',,,', 'dir': '/home/vagrant', 'shell': '/bin/bash', 'group': {'name': 'vagrant', 'passwd': 'x', 'gid': 1000}, 'shadow': {'last_changed': 20126, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:47,574 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'ubuntu', 'uid': 1001, 'gid': 1001, 'gecos': 'Ubuntu', 'dir': '/home/ubuntu', 'shell': '/bin/bash', 'group': {'name': 'ubuntu', 'passwd': 'x', 'gid': 1001}, 'shadow': {'last_changed': 20176, 'min_days': 0, 'max_days': 99999, 'warn_days': 7, 'inact_days': -1, 'expire_days': -1}}) 
2025-03-30 18:20:47,577 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,596 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Find all world-writable directories] *****************
2025-03-30 18:20:47,627 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,648 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72047 - All world-writable directories must be group-owned by root, sys, bin, or an application group.] ***
2025-03-30 18:20:47,693 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:47,716 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if /etc/cron.allow exists] *********************
2025-03-30 18:20:48,116 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:48,135 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set owner/group owner on /etc/cron.allow] ************
2025-03-30 18:20:48,184 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:48,203 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if gdm is installed and configured] ************
2025-03-30 18:20:48,625 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:48,648 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71953 - The operating system must not allow an unattended or automatic logon to the system via a graphical user interface] ***
2025-03-30 18:20:48,677 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:48,695 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71955 - The operating system must not allow guest logon to the system.] ***
2025-03-30 18:20:48,726 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:48,748 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for dconf profiles] ****************************
2025-03-30 18:20:49,191 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:49,217 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Create a user profile in dconf] **********************
2025-03-30 18:20:49,245 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:49,264 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Create dconf directories] ****************************
2025-03-30 18:20:49,300 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/) 
2025-03-30 18:20:49,304 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/locks) 
2025-03-30 18:20:49,311 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/) 
2025-03-30 18:20:49,312 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:49,333 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Configure graphical session locking] *****************
2025-03-30 18:20:49,367 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:49,386 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Prevent users from changing graphical session locking configurations] ***
2025-03-30 18:20:49,415 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:49,439 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM profile for displaying a login banner] ***
2025-03-30 18:20:49,467 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:49,486 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Create a GDM keyfile for machine-wide settings] ******
2025-03-30 18:20:49,522 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/gdm.d/01-banner-message) 
2025-03-30 18:20:49,525 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/dconf/db/local.d/01-banner-message) 
2025-03-30 18:20:49,527 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:49,546 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71983 - USB mass storage must be disabled.] ********
2025-03-30 18:20:49,942 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:49,965 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set sysctl configurations] ***************************
2025-03-30 18:20:50,416 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-30 18:20:50,820 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_source_route', 'value': 0, 'enabled': True})
2025-03-30 18:20:51,219 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.icmp_echo_ignore_broadcasts', 'value': 1, 'enabled': True})
2025-03-30 18:20:51,618 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.all.send_redirects', 'value': 0, 'enabled': True})
2025-03-30 18:20:52,171 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.send_redirects', 'value': 0, 'enabled': True})
2025-03-30 18:20:52,179 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv4.ip_forward', 'value': 0, 'enabled': False}) 
2025-03-30 18:20:52,570 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv6.conf.all.accept_source_route', 'value': 0, 'enabled': True})
2025-03-30 18:20:52,954 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'net.ipv4.conf.default.accept_redirects', 'value': 0, 'enabled': True})
2025-03-30 18:20:53,636 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'kernel.randomize_va_space', 'value': 2, 'enabled': True})
2025-03-30 18:20:53,644 p=58554 u=vagrant n=ansible | skipping: [controller] => (item={'name': 'net.ipv6.conf.all.disable_ipv6', 'value': 1, 'enabled': False}) 
2025-03-30 18:20:53,674 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check kdump service] *********************************
2025-03-30 18:20:54,104 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:54,124 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72057 - Kernel core dumps must be disabled unless needed.] ***
2025-03-30 18:20:54,152 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:54,175 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if FIPS is enabled] ****************************
2025-03-30 18:20:54,213 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:54,233 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Print a warning if FIPS isn't enabled] ***************
2025-03-30 18:20:54,267 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:54,289 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-77821 - Datagram Congestion Control Protocol (DCCP) kernel module must be disabled] ***
2025-03-30 18:20:55,251 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:55,272 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check apparmor_status output] ************************
2025-03-30 18:20:55,710 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:55,730 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if apparmor is running] ************************
2025-03-30 18:20:56,170 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:56,190 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is enabled at boot time] *************
2025-03-30 18:20:56,901 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:57,019 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure AppArmor is running] **************************
2025-03-30 18:20:57,752 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:57,769 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure SELinux is in enforcing mode on the next reboot] ***
2025-03-30 18:20:57,802 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:57,823 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Relabel files on next boot if SELinux mode changed] ***
2025-03-30 18:20:57,860 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:57,896 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for unlabeled device files] ********************
2025-03-30 18:20:57,932 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:57,951 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72039 - All system device files must be correctly labeled to prevent unauthorized modification.] ***
2025-03-30 18:20:57,984 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:58,003 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check autofs service] ********************************
2025-03-30 18:20:58,399 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:58,421 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71985 - File system automounter must be disabled unless required.] ***
2025-03-30 18:20:58,449 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:20:58,478 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***
2025-03-30 18:20:59,201 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:20:59,223 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-71993 - The x86 Ctrl-Alt-Delete key sequence must be disabled] ***
2025-03-30 18:21:00,376 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:00,397 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for /home on mounted filesystem] ***************
2025-03-30 18:21:00,471 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /home is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 18:21:00,493 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var on mounted filesystem] ****************
2025-03-30 18:21:00,579 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 18:21:00,599 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for /var/log/audit on mounted filesystem] ******
2025-03-30 18:21:00,667 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /var/log/audit is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 18:21:00,688 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for /tmp on mounted filesystem] ****************
2025-03-30 18:21:00,757 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "The STIG requires that /tmp is on its own filesystem, but this system\ndoes not appear to be following the requirement.\n"
}
2025-03-30 18:21:00,781 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if syslog output is being sent to another server] ***
2025-03-30 18:21:01,194 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:01,214 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72209 - The system must send rsyslog output to a log aggregation server.] ***
2025-03-30 18:21:01,280 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Output from syslog must be sent to another server."
}
2025-03-30 18:21:01,301 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV is installed] ************************
2025-03-30 18:21:01,668 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:01,692 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove 'Example' line from ClamAV configuration files] ***
2025-03-30 18:21:01,727 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/freshclam.conf) 
2025-03-30 18:21:01,732 p=58554 u=vagrant n=ansible | skipping: [controller] => (item=/etc/clamd.d/scan.conf) 
2025-03-30 18:21:01,735 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:01,756 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Set ClamAV server type as socket] ********************
2025-03-30 18:21:01,784 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:01,808 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV socket directory exists] ***************
2025-03-30 18:21:01,837 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:01,861 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Allow automatic freshclam updates] *******************
2025-03-30 18:21:01,891 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:01,914 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if ClamAV update process is already running] ***
2025-03-30 18:21:02,312 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:02,336 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Update ClamAV database] ******************************
2025-03-30 18:21:02,366 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:02,390 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure ClamAV is running] ****************************
2025-03-30 18:21:02,418 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:02,439 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove old config block for V-72223 from openstack-ansible-security] ***
2025-03-30 18:21:02,831 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:02,852 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72223 - Set 10 minute timeout on communication sessions] ***
2025-03-30 18:21:03,250 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:03,269 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Start and enable chrony] *****************************
2025-03-30 18:21:04,028 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:04,056 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check if chrony configuration file exists] ***********
2025-03-30 18:21:04,512 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:04,533 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72269 - Synchronize system clock (configuration file)] ***
2025-03-30 18:21:05,467 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:05,487 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check firewalld status] ******************************
2025-03-30 18:21:05,905 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:05,926 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure firewalld is running and enabled] *************
2025-03-30 18:21:05,959 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:05,982 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Limit new TCP connections to 25/minute and allow bursting to 100] ***
2025-03-30 18:21:06,015 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:06,036 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Count nameserver entries in /etc/resolv.conf] ********
2025-03-30 18:21:06,443 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:06,467 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72281 - For systems using DNS resolution, at least two name servers must be configured.] ***
2025-03-30 18:21:06,539 p=58554 u=vagrant n=ansible | ok: [controller] => {
    "msg": "Two or more nameservers must be configured in /etc/resolv.conf.\nNameservers found: 1\n"
}
2025-03-30 18:21:06,558 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for interfaces in promiscuous mode] ************
2025-03-30 18:21:06,982 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:07,003 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72295 - Network interfaces must not be in promiscuous mode.] ***
2025-03-30 18:21:07,032 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:07,144 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for postfix configuration file] ****************
2025-03-30 18:21:07,559 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:07,580 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72297 - Prevent unrestricted mail relaying] ********
2025-03-30 18:21:08,016 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:08,038 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check for TFTP server configuration file] ************
2025-03-30 18:21:08,472 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:08,494 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check TFTP configuration mode] ***********************
2025-03-30 18:21:08,524 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:08,549 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72305 - TFTP must be configured to operate in secure mode] ***
2025-03-30 18:21:08,586 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:08,615 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Check to see if snmpd config contains public/private] ***
2025-03-30 18:21:09,058 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:09,084 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : V-72313 - Change SNMP community strings from default.] ***
2025-03-30 18:21:09,116 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:09,142 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Copy login warning banner] ***************************
2025-03-30 18:21:10,017 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:10,036 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Drop options from SSH config that we manage] *********
2025-03-30 18:21:10,510 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitEmptyPasswords', 'value': 'no', 'enabled': True, 'stig_id': 'V-71939 / RHEL-07-010440'})
2025-03-30 18:21:10,915 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitUserEnvironment', 'value': 'no', 'enabled': True, 'stig_id': 'V-71957'})
2025-03-30 18:21:11,273 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'HostbasedAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-71959'})
2025-03-30 18:21:11,621 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Ciphers', 'value': 'aes128-ctr,aes192-ctr,aes256-ctr', 'enabled': True, 'stig_id': 'V-72221'})
2025-03-30 18:21:11,971 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveInterval', 'value': 600, 'enabled': True, 'stig_id': 'V-72237'})
2025-03-30 18:21:12,381 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'ClientAliveCountMax', 'value': 0, 'enabled': True, 'stig_id': 'V-72241'})
2025-03-30 18:21:12,731 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintLastLog', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72245'})
2025-03-30 18:21:13,091 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PermitRootLogin', 'value': 'without-password', 'enabled': True, 'stig_id': 'V-72247'})
2025-03-30 18:21:13,435 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreUserKnownHosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72249 / V-72239'})
2025-03-30 18:21:13,789 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'IgnoreRhosts', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72243'})
2025-03-30 18:21:14,162 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'X11Forwarding', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72303'})
2025-03-30 18:21:14,537 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Protocol', 'value': 2, 'enabled': True, 'stig_id': 'V-72251'})
2025-03-30 18:21:14,918 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'MACs', 'value': 'hmac-sha2-256,hmac-sha2-512', 'enabled': True, 'stig_id': 'V-72253'})
2025-03-30 18:21:15,278 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'Compression', 'value': 'delayed', 'enabled': True, 'stig_id': 'V-72267'})
2025-03-30 18:21:15,641 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'KerberosAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-72261'})
2025-03-30 18:21:16,034 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'GSSAPIAuthentication', 'value': 'no', 'enabled': True, 'stig_id': 'V-204598'})
2025-03-30 18:21:16,412 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'StrictModes', 'value': 'yes', 'enabled': True, 'stig_id': 'V-72263'})
2025-03-30 18:21:16,770 p=58554 u=vagrant n=ansible | ok: [controller] => (item={'name': 'PrintMotd', 'value': 'yes', 'enabled': True, 'stig_id': 'V-71861'})
2025-03-30 18:21:16,817 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Adjust ssh server configuration based on STIG requirements] ***
2025-03-30 18:21:17,234 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:17,254 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Ensure sshd is enabled at boot time] *****************
2025-03-30 18:21:18,212 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:18,236 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing public ssh host keys] *************
2025-03-30 18:21:18,659 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:18,684 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Public host key files must have mode 0644 or less] ***
2025-03-30 18:21:19,142 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key.pub)
2025-03-30 18:21:19,558 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key.pub)
2025-03-30 18:21:19,991 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key.pub)
2025-03-30 18:21:20,019 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Determine existing private ssh host keys] ************
2025-03-30 18:21:20,540 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:20,561 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Private host key files must have mode 0600 or less] ***
2025-03-30 18:21:21,054 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ecdsa_key)
2025-03-30 18:21:21,440 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_ed25519_key)
2025-03-30 18:21:21,835 p=58554 u=vagrant n=ansible | ok: [controller] => (item=/etc/ssh/ssh_host_rsa_key)
2025-03-30 18:21:21,856 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Manage motd in pam.d] ********************************
2025-03-30 18:21:22,463 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:22,496 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Remove the temporary directory] **********************
2025-03-30 18:21:22,881 p=58554 u=vagrant n=ansible | ok: [controller]
2025-03-30 18:21:22,907 p=58554 u=vagrant n=ansible | TASK [ansible-hardening : Including contrib tasks] *****************************
2025-03-30 18:21:22,940 p=58554 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:23,055 p=58554 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 18:21:23,103 p=58554 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 18:21:23,104 p=58554 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 18:21:23,104 p=58554 u=vagrant n=ansible | controller                 : ok=173  changed=2    unreachable=0    failed=0    skipped=120  rescued=0    ignored=0   
2025-03-30 18:21:23,104 p=58554 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=96   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 18:21:23,104 p=58554 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 18:21:23,104 p=58554 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 18:21:23,104 p=58554 u=vagrant n=ansible | controller-repo-container-79f4553f : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 18:21:23,105 p=58554 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=93   changed=5    unreachable=0    failed=0    skipped=35   rescued=0    ignored=0   
2025-03-30 18:21:23,105 p=58554 u=vagrant n=ansible | localhost                  : ok=22   changed=0    unreachable=0    failed=0    skipped=25   rescued=0    ignored=0   
2025-03-30 18:21:23,910 p=62797 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 18:21:24,725 p=62797 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 18:21:26,503 p=62797 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 18:21:26,571 p=62797 u=vagrant n=ansible | PLAY [Gather unbound facts] ****************************************************
2025-03-30 18:21:26,571 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:21:26,576 p=62797 u=vagrant n=ansible | PLAY [Install unbound DNS resolvers] *******************************************
2025-03-30 18:21:26,576 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:21:26,587 p=62797 u=vagrant n=ansible | PLAY [Install unbound DNS resolver client configurations] **********************
2025-03-30 18:21:26,626 p=62797 u=vagrant n=ansible | TASK [Gathering Facts] *********************************************************
2025-03-30 18:21:54,020 p=62797 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Data could not be sent to remote host \"192.168.56.11\". Make sure this host can be reached over ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).\r\n", "unreachable": true}
2025-03-30 18:21:54,089 p=62797 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-30 18:21:54,141 p=62797 u=vagrant n=ansible | skipping: [controller]
2025-03-30 18:21:54,316 p=62797 u=vagrant n=ansible | PLAY [Gather haproxy facts] ****************************************************
2025-03-30 18:21:54,317 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:21:54,325 p=62797 u=vagrant n=ansible | PLAY [HAProxy base config] *****************************************************
2025-03-30 18:21:54,325 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:21:54,335 p=62797 u=vagrant n=ansible | PLAY [Gather repo facts] *******************************************************
2025-03-30 18:21:54,408 p=62797 u=vagrant n=ansible | PLAY [Setup repo servers] ******************************************************
2025-03-30 18:21:54,420 p=62797 u=vagrant n=ansible | TASK [End playbook] ************************************************************
2025-03-30 18:21:54,431 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:54,437 p=62797 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-30 18:21:54,541 p=62797 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-repo-container-79f4553f
2025-03-30 18:21:54,551 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-30 18:21:54,619 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:21:54,632 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-30 18:21:55,319 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-repo-container-79f4553f'})
2025-03-30 18:21:55,802 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/glusterd', 'mount_path': '/openstack/glusterd/controller-repo-container-79f4553f'})
2025-03-30 18:21:55,814 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-30 18:21:56,507 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-repo-container-79f4553f'})
2025-03-30 18:21:56,911 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/glusterd', 'mount_path': '/openstack/glusterd/controller-repo-container-79f4553f'})
2025-03-30 18:21:56,924 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-30 18:21:56,964 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:56,974 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-30 18:21:57,531 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-30 18:21:57,548 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-30 18:21:57,613 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:57,623 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-30 18:21:57,690 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:57,704 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-30 18:21:57,783 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:57,792 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-30 18:21:57,934 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:21:57,946 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-30 18:21:57,988 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,003 p=62797 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-30 18:21:58,071 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,114 p=62797 u=vagrant n=ansible | PLAY [Setup repo server gluster cluster] ***************************************
2025-03-30 18:21:58,142 p=62797 u=vagrant n=ansible | TASK [Create gluster cluster] **************************************************
2025-03-30 18:21:58,401 p=62797 u=vagrant n=ansible | included: openstack.osa.glusterfs for controller-repo-container-79f4553f
2025-03-30 18:21:58,407 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Gather variables for each operating system] ****
2025-03-30 18:21:58,519 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,528 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Enable extra repositories] *********************
2025-03-30 18:21:58,562 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,573 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Install gluster repo packages] *****************
2025-03-30 18:21:58,608 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,618 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 18:21:58,679 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"path": "/run/system", "owner": "root", "group": "root"}) 
2025-03-30 18:21:58,682 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,692 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 18:21:58,751 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"}) 
2025-03-30 18:21:58,753 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,765 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 18:21:58,828 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/systemd-tmpfiles-setup-dev.service.d", "owner": "root", "group": "root"}) 
2025-03-30 18:21:58,835 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:58,845 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 18:21:58,892 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-systemd-tmpfiles-setup-dev.conf"}) 
2025-03-30 18:21:58,896 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,018 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 18:21:59,059 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,072 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 18:21:59,142 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/systemd-tmpfiles-setup-dev.service.d/override.conf"}) 
2025-03-30 18:21:59,145 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,154 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 18:21:59,203 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,214 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 18:21:59,244 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,259 p=62797 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 18:21:59,303 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,317 p=62797 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 18:21:59,364 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "systemd-tmpfiles-setup-dev"}) 
2025-03-30 18:21:59,367 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,375 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 18:21:59,424 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:21:59,443 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Install glusterfs server packages] *************
2025-03-30 18:22:01,651 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:01,663 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Drop glusterfs-wait.sh script] *****************
2025-03-30 18:22:03,553 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:03,563 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 18:22:04,090 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-30 18:22:04,103 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 18:22:04,727 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-30 18:22:04,743 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 18:22:05,289 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"path": "/etc/systemd/system/glusterd.service.d", "owner": "root", "group": "root"})
2025-03-30 18:22:05,301 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 18:22:06,474 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-glusterd.conf"})
2025-03-30 18:22:06,486 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 18:22:06,533 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:06,542 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 18:22:07,808 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/glusterd.service.d/override.conf"})
2025-03-30 18:22:07,823 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 18:22:07,863 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:07,877 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 18:22:07,905 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:07,915 p=62797 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 18:22:07,981 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:07,990 p=62797 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 18:22:08,055 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-repo-container-79f4553f => (item={"service_name": "glusterd"})
2025-03-30 18:22:08,087 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load service glusterd] *********************************
2025-03-30 18:22:09,613 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={"service_name": "glusterd"})
2025-03-30 18:22:09,635 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load timer glusterd] ***********************************
2025-03-30 18:22:09,698 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item={"service_name": "glusterd"}) 
2025-03-30 18:22:09,701 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:09,710 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 18:22:09,762 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:09,780 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Configure systemd-tmpfiles to create /dev/fuse at boot] ***
2025-03-30 18:22:11,084 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:11,101 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Restart systemd-tmpfiles-setup-dev] ************
2025-03-30 18:22:11,151 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:11,160 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Start glusterfs server] ************************
2025-03-30 18:22:11,986 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:11,995 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Create gluster peers] **************************
2025-03-30 18:22:13,324 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:13,338 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Ensure glusterfs backing directory exists] *****
2025-03-30 18:22:13,827 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:13,839 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Check brick status] ****************************
2025-03-30 18:22:14,759 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:14,771 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Reset brick for a replaced node] ***************
2025-03-30 18:22:14,831 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=gluster volume reset-brick gfs-repo controller-repo-container-79f4553f:/gluster/bricks/1 start) 
2025-03-30 18:22:14,839 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f] => (item=gluster volume reset-brick gfs-repo controller-repo-container-79f4553f:/gluster/bricks/1 controller-repo-container-79f4553f:/gluster/bricks/1 commit force) 
2025-03-30 18:22:14,841 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:14,853 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Find existing peers' runtime hostnames] ********
2025-03-30 18:22:14,908 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:14,922 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Restart glusterfs server] **********************
2025-03-30 18:22:14,970 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:14,980 p=62797 u=vagrant n=ansible | TASK [openstack.osa.glusterfs : Create gluster volume] *************************
2025-03-30 18:22:16,272 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:16,320 p=62797 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:22:16,321 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:22:16,335 p=62797 u=vagrant n=ansible | PLAY [Setup repo servers] ******************************************************
2025-03-30 18:22:16,370 p=62797 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:22:16,419 p=62797 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-repo-container-79f4553f
2025-03-30 18:22:16,440 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:22:16,482 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:16,489 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:22:16,522 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:16,537 p=62797 u=vagrant n=ansible | TASK [repo_server : Gather variables for each operating system] ****************
2025-03-30 18:22:16,630 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:16,638 p=62797 u=vagrant n=ansible | TASK [repo_server : Create the system group] ***********************************
2025-03-30 18:22:17,441 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:17,453 p=62797 u=vagrant n=ansible | TASK [repo_server : Create the nginx system user] ******************************
2025-03-30 18:22:18,382 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:18,391 p=62797 u=vagrant n=ansible | TASK [Mount any remote volumes] ************************************************
2025-03-30 18:22:18,475 p=62797 u=vagrant n=ansible | included: systemd_mount for controller-repo-container-79f4553f
2025-03-30 18:22:18,485 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Gather variables for each operating system] **************
2025-03-30 18:22:18,570 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:18,580 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Including systemd_install tasks] *************************
2025-03-30 18:22:18,637 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_mount/tasks/systemd_install.yml for controller-repo-container-79f4553f
2025-03-30 18:22:18,651 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Download EPEL gpg keys] **********************************
2025-03-30 18:22:18,695 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:18,714 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Install EPEL gpg keys] ***********************************
2025-03-30 18:22:18,760 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:18,772 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Install the EPEL repository] *****************************
2025-03-30 18:22:18,818 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:18,833 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Install required distro packages for mounts] *************
2025-03-30 18:22:20,911 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:20,920 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Make boolean flag for setting up glusterfs] **************
2025-03-30 18:22:20,996 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:21,008 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Configure systemd-tmpfiles to create /dev/fuse at boot] ***
2025-03-30 18:22:22,164 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:22,172 p=62797 u=vagrant n=ansible | TASK [Apply systemctl overrides] ***********************************************
2025-03-30 18:22:22,214 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:22,228 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Restart systemd-tmpfiles-setup-dev] **********************
2025-03-30 18:22:22,297 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:22,312 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Including systemd_mounts tasks] **************************
2025-03-30 18:22:22,405 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_mount/tasks/systemd_mounts.yml for controller-repo-container-79f4553f => (item={'what': 'controller-repo-container-79f4553f:gfs-repo', 'where': '/var/www/repo', 'type': 'glusterfs', 'state': 'started', 'enabled': True})
2025-03-30 18:22:22,432 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Set mount facts] *****************************************
2025-03-30 18:22:22,504 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:22,515 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Escape mount service file name] **************************
2025-03-30 18:22:23,018 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:23,028 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Create mount target(s)] **********************************
2025-03-30 18:22:23,651 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:23,669 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Place mount credentials when required] *******************
2025-03-30 18:22:23,708 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:23,727 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Create systemd mount services(s)] ************************
2025-03-30 18:22:25,026 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:25,038 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Load or Unload mount(s)] *********************************
2025-03-30 18:22:26,106 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:26,120 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Set the state of the mount] ******************************
2025-03-30 18:22:26,687 p=62797 u=vagrant n=ansible | fatal: [controller-repo-container-79f4553f]: FAILED! => {"changed": false, "cmd": "systemctl reload-or-restart $(systemd-escape -p --suffix=\"mount\" \"/var/www/repo\")", "delta": "0:00:00.051770", "end": "2025-03-30 18:22:26.640220", "msg": "non-zero return code", "rc": 1, "start": "2025-03-30 18:22:26.588450", "stderr": "Job failed. See \"journalctl -xe\" for details.", "stderr_lines": ["Job failed. See \"journalctl -xe\" for details."], "stdout": "", "stdout_lines": []}
2025-03-30 18:22:26,698 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Set the state of the mount (fallback)] *******************
2025-03-30 18:22:27,510 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:27,519 p=62797 u=vagrant n=ansible | TASK [systemd_mount : Unload mount(s)] *****************************************
2025-03-30 18:22:27,560 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:27,583 p=62797 u=vagrant n=ansible | TASK [repo_server : Wait until mount will finish for /var/www] *****************
2025-03-30 18:22:28,089 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:28,103 p=62797 u=vagrant n=ansible | TASK [repo_server : File and directory setup (non-root user)] ******************
2025-03-30 18:22:28,656 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www'})
2025-03-30 18:22:29,139 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/.ssh', 'mode': '2700'})
2025-03-30 18:22:29,618 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo', 'mode': '0755'})
2025-03-30 18:22:30,117 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/links'})
2025-03-30 18:22:30,588 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/os-releases'})
2025-03-30 18:22:31,055 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/os-releases/30.0.2'})
2025-03-30 18:22:31,518 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/pools'})
2025-03-30 18:22:31,988 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/venvs'})
2025-03-30 18:22:32,472 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/www/repo/constraints'})
2025-03-30 18:22:32,967 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/apache2/sites-available'})
2025-03-30 18:22:33,433 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/lib/nginx', 'state': 'absent'})
2025-03-30 18:22:33,904 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/var/log/nginx', 'state': 'absent'})
2025-03-30 18:22:33,923 p=62797 u=vagrant n=ansible | TASK [repo_server : File and directory setup (root user)] **********************
2025-03-30 18:22:34,429 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/nginx/conf.d', 'state': 'absent'})
2025-03-30 18:22:34,903 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/nginx/sites-available', 'state': 'absent'})
2025-03-30 18:22:35,353 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'path': '/etc/nginx/sites-enabled', 'state': 'absent'})
2025-03-30 18:22:35,367 p=62797 u=vagrant n=ansible | TASK [repo_server : Remove nginx web server] ***********************************
2025-03-30 18:22:38,079 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:38,115 p=62797 u=vagrant n=ansible | TASK [repo_server : Install distro packages] ***********************************
2025-03-30 18:22:40,603 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:40,617 p=62797 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-30 18:22:40,659 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:40,670 p=62797 u=vagrant n=ansible | TASK [repo_server : Enable git automatic thread count detection] ***************
2025-03-30 18:22:41,495 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:41,505 p=62797 u=vagrant n=ansible | TASK [repo_server : Ensure apache2 MPM for Debian/Ubuntu] **********************
2025-03-30 18:22:42,420 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'mpm_worker', 'state': 'absent'})
2025-03-30 18:22:43,188 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'mpm_prefork', 'state': 'absent'})
2025-03-30 18:22:43,814 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'mpm_event', 'state': 'present'})
2025-03-30 18:22:43,827 p=62797 u=vagrant n=ansible | TASK [repo_server : Ensure apache2 MPM for EL] *********************************
2025-03-30 18:22:43,858 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:43,868 p=62797 u=vagrant n=ansible | TASK [repo_server : Enable apache2 modules] ************************************
2025-03-30 18:22:44,469 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'ssl', 'state': 'present'})
2025-03-30 18:22:44,999 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'rewrite', 'state': 'present'})
2025-03-30 18:22:45,576 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'headers', 'state': 'present'})
2025-03-30 18:22:46,109 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'name': 'deflate', 'state': 'present'})
2025-03-30 18:22:46,139 p=62797 u=vagrant n=ansible | TASK [repo_server : Disable default apache site] *******************************
2025-03-30 18:22:46,903 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=/etc/apache2/sites-enabled/000-default.conf)
2025-03-30 18:22:47,620 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=/etc/apache2/conf-enabled/other-vhosts-access-log.conf)
2025-03-30 18:22:47,637 p=62797 u=vagrant n=ansible | TASK [repo_server : Ensure Apache configuration] *******************************
2025-03-30 18:22:48,363 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=ServerName openstack-slushee)
2025-03-30 18:22:49,022 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item=ErrorLog syslog:daemon)
2025-03-30 18:22:49,034 p=62797 u=vagrant n=ansible | TASK [repo_server : Create Apache config] **************************************
2025-03-30 18:22:50,623 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'src': 'apache_ports.conf.j2', 'dest': '/etc/apache2/ports.conf', 'owner': 'root', 'group': 'root'})
2025-03-30 18:22:52,003 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'src': 'openstack_slushee.vhost.j2', 'dest': '/etc/apache2/sites-available/openstack_slushee.conf', 'owner': 'root', 'group': 'root'})
2025-03-30 18:22:53,321 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f] => (item={'src': 'apache_mpm.conf.j2', 'dest': '/etc/apache2/mods-available/mpm_event.conf', 'owner': 'root', 'group': 'root'})
2025-03-30 18:22:53,336 p=62797 u=vagrant n=ansible | TASK [repo_server : Enable repo site] ******************************************
2025-03-30 18:22:53,900 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:53,914 p=62797 u=vagrant n=ansible | TASK [repo_server : Remove Listen from Apache config] **************************
2025-03-30 18:22:54,546 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:54,555 p=62797 u=vagrant n=ansible | TASK [repo_server : Remove legacy authorized keys file] ************************
2025-03-30 18:22:55,199 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:22:55,207 p=62797 u=vagrant n=ansible | TASK [repo_server : Including repo_install_constraints tasks] ******************
2025-03-30 18:22:55,295 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/repo_server/tasks/repo_install_constraints.yml for controller-repo-container-79f4553f
2025-03-30 18:22:55,322 p=62797 u=vagrant n=ansible | TASK [repo_server : Ensure deploy host u-c directory exists] *******************
2025-03-30 18:22:55,834 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> localhost]
2025-03-30 18:22:55,847 p=62797 u=vagrant n=ansible | TASK [repo_server : Retrieve upper constraints using https] ********************
2025-03-30 18:22:58,416 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f -> localhost]
2025-03-30 18:22:58,431 p=62797 u=vagrant n=ansible | TASK [repo_server : Retrieve local filesystem upper constraints in CI] *********
2025-03-30 18:22:58,489 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:58,504 p=62797 u=vagrant n=ansible | TASK [repo_server : Copy local upper constraints content to a file in CI] ******
2025-03-30 18:22:58,551 p=62797 u=vagrant n=ansible | skipping: [controller-repo-container-79f4553f]
2025-03-30 18:22:58,563 p=62797 u=vagrant n=ansible | TASK [repo_server : Copy all constraints files from the deploy host to the first repo server] ***
2025-03-30 18:23:00,103 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:23:00,116 p=62797 u=vagrant n=ansible | TASK [repo_server : Create a symlink for constraints file] *********************
2025-03-30 18:23:00,689 p=62797 u=vagrant n=ansible | ok: [controller-repo-container-79f4553f]
2025-03-30 18:23:00,700 p=62797 u=vagrant n=ansible | TASK [repo_server : Flush handlers] ********************************************
2025-03-30 18:23:00,759 p=62797 u=vagrant n=ansible | PLAY [Gather memcached facts] **************************************************
2025-03-30 18:23:00,838 p=62797 u=vagrant n=ansible | PLAY [Install memcached] *******************************************************
2025-03-30 18:23:00,867 p=62797 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-30 18:23:00,973 p=62797 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-memcached-container-71b4149f
2025-03-30 18:23:00,983 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-30 18:23:01,054 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:01,067 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-30 18:23:01,642 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-30 18:23:01,659 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-30 18:23:02,196 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-memcached-container-71b4149f'})
2025-03-30 18:23:02,211 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-30 18:23:02,258 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:02,271 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-30 18:23:03,089 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-30 18:23:03,102 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-30 18:23:03,167 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,180 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-30 18:23:03,249 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,263 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-30 18:23:03,327 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,338 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-30 18:23:03,512 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,522 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-30 18:23:03,582 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,624 p=62797 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-30 18:23:03,721 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,740 p=62797 u=vagrant n=ansible | TASK [memcached_server : Gather variables for each operating system] ***********
2025-03-30 18:23:03,917 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:03,926 p=62797 u=vagrant n=ansible | TASK [memcached_server : Install distro packages] ******************************
2025-03-30 18:23:06,231 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:06,244 p=62797 u=vagrant n=ansible | TASK [memcached_server : Apply memcached config] *******************************
2025-03-30 18:23:07,655 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:07,665 p=62797 u=vagrant n=ansible | TASK [memcached_server : Override systemd service file] ************************
2025-03-30 18:23:07,714 p=62797 u=vagrant n=ansible | skipping: [controller-memcached-container-71b4149f]
2025-03-30 18:23:07,726 p=62797 u=vagrant n=ansible | TASK [memcached_server : Create memcached systemd service config dir] **********
2025-03-30 18:23:08,365 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:08,373 p=62797 u=vagrant n=ansible | TASK [memcached_server : Apply systemd options] ********************************
2025-03-30 18:23:09,808 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.limits.conf.j2', 'dest': 'limits.conf'})
2025-03-30 18:23:10,938 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.restart.conf.j2', 'dest': 'restart.conf'})
2025-03-30 18:23:12,042 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.slice.conf.j2', 'dest': 'slice.conf'})
2025-03-30 18:23:13,426 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f] => (item={'src': 'systemd.without-privatedevices.conf.j2', 'dest': 'without-privatedevices.conf'})
2025-03-30 18:23:13,439 p=62797 u=vagrant n=ansible | TASK [memcached_server : Configure soft file limits] ***************************
2025-03-30 18:23:14,004 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:14,015 p=62797 u=vagrant n=ansible | TASK [memcached_server : Configure hard file limits] ***************************
2025-03-30 18:23:14,535 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:14,543 p=62797 u=vagrant n=ansible | TASK [memcached_server : Flush handlers] ***************************************
2025-03-30 18:23:14,559 p=62797 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] **************
2025-03-30 18:23:15,773 p=62797 u=vagrant n=ansible | ok: [controller-memcached-container-71b4149f]
2025-03-30 18:23:15,817 p=62797 u=vagrant n=ansible | PLAY [Gather galera facts] *****************************************************
2025-03-30 18:23:15,846 p=62797 u=vagrant n=ansible | TASK [Gather additional facts] *************************************************
2025-03-30 18:23:15,892 p=62797 u=vagrant n=ansible | included: openstack.osa.gather_extra_facts for controller-galera-container-f800b10b
2025-03-30 18:23:15,898 p=62797 u=vagrant n=ansible | TASK [openstack.osa.gather_extra_facts : Gather additional facts] **************
2025-03-30 18:23:17,243 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:17,285 p=62797 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:23:17,286 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:23:17,299 p=62797 u=vagrant n=ansible | PLAY [Install galera server] ***************************************************
2025-03-30 18:23:17,319 p=62797 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-30 18:23:17,425 p=62797 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-galera-container-f800b10b
2025-03-30 18:23:17,504 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-30 18:23:17,574 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:17,583 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-30 18:23:18,179 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-30 18:23:18,670 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-30 18:23:18,683 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-30 18:23:19,668 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-galera-container-f800b10b'})
2025-03-30 18:23:20,432 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/lib/mysql', 'mount_path': '/openstack/controller-galera-container-f800b10b'})
2025-03-30 18:23:20,448 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-30 18:23:20,493 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:20,506 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-30 18:23:21,184 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> controller(192.168.56.10)] => (item=lxc.start.order=10)
2025-03-30 18:23:21,200 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-30 18:23:21,287 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:21,301 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-30 18:23:21,408 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:21,423 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-30 18:23:21,538 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:21,559 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-30 18:23:21,867 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:21,882 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-30 18:23:21,937 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:21,966 p=62797 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-30 18:23:22,032 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:22,046 p=62797 u=vagrant n=ansible | TASK [Disabling haproxy backends] **********************************************
2025-03-30 18:23:22,088 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:22,114 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:23:23,584 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:23,594 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:23:23,655 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:23,672 p=62797 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] **************
2025-03-30 18:23:23,781 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:23,790 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] ****************************
2025-03-30 18:23:23,828 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:23,839 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] *****************************
2025-03-30 18:23:23,867 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:23,879 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] ****************************
2025-03-30 18:23:23,973 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_main.yml for controller-galera-container-f800b10b
2025-03-30 18:23:23,986 p=62797 u=vagrant n=ansible | TASK [galera_server : Fail when the host is not in galera_cluster_members] *****
2025-03-30 18:23:24,031 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:24,049 p=62797 u=vagrant n=ansible | TASK [galera_server : Fail if the galera root password is not provided] ********
2025-03-30 18:23:24,100 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:24,114 p=62797 u=vagrant n=ansible | TASK [galera_server : Initialize local facts] **********************************
2025-03-30 18:23:24,959 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:24,979 p=62797 u=vagrant n=ansible | TASK [galera_server : Refresh local facts] *************************************
2025-03-30 18:23:26,245 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:26,254 p=62797 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ********************
2025-03-30 18:23:26,327 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:26,340 p=62797 u=vagrant n=ansible | TASK [galera_server : Cluster state notice] ************************************
2025-03-30 18:23:26,369 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:26,383 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_cluster_state] *******************
2025-03-30 18:23:26,462 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_cluster_state.yml for controller-galera-container-f800b10b
2025-03-30 18:23:26,490 p=62797 u=vagrant n=ansible | TASK [galera_server : Check node status] ***************************************
2025-03-30 18:23:27,179 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:27,191 p=62797 u=vagrant n=ansible | TASK [galera_server : Fail if cluster is out of sync] **************************
2025-03-30 18:23:27,237 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:27,249 p=62797 u=vagrant n=ansible | TASK [galera_server : Check cluster name] **************************************
2025-03-30 18:23:27,839 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:27,851 p=62797 u=vagrant n=ansible | TASK [galera_server : Fail if galera_cluster_name doesnt match provided value] ***
2025-03-30 18:23:27,900 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:27,922 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade] *************************
2025-03-30 18:23:28,003 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_upgrade.yml for controller-galera-container-f800b10b
2025-03-30 18:23:28,046 p=62797 u=vagrant n=ansible | TASK [galera_server : Check mysql version] *************************************
2025-03-30 18:23:28,973 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:28,986 p=62797 u=vagrant n=ansible | TASK [galera_server : Check if major version of Galera is installed] ***********
2025-03-30 18:23:29,019 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:29,034 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_upgrade_pre] *********************
2025-03-30 18:23:29,066 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:29,081 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_install] *************************
2025-03-30 18:23:29,142 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_install.yml for controller-galera-container-f800b10b
2025-03-30 18:23:29,181 p=62797 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ********************************
2025-03-30 18:23:29,267 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:29,281 p=62797 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ************
2025-03-30 18:23:29,352 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-galera-container-f800b10b
2025-03-30 18:23:29,367 p=62797 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] *******************
2025-03-30 18:23:29,493 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:23:29,504 p=62797 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] **********************
2025-03-30 18:23:31,789 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:31,835 p=62797 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] ***
2025-03-30 18:23:32,506 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=MariaDB.list)
2025-03-30 18:23:32,529 p=62797 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] **************
2025-03-30 18:23:35,347 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:35,357 p=62797 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] *********************************
2025-03-30 18:23:36,482 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:23:36,499 p=62797 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] **********
2025-03-30 18:23:36,554 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:36,567 p=62797 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] ******************************
2025-03-30 18:23:37,462 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-30 18:23:38,135 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-30 18:23:38,137 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:38,148 p=62797 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ***************
2025-03-30 18:23:42,321 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:42,334 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_encryption] **********************
2025-03-30 18:23:42,371 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:42,383 p=62797 u=vagrant n=ansible | TASK [galera_server : Record galera has been deployed] *************************
2025-03-30 18:23:42,943 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:42,957 p=62797 u=vagrant n=ansible | TASK [galera_server : Set the galera existing cluster fact] ********************
2025-03-30 18:23:43,035 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:23:43,047 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_post_install] ********************
2025-03-30 18:23:43,175 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_post_install.yml for controller-galera-container-f800b10b
2025-03-30 18:23:43,210 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 18:23:43,961 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-30 18:23:44,503 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/system", "owner": "root", "group": "root"})
2025-03-30 18:23:44,521 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 18:23:45,252 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-30 18:23:46,169 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/run/lock/system", "owner": "root", "group": "root"})
2025-03-30 18:23:46,189 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 18:23:46,846 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/systemd/system/mariadb.service.d", "owner": "root", "group": "root"})
2025-03-30 18:23:46,858 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 18:23:48,377 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadb.conf"})
2025-03-30 18:23:49,768 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/openstack-mariadbcheck@.conf"})
2025-03-30 18:23:49,780 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 18:23:50,904 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service.j2", "dest": "/etc/systemd/system/mariadbcheck@.service", "config_overrides": {}, "config_type": "ini"})
2025-03-30 18:23:50,919 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 18:23:52,331 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/mariadb.service.d/override.conf"})
2025-03-30 18:23:52,348 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 18:23:52,448 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:52,458 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 18:23:53,906 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"src": "systemd-socket.j2", "dest": "/etc/systemd/system/mariadbcheck.socket"})
2025-03-30 18:23:53,923 p=62797 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 18:23:53,979 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:53,992 p=62797 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 18:23:54,126 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadb"})
2025-03-30 18:23:54,136 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-galera-container-f800b10b => (item={"service_name": "mariadbcheck@"})
2025-03-30 18:23:54,169 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load service mariadb] **********************************
2025-03-30 18:23:55,145 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"})
2025-03-30 18:23:55,170 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadb] ************************************
2025-03-30 18:23:55,236 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadb"}) 
2025-03-30 18:23:55,239 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:55,259 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load service mariadbcheck@] ****************************
2025-03-30 18:23:55,313 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-30 18:23:55,316 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:55,335 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load timer mariadbcheck@] ******************************
2025-03-30 18:23:55,402 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={"service_name": "mariadbcheck@"}) 
2025-03-30 18:23:55,411 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:55,422 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 18:23:56,805 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"name": "mariadbcheck.socket", "enabled": true, "state": "__omit_place_holder__ae3539b0984729aeeeb10471925b0611304fe2c4"})
2025-03-30 18:23:56,841 p=62797 u=vagrant n=ansible | TASK [galera_server : Create galera initial secure tool] ***********************
2025-03-30 18:23:56,889 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:56,908 p=62797 u=vagrant n=ansible | TASK [galera_server : Run galera secure] ***************************************
2025-03-30 18:23:56,944 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:23:56,958 p=62797 u=vagrant n=ansible | TASK [galera_server : Create the local directories] ****************************
2025-03-30 18:23:57,594 p=62797 u=vagrant n=ansible | changed: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql', 'owner': 'mysql', 'mode': '02755'})
2025-03-30 18:23:58,172 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/var/lib/mysql/#tmp', 'owner': 'mysql', 'mode': '02755'})
2025-03-30 18:23:58,772 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'path': '/etc/mysql/conf.d'})
2025-03-30 18:23:58,792 p=62797 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-30 18:23:58,969 p=62797 u=vagrant n=ansible | included: pki for controller-galera-container-f800b10b
2025-03-30 18:23:59,014 p=62797 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-30 18:23:59,377 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-galera-container-f800b10b => (item={'name': 'galera_controller-galera-container-f800b10b', 'provider': 'ownca', 'cn': 'controller-galera-container-f800b10b', 'san': 'DNS:controller-galera-container-f800b10b,IP:192.168.56.254,IP:192.168.56.180', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-30 18:23:59,410 p=62797 u=vagrant n=ansible | TASK [pki : Generate certificate private key for galera_controller-galera-container-f800b10b] ***
2025-03-30 18:24:06,044 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-30 18:24:06,057 p=62797 u=vagrant n=ansible | TASK [pki : Create the CSR for galera_controller-galera-container-f800b10b] ****
2025-03-30 18:24:08,423 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-30 18:24:08,437 p=62797 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for galera_controller-galera-container-f800b10b] ***
2025-03-30 18:24:08,486 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:24:08,500 p=62797 u=vagrant n=ansible | TASK [pki : Get certificate info for galera_controller-galera-container-f800b10b] ***
2025-03-30 18:24:08,547 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:24:08,563 p=62797 u=vagrant n=ansible | TASK [pki : Save certificate info for galera_controller-galera-container-f800b10b] ***
2025-03-30 18:24:08,612 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:24:08,627 p=62797 u=vagrant n=ansible | TASK [pki : Create certificate chain for galera_controller-galera-container-f800b10b] ***
2025-03-30 18:24:09,125 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost]
2025-03-30 18:24:09,148 p=62797 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-30 18:24:09,904 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/galera_controller-galera-container-f800b10b-chain.crt', 'dest': '/etc/ssl/certs/galera.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-30 18:24:10,493 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/galera_controller-galera-container-f800b10b.key.pem', 'dest': '/etc/mysql/ssl/galera.key', 'owner': 'mysql', 'group': 'root', 'mode': '0600'})
2025-03-30 18:24:10,957 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/ssl/certs/galera-ca.pem', 'owner': 'root', 'group': 'root', 'mode': '0644'})
2025-03-30 18:24:10,973 p=62797 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-30 18:24:11,634 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/ssl/certs", "state": "directory", "mode": "0755"})
2025-03-30 18:24:12,155 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"path": "/etc/mysql/ssl", "state": "directory", "mode": "0755"})
2025-03-30 18:24:12,168 p=62797 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-30 18:24:13,555 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-30 18:24:14,820 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/mysql/ssl/galera.key", "owner": "mysql", "group": "root", "mode": "0600"})
2025-03-30 18:24:16,127 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={"dest": "/etc/ssl/certs/galera-ca.pem", "owner": "root", "group": "root", "mode": "0644"})
2025-03-30 18:24:16,154 p=62797 u=vagrant n=ansible | TASK [galera_server : Remove existing mariadb configuration files] *************
2025-03-30 18:24:16,198 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:24:16,209 p=62797 u=vagrant n=ansible | TASK [galera_server : Drop mariadb config(s)] **********************************
2025-03-30 18:24:17,213 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'src': 'my.cnf.j2', 'dest': '/etc/mysql/my.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-30 18:24:18,276 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item={'src': 'cluster.cnf.j2', 'dest': '/etc/mysql/conf.d/cluster.cnf', 'config_overrides': {}, 'config_type': 'ini'})
2025-03-30 18:24:18,287 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'debian.cnf.j2', 'dest': '/etc/mysql/debian.cnf', 'config_overrides': {}, 'config_type': 'ini', 'condition': False}) 
2025-03-30 18:24:18,300 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b] => (item={'src': 'client.my.cnf.j2', 'dest': '/root/.my.cnf', 'config_overrides': {}, 'config_type': 'ini', 'mode': '0600', 'condition': False}) 
2025-03-30 18:24:18,320 p=62797 u=vagrant n=ansible | TASK [galera_server : Apply service defaults] **********************************
2025-03-30 18:24:20,290 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:20,300 p=62797 u=vagrant n=ansible | TASK [galera_server : Link mysql and mariadb config files] *********************
2025-03-30 18:24:20,845 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:20,858 p=62797 u=vagrant n=ansible | TASK [galera_server : Remove default mysql_safe_syslog] ************************
2025-03-30 18:24:21,414 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:21,425 p=62797 u=vagrant n=ansible | TASK [galera_server : Create new cluster tool] *********************************
2025-03-30 18:24:22,841 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:22,853 p=62797 u=vagrant n=ansible | TASK [galera_server : Create clustercheck script] ******************************
2025-03-30 18:24:24,249 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:24,260 p=62797 u=vagrant n=ansible | TASK [galera_server : Flush handlers] ******************************************
2025-03-30 18:24:24,273 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_setup] ***************************
2025-03-30 18:24:24,347 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_server_setup.yml for controller-galera-container-f800b10b
2025-03-30 18:24:24,412 p=62797 u=vagrant n=ansible | TASK [galera_server : Fail if upgrade is needed] *******************************
2025-03-30 18:24:25,029 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:25,040 p=62797 u=vagrant n=ansible | TASK [galera_server : Create galera users] *************************************
2025-03-30 18:24:26,145 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-30 18:24:26,834 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-30 18:24:27,538 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-30 18:24:28,197 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b] => (item=None)
2025-03-30 18:24:28,200 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:28,213 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_backups] *************************
2025-03-30 18:24:28,243 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:24:28,261 p=62797 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] **************
2025-03-30 18:24:29,633 p=62797 u=vagrant n=ansible | ok: [controller-galera-container-f800b10b]
2025-03-30 18:24:29,662 p=62797 u=vagrant n=ansible | TASK [Enabling haproxy backends] ***********************************************
2025-03-30 18:24:29,705 p=62797 u=vagrant n=ansible | skipping: [controller-galera-container-f800b10b]
2025-03-30 18:24:29,736 p=62797 u=vagrant n=ansible | PLAY [Gather qdrouterd facts] **************************************************
2025-03-30 18:24:29,737 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:24:29,746 p=62797 u=vagrant n=ansible | PLAY [Create and configure qdrouterd container] ********************************
2025-03-30 18:24:29,747 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:24:29,753 p=62797 u=vagrant n=ansible | PLAY [Install qdrouterd server] ************************************************
2025-03-30 18:24:29,753 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:24:29,765 p=62797 u=vagrant n=ansible | PLAY [Gather etcd facts] *******************************************************
2025-03-30 18:24:29,823 p=62797 u=vagrant n=ansible | PLAY [Create and configure rabbitmq container] *********************************
2025-03-30 18:24:29,836 p=62797 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-30 18:24:29,935 p=62797 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-rabbit-mq-container-6f8ad97c
2025-03-30 18:24:29,944 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-30 18:24:30,012 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:30,022 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-30 18:24:30,533 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-30 18:24:30,549 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-30 18:24:31,059 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-rabbit-mq-container-6f8ad97c'})
2025-03-30 18:24:31,070 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-30 18:24:31,108 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:31,118 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-30 18:24:31,645 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> controller(192.168.56.10)] => (item=lxc.start.order=19)
2025-03-30 18:24:31,657 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-30 18:24:31,717 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:31,733 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-30 18:24:31,796 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:31,806 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-30 18:24:31,866 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:31,882 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-30 18:24:32,030 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:32,041 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-30 18:24:32,076 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:32,093 p=62797 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-30 18:24:32,142 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:32,159 p=62797 u=vagrant n=ansible | TASK [openstack.osa.system_crontab_coordination : Create crontab] **************
2025-03-30 18:24:33,473 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:33,514 p=62797 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:24:33,514 p=62797 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:24:33,526 p=62797 u=vagrant n=ansible | PLAY [Install rabbitmq server] *************************************************
2025-03-30 18:24:33,592 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Gather variables for each operating system] ************
2025-03-30 18:24:33,696 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:33,708 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Download the RabbitMQ package] *************************
2025-03-30 18:24:33,750 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:33,761 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Fail if hosts file is not managed yet] *****************
2025-03-30 18:24:34,296 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:34,308 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure localhost /etc/hosts entry is correct] **********
2025-03-30 18:24:34,943 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:34,951 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Remove hostname record for 127.0.1.1] ******************
2025-03-30 18:24:35,972 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:35,981 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Create the system group] *******************************
2025-03-30 18:24:36,523 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:36,531 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Create the rabbit system user] *************************
2025-03-30 18:24:37,107 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:37,116 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Create the local directories] **************************
2025-03-30 18:24:37,566 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:37,574 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_install tasks] **********************
2025-03-30 18:24:37,654 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_install.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-30 18:24:37,697 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (deb)] *******
2025-03-30 18:24:38,206 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,220 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Get version of installed RabbitMQ package (rpm)] *******
2025-03-30 18:24:38,260 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,270 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Register a fact for the installed RabbitMQ version] ****
2025-03-30 18:24:38,361 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'stdout': '4.0.3-1', 'stderr': '', 'rc': 0, 'cmd': ['dpkg-query', '-f=${Version}', '-W', 'rabbitmq-server'], 'start': '2025-03-30 18:24:38.146594', 'end': '2025-03-30 18:24:38.158028', 'delta': '0:00:00.011434', 'msg': '', 'stdout_lines': ['4.0.3-1'], 'stderr_lines': [], 'failed': False, 'failed_when_result': False})
2025-03-30 18:24:38,378 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={'changed': False, 'skipped': True, 'skip_reason': 'Conditional result was False', 'false_condition': "ansible_facts['pkg_mgr'] == 'dnf'"}) 
2025-03-30 18:24:38,395 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure installed RabbitMQ version is same as expected] ***
2025-03-30 18:24:38,448 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,462 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure that RabbitMQ is running minimal required version for upgrade] ***
2025-03-30 18:24:38,499 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,511 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] ****************
2025-03-30 18:24:38,545 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,556 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_feature_flags tasks] ****************
2025-03-30 18:24:38,600 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,616 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_upgrade_prep tasks] *****************
2025-03-30 18:24:38,644 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:38,657 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including install tasks] *******************************
2025-03-30 18:24:38,748 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/install_apt.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-30 18:24:38,768 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Validate repo config is deb822 format] *****************
2025-03-30 18:24:38,949 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:24:38,959 p=62797 u=vagrant n=ansible | TASK [Run the apt package pinning role] ****************************************
2025-03-30 18:24:39,021 p=62797 u=vagrant n=ansible | included: apt_package_pinning for controller-rabbit-mq-container-6f8ad97c
2025-03-30 18:24:39,042 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:24:40,291 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:40,300 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:24:40,335 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:40,351 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Clean up legacy repository config not in deb822 format] ***
2025-03-30 18:24:40,893 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=RabbitMQ.list)
2025-03-30 18:24:41,378 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item=els_erlang.list)
2025-03-30 18:24:41,395 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure python3-debian package is available] ************
2025-03-30 18:24:43,929 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:43,972 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Manage apt repositories] *******************************
2025-03-30 18:24:44,935 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'RabbitMQ', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-server/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGAyemoBDADMwGfwPLzN0G0TOoiJdboRZOHUk51mtkBemD+JX2XiTvykjj4p\nM5MyRfGKV5YFRw5IkFXqYaNP/dqCAbWkfQG1aNpzPVIqlwwOkNEnNR2dKpiEpiq9\nQ53HbAjMa9eHxvWN65MtvDIXGUIoupVMZAbycsYD9+fZWJrQgRlSb/Lk9cCvYKoy\ndXsfS1TOmglI3yFRgSvr+CM54gIOKpqWJVE+u2ZFq2rw9yh0GQzcOLXmrMStfbla\nakgqe3jpdXKIlI4tSoRaOsIFUjc1DeyZcEJGZyKlo4h1cgVNha8HDiMB9a7bdTCm\nW06ZbUrEz1vTmyFN6WFsLuZ4MRiWkuz0RAA9ePGMYz8DsQoMqusaoFAoQkgJQH4d\nMF+/3MFnK6CXMtkDYqwstcSDqtzbgvW+sOCzA/WGUzw37nwoh+mxIctVPxYsuipT\naX8O9T449mQ61AOFw9MoTRSnf0XNfFUlkh9fQlUK/BWxM0X7A4UUtdMcZC54LsMF\nKHDCC4WHeOpDy1sAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1zZXJ2ZXIpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgMnpqAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEJ9Fh/ImIINCM+4M\nAJmb/bXlShUTN4J1XCSOoUk4rBe0jBb6YbvB0YJrD1FZr/nfwV08sqCxfBvXR41W\n9PwCCPYKUXo1K4TxehfOR4RpiHou+YxnqMiZjLKB9nSTnGj7kSJ8OLEcqUrgV/Uv\nFk0w2IGQf25u6D6NumKuk6CElFxBG5OzBXtBAxUSLzQ7Xz/3IuqaPuA8KPRD25s8\nyDjj2auyZxlfaD+wUNkqaLQ9quXd8IJuUqvz9wNbOItooWypEk2tX48w5i+wd1pP\nAW+NjKuwd0G88nO6J+7oFYXcsh7n3nblJZT0bmUZC9M6kL9llt8Vy/FBkHnP3dX3\n+6EfEXeXPhVJTI7nkNP64XssO4zHg9vQd3rLd6RCfUnA/NjEXvpR6pjoEsPMlD99\n8hsK1c0AhAntSsB2sky7E5p7Rzq8X/SM8aZGDmkitkN2VdnAQsJP0UVq7FnpqBFS\npMxOxGveS5d5sjU3LoHPTg1uOcARcsOH245szVBPtklXOzg7Fazcc+BHmjYmrgeu\nQQ==\n=CfXb\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:24:45,582 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'els_erlang', 'suites': 'jammy', 'uris': 'https://ppa1.rabbitmq.com/rabbitmq/rabbitmq-erlang/deb/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQGNBGBJAVUBDADBhHZA6wqZcmWMALb5Q+H/99kuI1xXGSBTm3/sNU21kMzHL+Tm\nAJrZbSVHflkNdwjQM+xi2Z04xRYZlmE8VI9v788gKm3ojZ4l089aoMW85R0RLxnl\nMy9KyUbpNkayOAVWIHj/AG/OMSrF7G3OcQCcDYLyD9PvIpt2vPgn9TunMkqD1G5o\nhMUOdBBBnzGrgWco2zbORwPM8O8ETtkcZioSp4AWCj7oA/SaugzBQ/3RzSby+1PT\n3cBRJei8RWGK97C9ILzY34SMYa0jj8x183gRRzGlGycyVQhLrHmhozLZFaqBCc5a\n0JtEYJy/yWeVvz+JEbx4VXFENQbWc77Qe9JO9iaPNO43HtOxpuxIOFajFHWnk2e7\nQSnYlZGZQ/7JRHtRu/GcCuqVf+M6jAVx+7rwjCdJ9ROhHYaCmXXODABUPwO0bWIr\nrnJChjSDnQ+aQJgQpcQfITO8FjvVcrQowjMCeIq58nIqq8aBKOEk7xHckQ6BnQSB\nKrHjzkM+6k8ccVMAEQEAAbRFQ2xvdWRzbWl0aCBQYWNrYWdlIChyYWJiaXRtcS9y\nYWJiaXRtcS1lcmxhbmcpIDxzdXBwb3J0QGNsb3Vkc21pdGguaW8+iQG3BBMBCAAh\nBQJgSQFVAhsvBQsJCAcDBRUKCQgLBRYCAwEAAh4BAheAAAoJEOSVu0nMS75bjV4L\n/1lbtAK4qtksPZRoZQJl+s9U7zj7Sqo7Gz9ke90sqt6O96QgKq0/LzACWoeezk9J\nlScTwl1bHg+/TVDdar5pTJf3jOoMxNqpdouF4uhCDhbJkOVYFDUysdYwCvavrF7U\n4zYa01jKuMcF1FJ21qqy9uFqfQsxVrvniIu1+tONbiDqPEVZUcd7ffcndCLBEpA2\nkbFrCj7nD/G3JrO3F6u3/v27lHbpaTbqiL5ovUj5nEA2ACzEgXP69+2MO/2h7mw1\n8kS48QiyTVaZaByN4RwbSmPDDtYXM7Mts59XPaxLrzWEH2wKtpAQdKSaUoTGSwDc\nbJJ/QOvTdHqaOSaEWR6tZnSrjdGElaHzK3xIdaTpipg+y6WKOEfM8WPpBmYrTJ2F\nKGO+mHZY0OdUqdCZohzNtZnbekZUb88UejEvtnOjxmO/22jZxIU7d8ocIV0l7GFf\nGMuKc63PqdMzaztmt+CS0uFscE4kfS3ZyMavW7pRDfB8Y4SqZ17zIdnIfnAucCus\nTg==\n=gGzU\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:24:45,600 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Update apt repositories when config is changed] ********
2025-03-30 18:24:45,632 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:45,644 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ package dependencies] *****************
2025-03-30 18:24:48,478 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:48,489 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Install the RabbitMQ package deb] **********************
2025-03-30 18:24:48,517 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:48,526 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Install RabbitMQ packages] *****************************
2025-03-30 18:24:51,017 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:51,027 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Reload the systemd daemon] *****************************
2025-03-30 18:24:51,059 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:51,068 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure there are no policy-rc files] *******************
2025-03-30 18:24:51,550 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:51,560 p=62797 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-30 18:24:51,662 p=62797 u=vagrant n=ansible | included: pki for controller-rabbit-mq-container-6f8ad97c
2025-03-30 18:24:51,701 p=62797 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-30 18:24:51,808 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/pki/tasks/standalone/create_cert.yml for controller-rabbit-mq-container-6f8ad97c => (item={'name': 'rabbitmq_controller-rabbit-mq-container-6f8ad97c', 'provider': 'ownca', 'cn': 'controller-rabbit-mq-container-6f8ad97c', 'san': 'DNS:controller-rabbit-mq-container-6f8ad97c,IP:192.168.56.214,DNS:controller-rabbit-mq-container-6f8ad97c.openstack.local', 'signed_by': 'ExampleCorpIntermediate'})
2025-03-30 18:24:51,819 p=62797 u=vagrant n=ansible | TASK [pki : Generate certificate private key for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-30 18:24:57,560 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-30 18:24:57,571 p=62797 u=vagrant n=ansible | TASK [pki : Create the CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-30 18:24:59,507 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-30 18:24:59,517 p=62797 u=vagrant n=ansible | TASK [pki : Sign the certificate CSR for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-30 18:24:59,566 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:59,578 p=62797 u=vagrant n=ansible | TASK [pki : Get certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-30 18:24:59,623 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:59,635 p=62797 u=vagrant n=ansible | TASK [pki : Save certificate info for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-30 18:24:59,681 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:24:59,694 p=62797 u=vagrant n=ansible | TASK [pki : Create certificate chain for rabbitmq_controller-rabbit-mq-container-6f8ad97c] ***
2025-03-30 18:25:00,154 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost]
2025-03-30 18:25:00,172 p=62797 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-30 18:25:00,625 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/certs/rabbitmq_controller-rabbit-mq-container-6f8ad97c-chain.crt', 'dest': '/etc/rabbitmq/rabbitmq.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-30 18:25:01,001 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/certs/private/rabbitmq_controller-rabbit-mq-container-6f8ad97c.key.pem', 'dest': '/etc/rabbitmq/rabbitmq.key', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0600'})
2025-03-30 18:25:01,382 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c -> localhost] => (item={'src': '/etc/openstack_deploy/pki/roots/ExampleCorpIntermediate/certs/ExampleCorpIntermediate.crt', 'dest': '/etc/rabbitmq/rabbitmq-ca.pem', 'owner': 'rabbitmq', 'group': 'rabbitmq', 'mode': '0644'})
2025-03-30 18:25:01,395 p=62797 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-30 18:25:02,007 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/rabbitmq", "state": "directory", "mode": "0755"})
2025-03-30 18:25:02,016 p=62797 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-30 18:25:03,261 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-30 18:25:04,333 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq.key", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0600"})
2025-03-30 18:25:05,497 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"dest": "/etc/rabbitmq/rabbitmq-ca.pem", "owner": "rabbitmq", "group": "rabbitmq", "mode": "0644"})
2025-03-30 18:25:05,548 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbit cookie] *************************************
2025-03-30 18:25:07,092 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:07,103 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Create rabbitmq config] ********************************
2025-03-30 18:25:08,589 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq.conf.j2', 'dest': '/etc/rabbitmq/rabbitmq.conf'})
2025-03-30 18:25:09,825 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'advanced.config.j2', 'dest': '/etc/rabbitmq/advanced.config'})
2025-03-30 18:25:11,108 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq-server.j2', 'dest': '/etc/default/rabbitmq-server', 'mode': '0644'})
2025-03-30 18:25:12,373 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'src': 'rabbitmq-env.j2', 'dest': '/etc/rabbitmq/rabbitmq-env.conf'})
2025-03-30 18:25:12,392 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP run dir] ***********************************
2025-03-30 18:25:13,125 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/system", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-30 18:25:13,142 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create TEMP service lock dir] **************************
2025-03-30 18:25:13,831 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/run/lock/system", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-30 18:25:13,844 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create service.d overrides dir] ************************
2025-03-30 18:25:14,518 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"path": "/etc/systemd/system/rabbitmq-server.service.d", "owner": "rabbitmq", "group": "rabbitmq"})
2025-03-30 18:25:14,527 p=62797 u=vagrant n=ansible | TASK [systemd_service : Create tmpfiles.d entry] *******************************
2025-03-30 18:25:16,042 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-tmpfiles.j2", "dest": "/etc/tmpfiles.d/tempd-rabbitmq-server.conf"})
2025-03-30 18:25:16,055 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd service] *****************************
2025-03-30 18:25:16,181 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:16,272 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd override] ****************************
2025-03-30 18:25:17,489 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"src": "systemd-service-overrides.j2", "dest": "/etc/systemd/system/rabbitmq-server.service.d/override.conf"})
2025-03-30 18:25:17,503 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd timer] *******************************
2025-03-30 18:25:17,537 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:17,547 p=62797 u=vagrant n=ansible | TASK [systemd_service : Place the systemd socket] ******************************
2025-03-30 18:25:17,583 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:17,593 p=62797 u=vagrant n=ansible | TASK [systemd_service : Reload systemd on unit change] *************************
2025-03-30 18:25:17,633 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:17,644 p=62797 u=vagrant n=ansible | TASK [systemd_service : Including systemd_load tasks] **************************
2025-03-30 18:25:17,706 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/systemd_service/tasks/systemd_load.yml for controller-rabbit-mq-container-6f8ad97c => (item={"service_name": "rabbitmq-server"})
2025-03-30 18:25:17,731 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load service rabbitmq-server] **************************
2025-03-30 18:25:18,578 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "rabbitmq-server"})
2025-03-30 18:25:18,600 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load timer rabbitmq-server] ****************************
2025-03-30 18:25:18,656 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c] => (item={"service_name": "rabbitmq-server"}) 
2025-03-30 18:25:18,665 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:18,676 p=62797 u=vagrant n=ansible | TASK [systemd_service : Load socket] *******************************************
2025-03-30 18:25:18,723 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:18,740 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Configure rabbitmq plugins] ****************************
2025-03-30 18:25:22,140 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'rabbitmq_management', 'state': 'enabled'})
2025-03-30 18:25:22,149 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Flush handlers] ****************************************
2025-03-30 18:25:22,162 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Gather cluster status] *********************************
2025-03-30 18:25:24,153 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:24,163 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Define cluster_state fact] *****************************
2025-03-30 18:25:24,245 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:24,253 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Set rabbitmq cluster name on primary node] *************
2025-03-30 18:25:24,298 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:24,307 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Join cluster on secondary nodes] ***********************
2025-03-30 18:25:24,347 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:24,361 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_setup tasks] ************************
2025-03-30 18:25:24,425 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/rabbitmq_server/tasks/rabbitmq_setup.yml for controller-rabbit-mq-container-6f8ad97c
2025-03-30 18:25:24,475 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Apply rabbitmq policies] *******************************
2025-03-30 18:25:29,068 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c] => (item={'name': 'CQv2', 'pattern': '.*', 'priority': 0, 'tags': {'queue-version': 2}, 'state': 'present'})
2025-03-30 18:25:29,079 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure default rabbitmq guest user is removed] *********
2025-03-30 18:25:33,370 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:33,380 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Ensure default rabbitmq guest user is removed] *********
2025-03-30 18:25:33,413 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:33,425 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Including rabbitmq_cluster_state tasks] ****************
2025-03-30 18:25:33,481 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:33,493 p=62797 u=vagrant n=ansible | TASK [rabbitmq_server : Importing rabbitmq_feature_flags tasks] ****************
2025-03-30 18:25:33,539 p=62797 u=vagrant n=ansible | skipping: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:33,588 p=62797 u=vagrant n=ansible | PLAY [Ensure rabbitmq user for monitoring GUI] *********************************
2025-03-30 18:25:33,612 p=62797 u=vagrant n=ansible | TASK [Create rabbitmq user for monitoring GUI] *********************************
2025-03-30 18:25:40,476 p=62797 u=vagrant n=ansible | ok: [controller-rabbit-mq-container-6f8ad97c]
2025-03-30 18:25:40,510 p=62797 u=vagrant n=ansible | PLAY [Gather utility facts] ****************************************************
2025-03-30 18:25:40,571 p=62797 u=vagrant n=ansible | PLAY [Setup the utility location(s)] *******************************************
2025-03-30 18:25:40,592 p=62797 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:25:40,631 p=62797 u=vagrant n=ansible | included: openstack.osa.install_defaults for controller-utility-container-7e5b64c5
2025-03-30 18:25:40,648 p=62797 u=vagrant n=ansible | TASK [Including container-setup role] ******************************************
2025-03-30 18:25:40,740 p=62797 u=vagrant n=ansible | included: openstack.osa.lxc_container_setup for controller-utility-container-7e5b64c5
2025-03-30 18:25:40,750 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Set default bind mounts (bind var/log)] ***
2025-03-30 18:25:40,826 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:40,835 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Ensure mount directories exists] *****
2025-03-30 18:25:41,305 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-utility-container-7e5b64c5'})
2025-03-30 18:25:41,323 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Add bind mount configuration to container] ***
2025-03-30 18:25:41,776 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item={'bind_dir_path': '/var/log', 'mount_path': '/openstack/log/controller-utility-container-7e5b64c5'})
2025-03-30 18:25:41,796 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config] ********************
2025-03-30 18:25:41,826 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:41,836 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Extra lxc config no restart] *********
2025-03-30 18:25:42,336 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5 -> controller(192.168.56.10)] => (item=lxc.start.order=100)
2025-03-30 18:25:42,349 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Check container state] ***************
2025-03-30 18:25:42,405 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:42,415 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Lxc container restart] ***************
2025-03-30 18:25:42,501 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:42,524 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Start Container] *********************
2025-03-30 18:25:42,595 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:42,604 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container tmpfiles-setup finish] ***
2025-03-30 18:25:42,748 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:42,760 p=62797 u=vagrant n=ansible | TASK [openstack.osa.lxc_container_setup : Wait for container connectivity] *****
2025-03-30 18:25:42,794 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:42,813 p=62797 u=vagrant n=ansible | TASK [Including unbound-clients role] ******************************************
2025-03-30 18:25:42,867 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:42,878 p=62797 u=vagrant n=ansible | TASK [Create log directory (not is_metal)] *************************************
2025-03-30 18:25:43,378 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:43,395 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Add apt pin preferences] ***************************
2025-03-30 18:25:44,560 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:44,572 p=62797 u=vagrant n=ansible | TASK [apt_package_pinning : Remove apt pin preferences] ************************
2025-03-30 18:25:44,625 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:44,643 p=62797 u=vagrant n=ansible | TASK [galera_server : Gather variables for each operating system] **************
2025-03-30 18:25:44,750 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:44,761 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_client_main] ****************************
2025-03-30 18:25:44,820 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_client_main.yml for controller-utility-container-7e5b64c5
2025-03-30 18:25:44,830 p=62797 u=vagrant n=ansible | TASK [galera_server : Prepare the package list] ********************************
2025-03-30 18:25:44,909 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:44,919 p=62797 u=vagrant n=ansible | TASK [galera_server : Including distro-specific installation tasks] ************
2025-03-30 18:25:44,980 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_install_apt.yml for controller-utility-container-7e5b64c5
2025-03-30 18:25:44,990 p=62797 u=vagrant n=ansible | TASK [galera_server : Validate repo config is deb822 format] *******************
2025-03-30 18:25:45,114 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => {
    "changed": false,
    "msg": "All assertions passed"
}
2025-03-30 18:25:45,124 p=62797 u=vagrant n=ansible | TASK [galera_server : Remove conflicting distro packages] **********************
2025-03-30 18:25:46,479 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:46,491 p=62797 u=vagrant n=ansible | TASK [galera_server : Clean up legacy repository config not in deb822 format] ***
2025-03-30 18:25:46,984 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=MariaDB.list)
2025-03-30 18:25:46,995 p=62797 u=vagrant n=ansible | TASK [galera_server : Ensure python3-debian package is available] **************
2025-03-30 18:25:49,030 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:49,039 p=62797 u=vagrant n=ansible | TASK [galera_server : Manage apt repositories] *********************************
2025-03-30 18:25:49,751 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'name': 'MariaDB', 'suites': 'jammy', 'uris': 'https://mirror.mariadb.org/repo/11.4/ubuntu', 'signed_by': '-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1\n\nmQINBFb8EKsBEADwGmleOSVThrbCyCVUdCreMTKpmD5p5aPz/0jc66050MAb71Hv\nTVcfuMqHYO8O66qXLpEdqZpuk4D+rw1oKyC+d8uPD2PSHRqBXnR0Qf+LVTZvtO92\n3R7pYnC2x6V6iVGpKQYFP8cwh2B1qgIa+9y/N8cQIqfD+0ghyiUjjTYek3YFBnqa\nL/2h2V0Mt0DkBrDK80LqEY10PAFDfJjINAW9XNHZzi2KqUx5w1z8rItokXV6fYE5\nItyGMR6WVajJg5D4VCiZd0ymuQP2bGkrRbl6FH5vofVSkahKMJeHs2lbvMvNyS3c\nn8vxoBvbbcwSAV1gvB1uzXXxv0kdkFZjhU1Tss4+Dak8qeEmIrC5qYycLxIdVEhT\nZ8N8+P7Dll+QGOZKu9+OzhQ+byzpLFhUHKys53eXo/HrfWtw3DdP21yyb5P3QcgF\nscxfZHzZtFNUL6XaVnauZM2lqquUW+lMNdKKGCBJ6co4QxjocsxfISyarcFj6ZR0\n5Hf6VU3Y7AyuFZdL0SQWPv9BSu/swBOimrSiiVHbtE49Nx1x/d1wn1peYl07WRUv\nC10eF36ZoqEuSGmDz59mWlwB3daIYAsAAiBwgcmN7aSB8XD4ZPUVSEZvwSm/IwuS\nRkpde+kIhTLjyv5bRGqU2P/Mi56dB4VFmMJaF26CiRXatxhXOAIAF9dXCwARAQAB\ntC1NYXJpYURCIFNpZ25pbmcgS2V5IDxzaWduaW5nLWtleUBtYXJpYWRiLm9yZz6I\nRgQSEQgABgUCVvwkVgAKCRDLywgqG7lD2ydgAKCHeJ3jUJhMcQs5D/KaPi2K4W3W\nVwCfclT3AfemKEz0hK+h64afDAeFwqeJAhwEEgEIAAYFAlb8JIQACgkQkXEYmZXk\nWp7XVw/8DdCG+qV65FpehLlqkhjeWsMvv1ajRuTJ0ze7YW30SpVUbnNm+WZZpdvD\nnCQ+HNrthSOsPvKVoTvniUcjjyMmncpjtGiwKVj8q6TnoYkj9KgwrHi/nXykBuhn\niGNj0xiCaIC5kRjHkhu/WmPT6GTNEjvz5/r53lBNDrL/flmNJIlwGAIwCv8lGyY6\nQe7pxjqo6mriDya9EBfmK9GbhTETaCfFnJ3YuNjb9LaQJm8dZVpm6JMPQRTWNg+g\n6jp+FzzOOzkVZLnoLW+ntoU4YG+wfeXBgBiLUrZL78HieqmK1gnP9PTMXPPJh7tk\nbvsNcoP9dqMPbYjNEYqOh5U8UHH7ZXRgIKlZmSqR9nYO3dBVb/9AilWw4meZqqiU\nODWzGhoERgG0K2i9TTCHWldbB+fsiCMiQ82XQBTyZbwuX3VYX4uyz+gytQkwpUN6\ndMnr9k7Tpz4kWU/t1LdgYyyJ/CDLlpsDhfLgZakCzIQzryaqwlRztkA1lxAAqvr4\nOvLNJ8g6WyfeQnM61v9zcmFWZuUQ7pfN19kkr9rE86neYXWgQGgnnp8bA7a6yBXB\nAPIu3cmKW4msK8xIEv0q0FlatNkfm3etMw3Q1QAvLgS13pjxX3iLxzk2LEwPKNFT\ntookADC1S/Et3XZ2q1pey68bLMttHgQNP9DkN8sLUNlamC1S0JWJAhwEEgEIAAYF\nAlb8JLYACgkQQd3AtA2lbyIxSg/8CMUrJn6KdBMjaMkkEG2suPFrFlIbmCAKi+jB\nafw1a/ptAGbZW6thUqG9jXFTLGgtjwo34y+h5N2kHe7vP4zrH4J1+hMapZDbJqk4\nLR4QkEU74YWGjZYTSayI7QhpUmvN0VM8TQRhHYEfOIu7QMNJkAN7VZgSqSStmwI2\nCLoQyeCZfaH4MrYaULdba1j2xzrcOyDONwwE725iakePqeLOwisROqi5U1QItPS3\nyIRNrbkx6Gr8j3YjvRB95u/tHh4yuz61ZcrI9TQ6NX7xvyxpmy/XGf3xSR5fBjHg\nkjTg5PCcF4kbzI+sYME7mK5ya1oK/AZDdzvqoGK+sDx4XPdrNHFBhZaIWuQSVOD4\nL8TzclBaCo+89mQjlQe8HAGpyghcbXkAmhcD9lYgHyc8pYppXkoOdjcMG4DiuHky\nHLfHBwL/bYT8KZkxeNRS8OeU+BcJgBhTQUFsaTsmlJhrC0190A3ZcFE+rmwMosvF\n+3HsPy4RIldcCU/GhGHvHUCt0Yz4SjCUknTGkg0FpPRn8eTSPE0gURqTv3r9Z4ap\n7B04iSJ0Czi2mlR/OiyVrkr6pd9bCaFwqanADijKcTzAhqhem2iLz6vFrDg3rABe\nVKtXF4JVOdvv5Rj8FPZbHohDXQL2OuyPpch98y+eAiKcIP0LO9p2avsEQjEq3Us/\n6AYDxmCJAhwEEgEKAAYFAlgTqgMACgkQvthEn87o2ognbg/5AU1rY75DWssqtCK4\n/DhDvejv9uVSkU251l94IOkNtSAnTW7VEedY7ItzKSdqu0CiwUMkimBxdjkjyOwE\ng7khk9EL9QrFkHdFg6GPj1vJIP1E1qkfKr5jnqP0lSjPq2QoUF37qDzkSPx33bjE\nzVSdEJL1x8j1bR9K6dsKLYJcttcUXtX6bc67VJVgYgDGkyfhFfJh+6p4HnBE5HYY\nDkR/pPdLlvKHV1FISCesFOgQ22nmfsnCxz2kOh+O1pSQ7zniXjkioVqsaMIdnC01\nEp3aVwoUyd3WNLSd8aRRufeo0lqbWpoZbHiBdpPzjlWxhhVNvG2QqL6o9Qig7JjH\ng0Sbp8JnLAfvag/5+ZRP99t9IdrmPXft1GqiSRHpEWOcQwGXpYfCCqpSp4hPq325\nXpZbNf2U2uhkUAUv917sffWIhG5lybfwNRk5+NV/2CXB67jIW+4ntxC3JDJ0VAlX\ngsYNP8Lx71NatXX+BYzIwZCVmxFZr6H4V8VRxxC19J1em9LG1d+in59VCYmBRSX3\naOHgr2Nz1rqsinm/VDXISCzaJLnT9X80xKYRwTVcw7EW319f1P5eYoBZnwvbmWkg\nuwdPeYFVaukd1trBRqIGn16XGGfq0WJMVHuoDt2VTJasj4wyUg3BJnYABe+YDYhq\nMf9QiWHGi3GZI2JlghDpRsPd+TiJAjMEEAEKAB0WIQSbL/nYfaStF2O753b4ZBy6\nEO8tSAUCWXLjjAAKCRD4ZBy6EO8tSCSND/9zeYHF8mbrIsAkPizg6Cw+/ilyn8Qq\nY9x3O2ZbT+CXCilRmar2g2jdUwwIa26ytCCkALN9SV6y701aU8IHeiVmR4a6DKCj\nTO5AEqznl4bts/MwvJ9KosrKiBihxoZziWl/iVu+W/HLftgZWsanBP2Ly3ZES0zq\nI8oNwwyyBW02WoV2rcWzYdqq3SbUSSxfr8ZIiuMrgtkRw+SWsY+9RLdL6qTC5oYT\n+NfGdwTiMVBH1JgfoAevpWS3UIb0OCmv4+HQj2fQlGScFihRnWrnVZ0X3jo2mVeQ\nKyR3NYZEeAxQLPdl6EXUXOkqB871l3RhmyaK9X+Dp+tTD9NrI/2DEo+3vPYuzHPK\nHxftyDpMC90b0lsbQ/I8lPVNnyqmM/8+2o9yUewdBAhsZIMVbNEznOeFL7myDLDw\nVYiePDwmPGg5YxrnTjrgR8Z5vaNl/C1GKYkAktYR/8me87vv2dd/lhu9RmB9dpfu\nT9y8JWRTwzugLvHyjoXQ/YuHoWCieSUoR4hG1kFQ1nQuT05KFWqVT3+/Xower8TK\n78xuzQN6fe9iCJjE4FHxzMPVaHi+wqIZ87NDqha2L8MJRFX6JNiElzuZJYzpJPNQ\nWvScKcXHpbSP/MfpmCIUAY7IhdbYPB+MW9hFwEvVFYAQqyIXBis1X4wOieMpeOlU\nHVFr3SiUutlcBYkCOAQTAQgAIgUCVvwQqwIbAwYLCQgHAwIGFQgCCQoLBBYCAwEC\nHgECF4AACgkQ8WVvJMdM0dglnQ//ZnZFRFGRJMcspn8apK89F5F54HsAj5msNqmS\nkb/brGnVjDWKwI7L32m9DuGNMWF1lDvFJFSJP97bvAnFHuzgb9yTlU5WO4nMacHI\n0ubAyN03U40g70+FACzaIXe6ghtVPHNeh/YXwLRZJsqARZu2qUJaVpqkOk3yMoBZ\n2xCw0x1dx2knaixaJpxBHEtEQEaNVGQCKp2NiR6BDgFnQa09QsqNlYJQ2Rpq3nVv\ns7tXX2dLL9Pswzuf6SphAswgcIXwsZ3dBCw2mlGeiVZVHNcx21Hb72IjbWq/qC0d\nwyICDpBwoDuFqUuQJ0hLadZHyDudl5mOrleFyR40asZf/fD+b+XBzNiMxR6v6qzb\nDDl7GlknuqG1K1qUTcS0v+XvMThGWSerANnQhe3EI0+7ZSi8LNmZ1mbxRZ8xIqT/\ndWAvweDNhGvx+jTKPReRyQnuyde+6Gi+Jba2Objo/Ic9ZEqBbiITNSsH6GJenLeK\nS3istGD+IyoqPJ+a9wT9V2YVW2x9t9FW+VpaIhYKd1FNUGQBpO7wPCsbK6BCxuMR\nwr7gTbn9JoogkjCp/GnIFWGu7bXKmAQwDDVjwoLsqe0HuPOkWi0TjCm/WNkpRm7L\nvWh+vuDf/Y77udYutHWadxu5PrJejfXqvnp18rM7FAkGdgXBONd9rrnIECuNAFQI\n81g4qvS5Ag0EVvwQqwEQAMN8Iyy7ZTUJ0mGvjGnrPgnz3+0yekJABILwNCG1nptY\nb+SzIq3YOcNDTnRcESeD7t6nMdYDZSBPSWJjTnNmYWzVftB5mvXoHskA2rp+cc51\nkHROFLskRhs+uiQzFyoAUsBkkKllPnfganNbuofDONX53XcjOIId2Lr4MPl5q9jM\nGpjxDOOU5duYiVjt0lQLBdMQJR+KtzqQfzoJLx9dlOR7hBhnnlWes6iYHhAao/fv\nWTAEROeGWGLvj6m+LeNbTlnnHW1UzC66DLPOSx5mnVViYmrlIc0Vn+mcBAsT2BQN\nNvpRZw8HBCH1LD7tqFIrviUkpibfCS3K9mHMDFs3LOzUznrJ4U/q4XAlMF80HLIw\nBrpMZSE2TGUtxiPEptWagCcoJUzy3jVOUu/9rSSLyJDGq+mFUu5+SxH0ik3p3cXX\nmPoZ7JW3EES/TiK/i9u4q2FbK1v6CNfhsjwICj2MYd6+a12LD9Jt4rHZgEzUwXp6\n5rfusUyig4GPhftV9ALJL5ys2w5CfyckZqFhvNQMIKCdf6mo32Jm9eKwxLv3BXIP\nkPIhIUO9P/mNjshfE+JvGvXQ//yV9bV3va7HIjZSJkpmnIcK3iTjvIyrgpAYsa6H\nEnqro7duLZpdG7PxsupMEtxr12bH3BkW9GHqNL9IoSDt4VxjTFtvpFUi/VTAYNh9\nABEBAAGJAh8EGAEIAAkFAlb8EKsCGwwACgkQ8WVvJMdM0dgQEhAAmEVOHW7fhD7l\nud+IzZ0B0KvpPrDhjW/14+Ihh1IiZ6x4lLbJGCWktwyNbS4QD0peJG0L82b8KWep\ngnMIp4hrB4eofp0iAkppdkW3VRqJrtf20MPCoAsa73uKtSutXUqH0iQzQnb1WJ3l\nqZqSt1LibC3a4QhJKcKLul9WgSuj5Lu1hD2IfoA9UjCpa9xq3LdwA13ApZ9RBnpr\n0hDTzGrNoyEynZXOFWtaSrcHSPZpGhlHsE0sfYjtnSCIgzwBGNmz31pNEv5J8wRD\nexTE0tvcpY/+fWVIVuuTgcbOpQEF9zMRKU1zT3vQLrOcrQfQcPXX/cFOQy4+rDD5\nPN7Hh2kxCWUwQpnfATJ32/ptr6eP8/UUdITL9U3ohfN3zazWVg6icpN2ZcAhE5we\ndvRBTPCx3+aEHeMqEQM5XZlwFMPfIe/ybsL0b3LiFX7vJCWc+VKDcOMGndJLmv6w\n45sIjLYB3fa6mheSKVZr2DsZlK6Fj2TIqp4RtrWWBddpDKQR6rHSl7GRZq82dv0l\no+sBkcONQZxetESaMTJfISVGgPgKtZfJJ7jqMK42FVWWQsajuix5/Kddr/482NCN\nRG3Hx6fsz0DUWRC5EDETwohmBnNjGQaXmjk85IUIDglShE8NyuX+wjd+6rZ0g4T8\nEnavx1X4t12JH6K6SFdHAlcfxFVURRI=\n=gukQ\n-----END PGP PUBLIC KEY BLOCK-----', 'components': 'main', 'architectures': 'amd64', 'state': 'present'})
2025-03-30 18:25:49,773 p=62797 u=vagrant n=ansible | TASK [galera_server : Update apt repositories when config is changed] **********
2025-03-30 18:25:49,804 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:49,814 p=62797 u=vagrant n=ansible | TASK [galera_server : Preseed galera password(s)] ******************************
2025-03-30 18:25:50,460 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=None)
2025-03-30 18:25:50,996 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item=None)
2025-03-30 18:25:51,002 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:51,012 p=62797 u=vagrant n=ansible | TASK [galera_server : Install galera role remote packages (apt)] ***************
2025-03-30 18:25:53,150 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:53,160 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_client_post_install] ********************
2025-03-30 18:25:53,214 p=62797 u=vagrant n=ansible | included: /etc/ansible/roles/galera_server/tasks/galera_client_post_install.yml for controller-utility-container-7e5b64c5
2025-03-30 18:25:53,254 p=62797 u=vagrant n=ansible | TASK [galera_server : Drop local .my.cnf file] *********************************
2025-03-30 18:25:54,206 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,216 p=62797 u=vagrant n=ansible | TASK [Create and install SSL certificates] *************************************
2025-03-30 18:25:54,312 p=62797 u=vagrant n=ansible | included: pki for controller-utility-container-7e5b64c5
2025-03-30 18:25:54,333 p=62797 u=vagrant n=ansible | TASK [pki : Create Server certificates] ****************************************
2025-03-30 18:25:54,378 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,397 p=62797 u=vagrant n=ansible | TASK [pki : Slurp up server certificates from pki setup host (localhost)] ******
2025-03-30 18:25:54,439 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,448 p=62797 u=vagrant n=ansible | TASK [pki : Create certificate destination directories] ************************
2025-03-30 18:25:54,479 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,491 p=62797 u=vagrant n=ansible | TASK [pki : Install Server certificates to targets] ****************************
2025-03-30 18:25:54,515 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,530 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_devel_main] *****************************
2025-03-30 18:25:54,563 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,572 p=62797 u=vagrant n=ansible | TASK [galera_server : Including galera_server_main] ****************************
2025-03-30 18:25:54,599 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:54,614 p=62797 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] ***********************************
2025-03-30 18:25:55,756 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/root/openrc'})
2025-03-30 18:25:55,764 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/root/openrc.system_scope', 'condition': False}) 
2025-03-30 18:25:55,780 p=62797 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] ******
2025-03-30 18:25:56,301 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:56,312 p=62797 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] ******************************
2025-03-30 18:25:57,462 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:57,491 p=62797 u=vagrant n=ansible | TASK [Add OpenStack client to distro packages] *********************************
2025-03-30 18:25:57,519 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:57,527 p=62797 u=vagrant n=ansible | TASK [Install distro packages] *************************************************
2025-03-30 18:25:59,705 p=62797 u=vagrant n=ansible | ok: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:59,715 p=62797 u=vagrant n=ansible | TASK [Distribute private ssh key] **********************************************
2025-03-30 18:25:59,751 p=62797 u=vagrant n=ansible | skipping: [controller-utility-container-7e5b64c5]
2025-03-30 18:25:59,761 p=62797 u=vagrant n=ansible | TASK [Get list of repo packages] ***********************************************
2025-03-30 18:26:03,939 p=62797 u=vagrant n=ansible | fatal: [controller-utility-container-7e5b64c5]: FAILED! => {"changed": false, "content": "", "elapsed": 3, "msg": "Status code was -1 and not [200]: Request failed: <urlopen error [Errno 113] No route to host>", "redirected": false, "status": -1, "url": "http://192.168.56.254:8181/constraints/upper_constraints_cached.txt"}
2025-03-30 18:26:03,955 p=62797 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 18:26:03,956 p=62797 u=vagrant n=ansible | compute                    : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-03-30 18:26:03,956 p=62797 u=vagrant n=ansible | controller                 : ok=0    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-03-30 18:26:03,956 p=62797 u=vagrant n=ansible | controller-galera-container-f800b10b : ok=62   changed=1    unreachable=0    failed=0    skipped=32   rescued=0    ignored=0   
2025-03-30 18:26:03,957 p=62797 u=vagrant n=ansible | controller-memcached-container-71b4149f : ok=14   changed=0    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2025-03-30 18:26:03,957 p=62797 u=vagrant n=ansible | controller-rabbit-mq-container-6f8ad97c : ok=51   changed=0    unreachable=0    failed=0    skipped=31   rescued=0    ignored=0   
2025-03-30 18:26:03,957 p=62797 u=vagrant n=ansible | controller-repo-container-79f4553f : ok=59   changed=0    unreachable=0    failed=0    skipped=42   rescued=1    ignored=0   
2025-03-30 18:26:03,957 p=62797 u=vagrant n=ansible | controller-utility-container-7e5b64c5 : ok=27   changed=0    unreachable=0    failed=1    skipped=16   rescued=0    ignored=0   
2025-03-30 18:26:04,780 p=64453 u=vagrant n=ansible | [DEPRECATION WARNING]: DEFAULT_GATHER_SUBSET option, the module_defaults 
keyword is a more generic version and can apply to all calls to the 
M(ansible.builtin.gather_facts) or M(ansible.builtin.setup) actions, use 
module_defaults instead. This feature will be removed from ansible-core in 
version 2.18. Deprecation warnings can be disabled by setting 
deprecation_warnings=False in ansible.cfg.
2025-03-30 18:26:05,580 p=64453 u=vagrant n=ansible | [WARNING]: Unable to parse /etc/openstack_deploy/inventory.ini as an inventory
source

2025-03-30 18:26:17,072 p=64453 u=vagrant n=ansible | PLAY [Placeholder hook] ********************************************************
2025-03-30 18:26:17,150 p=64453 u=vagrant n=ansible | PLAY [Implement openrc/clouds.yaml on the designated service host] *************
2025-03-30 18:26:17,160 p=64453 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:26:17,198 p=64453 u=vagrant n=ansible | included: openstack.osa.install_defaults for localhost
2025-03-30 18:26:17,220 p=64453 u=vagrant n=ansible | TASK [openstack_openrc : Create openrc file] ***********************************
2025-03-30 18:26:18,761 p=64453 u=vagrant n=ansible | ok: [localhost] => (item={'project_scoped_openrc': None, 'src': 'openrc.j2', 'dest': '/home/vagrant/openrc'})
2025-03-30 18:26:18,776 p=64453 u=vagrant n=ansible | skipping: [localhost] => (item={'system_scoped_openrc': None, 'src': 'openrc-system-scope.j2', 'dest': '/home/vagrant/openrc.system_scope', 'condition': False}) 
2025-03-30 18:26:18,790 p=64453 u=vagrant n=ansible | TASK [openstack_openrc : Create OpenStack client configuration directory] ******
2025-03-30 18:26:19,237 p=64453 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:26:19,246 p=64453 u=vagrant n=ansible | TASK [openstack_openrc : Create clouds.yaml file] ******************************
2025-03-30 18:26:20,179 p=64453 u=vagrant n=ansible | ok: [localhost]
2025-03-30 18:26:20,228 p=64453 u=vagrant n=ansible | PLAY [Gather keystone facts] ***************************************************
2025-03-30 18:26:20,229 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,230 p=64453 u=vagrant n=ansible | PLAY [Pre-service deployment] **************************************************
2025-03-30 18:26:20,230 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,239 p=64453 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:26:20,239 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,248 p=64453 u=vagrant n=ansible | PLAY [Installation and setup of Keystone] **************************************
2025-03-30 18:26:20,248 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,255 p=64453 u=vagrant n=ansible | PLAY [Finalise data migrations if required] ************************************
2025-03-30 18:26:20,256 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,257 p=64453 u=vagrant n=ansible | PLAY [SP/IDP setup] ************************************************************
2025-03-30 18:26:20,258 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,264 p=64453 u=vagrant n=ansible | PLAY [Gather barbican facts] ***************************************************
2025-03-30 18:26:20,265 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,274 p=64453 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:26:20,275 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,283 p=64453 u=vagrant n=ansible | PLAY [Installation and setup of barbican] **************************************
2025-03-30 18:26:20,284 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,293 p=64453 u=vagrant n=ansible | PLAY [Gather placement facts] **************************************************
2025-03-30 18:26:20,293 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,300 p=64453 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:26:20,300 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,310 p=64453 u=vagrant n=ansible | PLAY [Install placement components] ********************************************
2025-03-30 18:26:20,310 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,319 p=64453 u=vagrant n=ansible | PLAY [Gather glance facts] *****************************************************
2025-03-30 18:26:20,320 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,326 p=64453 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:26:20,326 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,334 p=64453 u=vagrant n=ansible | PLAY [Install glance services] *************************************************
2025-03-30 18:26:20,334 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,337 p=64453 u=vagrant n=ansible | PLAY [Gather cinder facts] *****************************************************
2025-03-30 18:26:20,337 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,351 p=64453 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 18:26:20,352 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,366 p=64453 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 18:26:20,366 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,377 p=64453 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 18:26:20,377 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,383 p=64453 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:26:20,384 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,397 p=64453 u=vagrant n=ansible | PLAY [Install cinder services] *************************************************
2025-03-30 18:26:20,397 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:20,403 p=64453 u=vagrant n=ansible | PLAY [Gather nova facts] *******************************************************
2025-03-30 18:26:20,438 p=64453 u=vagrant n=ansible | TASK [Gather minimal facts for nova] *******************************************
2025-03-30 18:26:23,128 p=64453 u=vagrant n=ansible | ok: [compute]
2025-03-30 18:26:23,140 p=64453 u=vagrant n=ansible | TASK [Gather additional facts for nova] ****************************************
2025-03-30 18:26:24,471 p=64453 u=vagrant n=ansible | ok: [compute]
2025-03-30 18:26:24,504 p=64453 u=vagrant n=ansible | PLAY [haproxy] *****************************************************************
2025-03-30 18:26:24,504 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:24,513 p=64453 u=vagrant n=ansible | PLAY [Install nova control-plane services] *************************************
2025-03-30 18:26:24,513 p=64453 u=vagrant n=ansible | skipping: no hosts matched
2025-03-30 18:26:24,528 p=64453 u=vagrant n=ansible | PLAY [Install nova compute services] *******************************************
2025-03-30 18:26:24,679 p=64453 u=vagrant n=ansible | TASK [Setup installation variables] ********************************************
2025-03-30 18:26:24,730 p=64453 u=vagrant n=ansible | included: openstack.osa.install_defaults for compute
2025-03-30 18:26:24,750 p=64453 u=vagrant n=ansible | TASK [Set cinder RBD inuse fact] ***********************************************
2025-03-30 18:26:24,840 p=64453 u=vagrant n=ansible | ok: [compute -> localhost]
2025-03-30 18:26:24,848 p=64453 u=vagrant n=ansible | TASK [Configure container] *****************************************************
2025-03-30 18:26:24,877 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:24,890 p=64453 u=vagrant n=ansible | TASK [Including unbound-clients tasks] *****************************************
2025-03-30 18:26:24,950 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:24,962 p=64453 u=vagrant n=ansible | TASK [Add nbd devices to the compute] ******************************************
2025-03-30 18:26:25,012 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,022 p=64453 u=vagrant n=ansible | TASK [Add net/tun device to the compute] ***************************************
2025-03-30 18:26:25,068 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,079 p=64453 u=vagrant n=ansible | TASK [Check if kvm device exists] **********************************************
2025-03-30 18:26:25,124 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,133 p=64453 u=vagrant n=ansible | TASK [Add kvm device to the compute] *******************************************
2025-03-30 18:26:25,175 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,195 p=64453 u=vagrant n=ansible | TASK [os_nova : Gather variables for each operating system] ********************
2025-03-30 18:26:25,299 p=64453 u=vagrant n=ansible | ok: [compute]
2025-03-30 18:26:25,310 p=64453 u=vagrant n=ansible | TASK [os_nova : Fail when virt type is unsupported] ****************************
2025-03-30 18:26:25,360 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,372 p=64453 u=vagrant n=ansible | TASK [os_nova : Fail if service was deployed using a different installation method] ***
2025-03-30 18:26:25,415 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,426 p=64453 u=vagrant n=ansible | TASK [os_nova : Gather variables for installation method] **********************
2025-03-30 18:26:25,503 p=64453 u=vagrant n=ansible | ok: [compute]
2025-03-30 18:26:25,516 p=64453 u=vagrant n=ansible | TASK [Including osa.db_setup role] *********************************************
2025-03-30 18:26:25,738 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,749 p=64453 u=vagrant n=ansible | TASK [Including osa.mq_setup role] *********************************************
2025-03-30 18:26:25,975 p=64453 u=vagrant n=ansible | skipping: [compute]
2025-03-30 18:26:25,986 p=64453 u=vagrant n=ansible | TASK [os_nova : Including nova_virt_detect tasks] ******************************
2025-03-30 18:26:26,045 p=64453 u=vagrant n=ansible | included: /etc/ansible/roles/os_nova/tasks/nova_virt_detect.yml for compute
2025-03-30 18:26:26,133 p=64453 u=vagrant n=ansible | TASK [os_nova : Get CPU info content and store as var] *************************
2025-03-30 18:26:53,429 p=64453 u=vagrant n=ansible | fatal: [compute]: UNREACHABLE! => {"changed": false, "msg": "Data could not be sent to remote host \"192.168.56.11\". Make sure this host can be reached over ssh: Warning: Permanently added '192.168.56.11' (ED25519) to the list of known hosts.\r\nroot@192.168.56.11: Permission denied (publickey).\r\n", "unreachable": true}
2025-03-30 18:26:53,433 p=64453 u=vagrant n=ansible | PLAY RECAP *********************************************************************
2025-03-30 18:26:53,434 p=64453 u=vagrant n=ansible | compute                    : ok=7    changed=0    unreachable=1    failed=0    skipped=10   rescued=0    ignored=0   
2025-03-30 18:26:53,434 p=64453 u=vagrant n=ansible | localhost                  : ok=4    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
